##################################################
# file: VimService_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      /home/msw/svn/zsi/zsi/scripts/wsdl2py -b --lazy /home/msw/vmware-sdk/SDK/wsdl/vim25/vimService.wsdl
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from VimService_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
DestroyPropertyFilterRequestMsg = GED("urn:vim25", "DestroyPropertyFilter").pyclass

DestroyPropertyFilterResponseMsg = GED("urn:vim25", "DestroyPropertyFilterResponse").pyclass

CreateFilterRequestMsg = GED("urn:vim25", "CreateFilter").pyclass

CreateFilterResponseMsg = GED("urn:vim25", "CreateFilterResponse").pyclass

RetrievePropertiesRequestMsg = GED("urn:vim25", "RetrieveProperties").pyclass

RetrievePropertiesResponseMsg = GED("urn:vim25", "RetrievePropertiesResponse").pyclass

CheckForUpdatesRequestMsg = GED("urn:vim25", "CheckForUpdates").pyclass

CheckForUpdatesResponseMsg = GED("urn:vim25", "CheckForUpdatesResponse").pyclass

WaitForUpdatesRequestMsg = GED("urn:vim25", "WaitForUpdates").pyclass

WaitForUpdatesResponseMsg = GED("urn:vim25", "WaitForUpdatesResponse").pyclass

CancelWaitForUpdatesRequestMsg = GED("urn:vim25", "CancelWaitForUpdates").pyclass

CancelWaitForUpdatesResponseMsg = GED("urn:vim25", "CancelWaitForUpdatesResponse").pyclass

AddAuthorizationRoleRequestMsg = GED("urn:vim25", "AddAuthorizationRole").pyclass

AddAuthorizationRoleResponseMsg = GED("urn:vim25", "AddAuthorizationRoleResponse").pyclass

RemoveAuthorizationRoleRequestMsg = GED("urn:vim25", "RemoveAuthorizationRole").pyclass

RemoveAuthorizationRoleResponseMsg = GED("urn:vim25", "RemoveAuthorizationRoleResponse").pyclass

UpdateAuthorizationRoleRequestMsg = GED("urn:vim25", "UpdateAuthorizationRole").pyclass

UpdateAuthorizationRoleResponseMsg = GED("urn:vim25", "UpdateAuthorizationRoleResponse").pyclass

MergePermissionsRequestMsg = GED("urn:vim25", "MergePermissions").pyclass

MergePermissionsResponseMsg = GED("urn:vim25", "MergePermissionsResponse").pyclass

RetrieveRolePermissionsRequestMsg = GED("urn:vim25", "RetrieveRolePermissions").pyclass

RetrieveRolePermissionsResponseMsg = GED("urn:vim25", "RetrieveRolePermissionsResponse").pyclass

RetrieveEntityPermissionsRequestMsg = GED("urn:vim25", "RetrieveEntityPermissions").pyclass

RetrieveEntityPermissionsResponseMsg = GED("urn:vim25", "RetrieveEntityPermissionsResponse").pyclass

RetrieveAllPermissionsRequestMsg = GED("urn:vim25", "RetrieveAllPermissions").pyclass

RetrieveAllPermissionsResponseMsg = GED("urn:vim25", "RetrieveAllPermissionsResponse").pyclass

SetEntityPermissionsRequestMsg = GED("urn:vim25", "SetEntityPermissions").pyclass

SetEntityPermissionsResponseMsg = GED("urn:vim25", "SetEntityPermissionsResponse").pyclass

ResetEntityPermissionsRequestMsg = GED("urn:vim25", "ResetEntityPermissions").pyclass

ResetEntityPermissionsResponseMsg = GED("urn:vim25", "ResetEntityPermissionsResponse").pyclass

RemoveEntityPermissionRequestMsg = GED("urn:vim25", "RemoveEntityPermission").pyclass

RemoveEntityPermissionResponseMsg = GED("urn:vim25", "RemoveEntityPermissionResponse").pyclass

ReconfigureClusterRequestMsg = GED("urn:vim25", "ReconfigureCluster").pyclass

ReconfigureClusterResponseMsg = GED("urn:vim25", "ReconfigureClusterResponse").pyclass

ReconfigureCluster_TaskRequestMsg = GED("urn:vim25", "ReconfigureCluster_Task").pyclass

ReconfigureCluster_TaskResponseMsg = GED("urn:vim25", "ReconfigureCluster_TaskResponse").pyclass

ApplyRecommendationRequestMsg = GED("urn:vim25", "ApplyRecommendation").pyclass

ApplyRecommendationResponseMsg = GED("urn:vim25", "ApplyRecommendationResponse").pyclass

RecommendHostsForVmRequestMsg = GED("urn:vim25", "RecommendHostsForVm").pyclass

RecommendHostsForVmResponseMsg = GED("urn:vim25", "RecommendHostsForVmResponse").pyclass

AddHostRequestMsg = GED("urn:vim25", "AddHost").pyclass

AddHostResponseMsg = GED("urn:vim25", "AddHostResponse").pyclass

AddHost_TaskRequestMsg = GED("urn:vim25", "AddHost_Task").pyclass

AddHost_TaskResponseMsg = GED("urn:vim25", "AddHost_TaskResponse").pyclass

MoveIntoRequestMsg = GED("urn:vim25", "MoveInto").pyclass

MoveIntoResponseMsg = GED("urn:vim25", "MoveIntoResponse").pyclass

MoveInto_TaskRequestMsg = GED("urn:vim25", "MoveInto_Task").pyclass

MoveInto_TaskResponseMsg = GED("urn:vim25", "MoveInto_TaskResponse").pyclass

MoveHostIntoRequestMsg = GED("urn:vim25", "MoveHostInto").pyclass

MoveHostIntoResponseMsg = GED("urn:vim25", "MoveHostIntoResponse").pyclass

MoveHostInto_TaskRequestMsg = GED("urn:vim25", "MoveHostInto_Task").pyclass

MoveHostInto_TaskResponseMsg = GED("urn:vim25", "MoveHostInto_TaskResponse").pyclass

RefreshRecommendationRequestMsg = GED("urn:vim25", "RefreshRecommendation").pyclass

RefreshRecommendationResponseMsg = GED("urn:vim25", "RefreshRecommendationResponse").pyclass

ReconfigureComputeResourceRequestMsg = GED("urn:vim25", "ReconfigureComputeResource").pyclass

ReconfigureComputeResourceResponseMsg = GED("urn:vim25", "ReconfigureComputeResourceResponse").pyclass

ReconfigureComputeResource_TaskRequestMsg = GED("urn:vim25", "ReconfigureComputeResource_Task").pyclass

ReconfigureComputeResource_TaskResponseMsg = GED("urn:vim25", "ReconfigureComputeResource_TaskResponse").pyclass

AddCustomFieldDefRequestMsg = GED("urn:vim25", "AddCustomFieldDef").pyclass

AddCustomFieldDefResponseMsg = GED("urn:vim25", "AddCustomFieldDefResponse").pyclass

RemoveCustomFieldDefRequestMsg = GED("urn:vim25", "RemoveCustomFieldDef").pyclass

RemoveCustomFieldDefResponseMsg = GED("urn:vim25", "RemoveCustomFieldDefResponse").pyclass

RenameCustomFieldDefRequestMsg = GED("urn:vim25", "RenameCustomFieldDef").pyclass

RenameCustomFieldDefResponseMsg = GED("urn:vim25", "RenameCustomFieldDefResponse").pyclass

SetFieldRequestMsg = GED("urn:vim25", "SetField").pyclass

SetFieldResponseMsg = GED("urn:vim25", "SetFieldResponse").pyclass

DoesCustomizationSpecExistRequestMsg = GED("urn:vim25", "DoesCustomizationSpecExist").pyclass

DoesCustomizationSpecExistResponseMsg = GED("urn:vim25", "DoesCustomizationSpecExistResponse").pyclass

GetCustomizationSpecRequestMsg = GED("urn:vim25", "GetCustomizationSpec").pyclass

GetCustomizationSpecResponseMsg = GED("urn:vim25", "GetCustomizationSpecResponse").pyclass

CreateCustomizationSpecRequestMsg = GED("urn:vim25", "CreateCustomizationSpec").pyclass

CreateCustomizationSpecResponseMsg = GED("urn:vim25", "CreateCustomizationSpecResponse").pyclass

OverwriteCustomizationSpecRequestMsg = GED("urn:vim25", "OverwriteCustomizationSpec").pyclass

OverwriteCustomizationSpecResponseMsg = GED("urn:vim25", "OverwriteCustomizationSpecResponse").pyclass

DeleteCustomizationSpecRequestMsg = GED("urn:vim25", "DeleteCustomizationSpec").pyclass

DeleteCustomizationSpecResponseMsg = GED("urn:vim25", "DeleteCustomizationSpecResponse").pyclass

DuplicateCustomizationSpecRequestMsg = GED("urn:vim25", "DuplicateCustomizationSpec").pyclass

DuplicateCustomizationSpecResponseMsg = GED("urn:vim25", "DuplicateCustomizationSpecResponse").pyclass

RenameCustomizationSpecRequestMsg = GED("urn:vim25", "RenameCustomizationSpec").pyclass

RenameCustomizationSpecResponseMsg = GED("urn:vim25", "RenameCustomizationSpecResponse").pyclass

CustomizationSpecItemToXmlRequestMsg = GED("urn:vim25", "CustomizationSpecItemToXml").pyclass

CustomizationSpecItemToXmlResponseMsg = GED("urn:vim25", "CustomizationSpecItemToXmlResponse").pyclass

XmlToCustomizationSpecItemRequestMsg = GED("urn:vim25", "XmlToCustomizationSpecItem").pyclass

XmlToCustomizationSpecItemResponseMsg = GED("urn:vim25", "XmlToCustomizationSpecItemResponse").pyclass

CheckCustomizationResourcesRequestMsg = GED("urn:vim25", "CheckCustomizationResources").pyclass

CheckCustomizationResourcesResponseMsg = GED("urn:vim25", "CheckCustomizationResourcesResponse").pyclass

QueryConnectionInfoRequestMsg = GED("urn:vim25", "QueryConnectionInfo").pyclass

QueryConnectionInfoResponseMsg = GED("urn:vim25", "QueryConnectionInfoResponse").pyclass

PowerOnMultiVMRequestMsg = GED("urn:vim25", "PowerOnMultiVM").pyclass

PowerOnMultiVMResponseMsg = GED("urn:vim25", "PowerOnMultiVMResponse").pyclass

PowerOnMultiVM_TaskRequestMsg = GED("urn:vim25", "PowerOnMultiVM_Task").pyclass

PowerOnMultiVM_TaskResponseMsg = GED("urn:vim25", "PowerOnMultiVM_TaskResponse").pyclass

RenameDatastoreRequestMsg = GED("urn:vim25", "RenameDatastore").pyclass

RenameDatastoreResponseMsg = GED("urn:vim25", "RenameDatastoreResponse").pyclass

RefreshDatastoreRequestMsg = GED("urn:vim25", "RefreshDatastore").pyclass

RefreshDatastoreResponseMsg = GED("urn:vim25", "RefreshDatastoreResponse").pyclass

DestroyDatastoreRequestMsg = GED("urn:vim25", "DestroyDatastore").pyclass

DestroyDatastoreResponseMsg = GED("urn:vim25", "DestroyDatastoreResponse").pyclass

QueryDescriptionsRequestMsg = GED("urn:vim25", "QueryDescriptions").pyclass

QueryDescriptionsResponseMsg = GED("urn:vim25", "QueryDescriptionsResponse").pyclass

BrowseDiagnosticLogRequestMsg = GED("urn:vim25", "BrowseDiagnosticLog").pyclass

BrowseDiagnosticLogResponseMsg = GED("urn:vim25", "BrowseDiagnosticLogResponse").pyclass

GenerateLogBundlesRequestMsg = GED("urn:vim25", "GenerateLogBundles").pyclass

GenerateLogBundlesResponseMsg = GED("urn:vim25", "GenerateLogBundlesResponse").pyclass

GenerateLogBundles_TaskRequestMsg = GED("urn:vim25", "GenerateLogBundles_Task").pyclass

GenerateLogBundles_TaskResponseMsg = GED("urn:vim25", "GenerateLogBundles_TaskResponse").pyclass

QueryConfigOptionDescriptorRequestMsg = GED("urn:vim25", "QueryConfigOptionDescriptor").pyclass

QueryConfigOptionDescriptorResponseMsg = GED("urn:vim25", "QueryConfigOptionDescriptorResponse").pyclass

QueryConfigOptionRequestMsg = GED("urn:vim25", "QueryConfigOption").pyclass

QueryConfigOptionResponseMsg = GED("urn:vim25", "QueryConfigOptionResponse").pyclass

QueryConfigTargetRequestMsg = GED("urn:vim25", "QueryConfigTarget").pyclass

QueryConfigTargetResponseMsg = GED("urn:vim25", "QueryConfigTargetResponse").pyclass

setCustomValueRequestMsg = GED("urn:vim25", "setCustomValue").pyclass

setCustomValueResponseMsg = GED("urn:vim25", "setCustomValueResponse").pyclass

UnregisterExtensionRequestMsg = GED("urn:vim25", "UnregisterExtension").pyclass

UnregisterExtensionResponseMsg = GED("urn:vim25", "UnregisterExtensionResponse").pyclass

FindExtensionRequestMsg = GED("urn:vim25", "FindExtension").pyclass

FindExtensionResponseMsg = GED("urn:vim25", "FindExtensionResponse").pyclass

RegisterExtensionRequestMsg = GED("urn:vim25", "RegisterExtension").pyclass

RegisterExtensionResponseMsg = GED("urn:vim25", "RegisterExtensionResponse").pyclass

UpdateExtensionRequestMsg = GED("urn:vim25", "UpdateExtension").pyclass

UpdateExtensionResponseMsg = GED("urn:vim25", "UpdateExtensionResponse").pyclass

GetPublicKeyRequestMsg = GED("urn:vim25", "GetPublicKey").pyclass

GetPublicKeyResponseMsg = GED("urn:vim25", "GetPublicKeyResponse").pyclass

SetPublicKeyRequestMsg = GED("urn:vim25", "SetPublicKey").pyclass

SetPublicKeyResponseMsg = GED("urn:vim25", "SetPublicKeyResponse").pyclass

MoveDatastoreFileRequestMsg = GED("urn:vim25", "MoveDatastoreFile").pyclass

MoveDatastoreFileResponseMsg = GED("urn:vim25", "MoveDatastoreFileResponse").pyclass

MoveDatastoreFile_TaskRequestMsg = GED("urn:vim25", "MoveDatastoreFile_Task").pyclass

MoveDatastoreFile_TaskResponseMsg = GED("urn:vim25", "MoveDatastoreFile_TaskResponse").pyclass

CopyDatastoreFileRequestMsg = GED("urn:vim25", "CopyDatastoreFile").pyclass

CopyDatastoreFileResponseMsg = GED("urn:vim25", "CopyDatastoreFileResponse").pyclass

CopyDatastoreFile_TaskRequestMsg = GED("urn:vim25", "CopyDatastoreFile_Task").pyclass

CopyDatastoreFile_TaskResponseMsg = GED("urn:vim25", "CopyDatastoreFile_TaskResponse").pyclass

DeleteDatastoreFileRequestMsg = GED("urn:vim25", "DeleteDatastoreFile").pyclass

DeleteDatastoreFileResponseMsg = GED("urn:vim25", "DeleteDatastoreFileResponse").pyclass

DeleteDatastoreFile_TaskRequestMsg = GED("urn:vim25", "DeleteDatastoreFile_Task").pyclass

DeleteDatastoreFile_TaskResponseMsg = GED("urn:vim25", "DeleteDatastoreFile_TaskResponse").pyclass

MakeDirectoryRequestMsg = GED("urn:vim25", "MakeDirectory").pyclass

MakeDirectoryResponseMsg = GED("urn:vim25", "MakeDirectoryResponse").pyclass

CreateFolderRequestMsg = GED("urn:vim25", "CreateFolder").pyclass

CreateFolderResponseMsg = GED("urn:vim25", "CreateFolderResponse").pyclass

MoveIntoFolderRequestMsg = GED("urn:vim25", "MoveIntoFolder").pyclass

MoveIntoFolderResponseMsg = GED("urn:vim25", "MoveIntoFolderResponse").pyclass

MoveIntoFolder_TaskRequestMsg = GED("urn:vim25", "MoveIntoFolder_Task").pyclass

MoveIntoFolder_TaskResponseMsg = GED("urn:vim25", "MoveIntoFolder_TaskResponse").pyclass

CreateVMRequestMsg = GED("urn:vim25", "CreateVM").pyclass

CreateVMResponseMsg = GED("urn:vim25", "CreateVMResponse").pyclass

CreateVM_TaskRequestMsg = GED("urn:vim25", "CreateVM_Task").pyclass

CreateVM_TaskResponseMsg = GED("urn:vim25", "CreateVM_TaskResponse").pyclass

RegisterVMRequestMsg = GED("urn:vim25", "RegisterVM").pyclass

RegisterVMResponseMsg = GED("urn:vim25", "RegisterVMResponse").pyclass

RegisterVM_TaskRequestMsg = GED("urn:vim25", "RegisterVM_Task").pyclass

RegisterVM_TaskResponseMsg = GED("urn:vim25", "RegisterVM_TaskResponse").pyclass

CreateClusterRequestMsg = GED("urn:vim25", "CreateCluster").pyclass

CreateClusterResponseMsg = GED("urn:vim25", "CreateClusterResponse").pyclass

CreateClusterExRequestMsg = GED("urn:vim25", "CreateClusterEx").pyclass

CreateClusterExResponseMsg = GED("urn:vim25", "CreateClusterExResponse").pyclass

AddStandaloneHostRequestMsg = GED("urn:vim25", "AddStandaloneHost").pyclass

AddStandaloneHostResponseMsg = GED("urn:vim25", "AddStandaloneHostResponse").pyclass

AddStandaloneHost_TaskRequestMsg = GED("urn:vim25", "AddStandaloneHost_Task").pyclass

AddStandaloneHost_TaskResponseMsg = GED("urn:vim25", "AddStandaloneHost_TaskResponse").pyclass

CreateDatacenterRequestMsg = GED("urn:vim25", "CreateDatacenter").pyclass

CreateDatacenterResponseMsg = GED("urn:vim25", "CreateDatacenterResponse").pyclass

UnregisterAndDestroyRequestMsg = GED("urn:vim25", "UnregisterAndDestroy").pyclass

UnregisterAndDestroyResponseMsg = GED("urn:vim25", "UnregisterAndDestroyResponse").pyclass

UnregisterAndDestroy_TaskRequestMsg = GED("urn:vim25", "UnregisterAndDestroy_Task").pyclass

UnregisterAndDestroy_TaskResponseMsg = GED("urn:vim25", "UnregisterAndDestroy_TaskResponse").pyclass

SetCollectorPageSizeRequestMsg = GED("urn:vim25", "SetCollectorPageSize").pyclass

SetCollectorPageSizeResponseMsg = GED("urn:vim25", "SetCollectorPageSizeResponse").pyclass

RewindCollectorRequestMsg = GED("urn:vim25", "RewindCollector").pyclass

RewindCollectorResponseMsg = GED("urn:vim25", "RewindCollectorResponse").pyclass

ResetCollectorRequestMsg = GED("urn:vim25", "ResetCollector").pyclass

ResetCollectorResponseMsg = GED("urn:vim25", "ResetCollectorResponse").pyclass

DestroyCollectorRequestMsg = GED("urn:vim25", "DestroyCollector").pyclass

DestroyCollectorResponseMsg = GED("urn:vim25", "DestroyCollectorResponse").pyclass

QueryHostConnectionInfoRequestMsg = GED("urn:vim25", "QueryHostConnectionInfo").pyclass

QueryHostConnectionInfoResponseMsg = GED("urn:vim25", "QueryHostConnectionInfoResponse").pyclass

UpdateSystemResourcesRequestMsg = GED("urn:vim25", "UpdateSystemResources").pyclass

UpdateSystemResourcesResponseMsg = GED("urn:vim25", "UpdateSystemResourcesResponse").pyclass

ReconnectHostRequestMsg = GED("urn:vim25", "ReconnectHost").pyclass

ReconnectHostResponseMsg = GED("urn:vim25", "ReconnectHostResponse").pyclass

ReconnectHost_TaskRequestMsg = GED("urn:vim25", "ReconnectHost_Task").pyclass

ReconnectHost_TaskResponseMsg = GED("urn:vim25", "ReconnectHost_TaskResponse").pyclass

DisconnectHostRequestMsg = GED("urn:vim25", "DisconnectHost").pyclass

DisconnectHostResponseMsg = GED("urn:vim25", "DisconnectHostResponse").pyclass

DisconnectHost_TaskRequestMsg = GED("urn:vim25", "DisconnectHost_Task").pyclass

DisconnectHost_TaskResponseMsg = GED("urn:vim25", "DisconnectHost_TaskResponse").pyclass

EnterMaintenanceModeRequestMsg = GED("urn:vim25", "EnterMaintenanceMode").pyclass

EnterMaintenanceModeResponseMsg = GED("urn:vim25", "EnterMaintenanceModeResponse").pyclass

EnterMaintenanceMode_TaskRequestMsg = GED("urn:vim25", "EnterMaintenanceMode_Task").pyclass

EnterMaintenanceMode_TaskResponseMsg = GED("urn:vim25", "EnterMaintenanceMode_TaskResponse").pyclass

ExitMaintenanceModeRequestMsg = GED("urn:vim25", "ExitMaintenanceMode").pyclass

ExitMaintenanceModeResponseMsg = GED("urn:vim25", "ExitMaintenanceModeResponse").pyclass

ExitMaintenanceMode_TaskRequestMsg = GED("urn:vim25", "ExitMaintenanceMode_Task").pyclass

ExitMaintenanceMode_TaskResponseMsg = GED("urn:vim25", "ExitMaintenanceMode_TaskResponse").pyclass

RebootHostRequestMsg = GED("urn:vim25", "RebootHost").pyclass

RebootHostResponseMsg = GED("urn:vim25", "RebootHostResponse").pyclass

RebootHost_TaskRequestMsg = GED("urn:vim25", "RebootHost_Task").pyclass

RebootHost_TaskResponseMsg = GED("urn:vim25", "RebootHost_TaskResponse").pyclass

ShutdownHostRequestMsg = GED("urn:vim25", "ShutdownHost").pyclass

ShutdownHostResponseMsg = GED("urn:vim25", "ShutdownHostResponse").pyclass

ShutdownHost_TaskRequestMsg = GED("urn:vim25", "ShutdownHost_Task").pyclass

ShutdownHost_TaskResponseMsg = GED("urn:vim25", "ShutdownHost_TaskResponse").pyclass

PowerDownHostToStandByRequestMsg = GED("urn:vim25", "PowerDownHostToStandBy").pyclass

PowerDownHostToStandByResponseMsg = GED("urn:vim25", "PowerDownHostToStandByResponse").pyclass

PowerDownHostToStandBy_TaskRequestMsg = GED("urn:vim25", "PowerDownHostToStandBy_Task").pyclass

PowerDownHostToStandBy_TaskResponseMsg = GED("urn:vim25", "PowerDownHostToStandBy_TaskResponse").pyclass

PowerUpHostFromStandByRequestMsg = GED("urn:vim25", "PowerUpHostFromStandBy").pyclass

PowerUpHostFromStandByResponseMsg = GED("urn:vim25", "PowerUpHostFromStandByResponse").pyclass

PowerUpHostFromStandBy_TaskRequestMsg = GED("urn:vim25", "PowerUpHostFromStandBy_Task").pyclass

PowerUpHostFromStandBy_TaskResponseMsg = GED("urn:vim25", "PowerUpHostFromStandBy_TaskResponse").pyclass

QueryMemoryOverheadRequestMsg = GED("urn:vim25", "QueryMemoryOverhead").pyclass

QueryMemoryOverheadResponseMsg = GED("urn:vim25", "QueryMemoryOverheadResponse").pyclass

QueryMemoryOverheadExRequestMsg = GED("urn:vim25", "QueryMemoryOverheadEx").pyclass

QueryMemoryOverheadExResponseMsg = GED("urn:vim25", "QueryMemoryOverheadExResponse").pyclass

ReconfigureHostForDASRequestMsg = GED("urn:vim25", "ReconfigureHostForDAS").pyclass

ReconfigureHostForDASResponseMsg = GED("urn:vim25", "ReconfigureHostForDASResponse").pyclass

ReconfigureHostForDAS_TaskRequestMsg = GED("urn:vim25", "ReconfigureHostForDAS_Task").pyclass

ReconfigureHostForDAS_TaskResponseMsg = GED("urn:vim25", "ReconfigureHostForDAS_TaskResponse").pyclass

UpdateFlagsRequestMsg = GED("urn:vim25", "UpdateFlags").pyclass

UpdateFlagsResponseMsg = GED("urn:vim25", "UpdateFlagsResponse").pyclass

AcquireCimServicesTicketRequestMsg = GED("urn:vim25", "AcquireCimServicesTicket").pyclass

AcquireCimServicesTicketResponseMsg = GED("urn:vim25", "AcquireCimServicesTicketResponse").pyclass

QuerySupportedFeaturesRequestMsg = GED("urn:vim25", "QuerySupportedFeatures").pyclass

QuerySupportedFeaturesResponseMsg = GED("urn:vim25", "QuerySupportedFeaturesResponse").pyclass

QueryLicenseSourceAvailabilityRequestMsg = GED("urn:vim25", "QueryLicenseSourceAvailability").pyclass

QueryLicenseSourceAvailabilityResponseMsg = GED("urn:vim25", "QueryLicenseSourceAvailabilityResponse").pyclass

QueryLicenseUsageRequestMsg = GED("urn:vim25", "QueryLicenseUsage").pyclass

QueryLicenseUsageResponseMsg = GED("urn:vim25", "QueryLicenseUsageResponse").pyclass

SetLicenseEditionRequestMsg = GED("urn:vim25", "SetLicenseEdition").pyclass

SetLicenseEditionResponseMsg = GED("urn:vim25", "SetLicenseEditionResponse").pyclass

CheckLicenseFeatureRequestMsg = GED("urn:vim25", "CheckLicenseFeature").pyclass

CheckLicenseFeatureResponseMsg = GED("urn:vim25", "CheckLicenseFeatureResponse").pyclass

EnableFeatureRequestMsg = GED("urn:vim25", "EnableFeature").pyclass

EnableFeatureResponseMsg = GED("urn:vim25", "EnableFeatureResponse").pyclass

DisableFeatureRequestMsg = GED("urn:vim25", "DisableFeature").pyclass

DisableFeatureResponseMsg = GED("urn:vim25", "DisableFeatureResponse").pyclass

ConfigureLicenseSourceRequestMsg = GED("urn:vim25", "ConfigureLicenseSource").pyclass

ConfigureLicenseSourceResponseMsg = GED("urn:vim25", "ConfigureLicenseSourceResponse").pyclass

ReloadRequestMsg = GED("urn:vim25", "Reload").pyclass

ReloadResponseMsg = GED("urn:vim25", "ReloadResponse").pyclass

RenameRequestMsg = GED("urn:vim25", "Rename").pyclass

RenameResponseMsg = GED("urn:vim25", "RenameResponse").pyclass

Rename_TaskRequestMsg = GED("urn:vim25", "Rename_Task").pyclass

Rename_TaskResponseMsg = GED("urn:vim25", "Rename_TaskResponse").pyclass

DestroyRequestMsg = GED("urn:vim25", "Destroy").pyclass

DestroyResponseMsg = GED("urn:vim25", "DestroyResponse").pyclass

Destroy_TaskRequestMsg = GED("urn:vim25", "Destroy_Task").pyclass

Destroy_TaskResponseMsg = GED("urn:vim25", "Destroy_TaskResponse").pyclass

DestroyNetworkRequestMsg = GED("urn:vim25", "DestroyNetwork").pyclass

DestroyNetworkResponseMsg = GED("urn:vim25", "DestroyNetworkResponse").pyclass

QueryPerfProviderSummaryRequestMsg = GED("urn:vim25", "QueryPerfProviderSummary").pyclass

QueryPerfProviderSummaryResponseMsg = GED("urn:vim25", "QueryPerfProviderSummaryResponse").pyclass

QueryAvailablePerfMetricRequestMsg = GED("urn:vim25", "QueryAvailablePerfMetric").pyclass

QueryAvailablePerfMetricResponseMsg = GED("urn:vim25", "QueryAvailablePerfMetricResponse").pyclass

QueryPerfCounterRequestMsg = GED("urn:vim25", "QueryPerfCounter").pyclass

QueryPerfCounterResponseMsg = GED("urn:vim25", "QueryPerfCounterResponse").pyclass

QueryPerfCounterByLevelRequestMsg = GED("urn:vim25", "QueryPerfCounterByLevel").pyclass

QueryPerfCounterByLevelResponseMsg = GED("urn:vim25", "QueryPerfCounterByLevelResponse").pyclass

QueryPerfRequestMsg = GED("urn:vim25", "QueryPerf").pyclass

QueryPerfResponseMsg = GED("urn:vim25", "QueryPerfResponse").pyclass

QueryPerfCompositeRequestMsg = GED("urn:vim25", "QueryPerfComposite").pyclass

QueryPerfCompositeResponseMsg = GED("urn:vim25", "QueryPerfCompositeResponse").pyclass

CreatePerfIntervalRequestMsg = GED("urn:vim25", "CreatePerfInterval").pyclass

CreatePerfIntervalResponseMsg = GED("urn:vim25", "CreatePerfIntervalResponse").pyclass

RemovePerfIntervalRequestMsg = GED("urn:vim25", "RemovePerfInterval").pyclass

RemovePerfIntervalResponseMsg = GED("urn:vim25", "RemovePerfIntervalResponse").pyclass

UpdatePerfIntervalRequestMsg = GED("urn:vim25", "UpdatePerfInterval").pyclass

UpdatePerfIntervalResponseMsg = GED("urn:vim25", "UpdatePerfIntervalResponse").pyclass

UpdateConfigRequestMsg = GED("urn:vim25", "UpdateConfig").pyclass

UpdateConfigResponseMsg = GED("urn:vim25", "UpdateConfigResponse").pyclass

MoveIntoResourcePoolRequestMsg = GED("urn:vim25", "MoveIntoResourcePool").pyclass

MoveIntoResourcePoolResponseMsg = GED("urn:vim25", "MoveIntoResourcePoolResponse").pyclass

UpdateChildResourceConfigurationRequestMsg = GED("urn:vim25", "UpdateChildResourceConfiguration").pyclass

UpdateChildResourceConfigurationResponseMsg = GED("urn:vim25", "UpdateChildResourceConfigurationResponse").pyclass

CreateResourcePoolRequestMsg = GED("urn:vim25", "CreateResourcePool").pyclass

CreateResourcePoolResponseMsg = GED("urn:vim25", "CreateResourcePoolResponse").pyclass

DestroyChildrenRequestMsg = GED("urn:vim25", "DestroyChildren").pyclass

DestroyChildrenResponseMsg = GED("urn:vim25", "DestroyChildrenResponse").pyclass

FindByUuidRequestMsg = GED("urn:vim25", "FindByUuid").pyclass

FindByUuidResponseMsg = GED("urn:vim25", "FindByUuidResponse").pyclass

FindByDatastorePathRequestMsg = GED("urn:vim25", "FindByDatastorePath").pyclass

FindByDatastorePathResponseMsg = GED("urn:vim25", "FindByDatastorePathResponse").pyclass

FindByDnsNameRequestMsg = GED("urn:vim25", "FindByDnsName").pyclass

FindByDnsNameResponseMsg = GED("urn:vim25", "FindByDnsNameResponse").pyclass

FindByIpRequestMsg = GED("urn:vim25", "FindByIp").pyclass

FindByIpResponseMsg = GED("urn:vim25", "FindByIpResponse").pyclass

FindByInventoryPathRequestMsg = GED("urn:vim25", "FindByInventoryPath").pyclass

FindByInventoryPathResponseMsg = GED("urn:vim25", "FindByInventoryPathResponse").pyclass

FindChildRequestMsg = GED("urn:vim25", "FindChild").pyclass

FindChildResponseMsg = GED("urn:vim25", "FindChildResponse").pyclass

CurrentTimeRequestMsg = GED("urn:vim25", "CurrentTime").pyclass

CurrentTimeResponseMsg = GED("urn:vim25", "CurrentTimeResponse").pyclass

RetrieveServiceContentRequestMsg = GED("urn:vim25", "RetrieveServiceContent").pyclass

RetrieveServiceContentResponseMsg = GED("urn:vim25", "RetrieveServiceContentResponse").pyclass

ValidateMigrationRequestMsg = GED("urn:vim25", "ValidateMigration").pyclass

ValidateMigrationResponseMsg = GED("urn:vim25", "ValidateMigrationResponse").pyclass

QueryVMotionCompatibilityRequestMsg = GED("urn:vim25", "QueryVMotionCompatibility").pyclass

QueryVMotionCompatibilityResponseMsg = GED("urn:vim25", "QueryVMotionCompatibilityResponse").pyclass

RetrieveProductComponentsRequestMsg = GED("urn:vim25", "RetrieveProductComponents").pyclass

RetrieveProductComponentsResponseMsg = GED("urn:vim25", "RetrieveProductComponentsResponse").pyclass

UpdateServiceMessageRequestMsg = GED("urn:vim25", "UpdateServiceMessage").pyclass

UpdateServiceMessageResponseMsg = GED("urn:vim25", "UpdateServiceMessageResponse").pyclass

LoginRequestMsg = GED("urn:vim25", "Login").pyclass

LoginResponseMsg = GED("urn:vim25", "LoginResponse").pyclass

LoginBySSPIRequestMsg = GED("urn:vim25", "LoginBySSPI").pyclass

LoginBySSPIResponseMsg = GED("urn:vim25", "LoginBySSPIResponse").pyclass

LogoutRequestMsg = GED("urn:vim25", "Logout").pyclass

LogoutResponseMsg = GED("urn:vim25", "LogoutResponse").pyclass

AcquireLocalTicketRequestMsg = GED("urn:vim25", "AcquireLocalTicket").pyclass

AcquireLocalTicketResponseMsg = GED("urn:vim25", "AcquireLocalTicketResponse").pyclass

TerminateSessionRequestMsg = GED("urn:vim25", "TerminateSession").pyclass

TerminateSessionResponseMsg = GED("urn:vim25", "TerminateSessionResponse").pyclass

SetLocaleRequestMsg = GED("urn:vim25", "SetLocale").pyclass

SetLocaleResponseMsg = GED("urn:vim25", "SetLocaleResponse").pyclass

ImpersonateUserRequestMsg = GED("urn:vim25", "ImpersonateUser").pyclass

ImpersonateUserResponseMsg = GED("urn:vim25", "ImpersonateUserResponse").pyclass

SessionIsActiveRequestMsg = GED("urn:vim25", "SessionIsActive").pyclass

SessionIsActiveResponseMsg = GED("urn:vim25", "SessionIsActiveResponse").pyclass

CancelTaskRequestMsg = GED("urn:vim25", "CancelTask").pyclass

CancelTaskResponseMsg = GED("urn:vim25", "CancelTaskResponse").pyclass

UpdateProgressRequestMsg = GED("urn:vim25", "UpdateProgress").pyclass

UpdateProgressResponseMsg = GED("urn:vim25", "UpdateProgressResponse").pyclass

SetTaskStateRequestMsg = GED("urn:vim25", "SetTaskState").pyclass

SetTaskStateResponseMsg = GED("urn:vim25", "SetTaskStateResponse").pyclass

ReadNextTasksRequestMsg = GED("urn:vim25", "ReadNextTasks").pyclass

ReadNextTasksResponseMsg = GED("urn:vim25", "ReadNextTasksResponse").pyclass

ReadPreviousTasksRequestMsg = GED("urn:vim25", "ReadPreviousTasks").pyclass

ReadPreviousTasksResponseMsg = GED("urn:vim25", "ReadPreviousTasksResponse").pyclass

CreateCollectorForTasksRequestMsg = GED("urn:vim25", "CreateCollectorForTasks").pyclass

CreateCollectorForTasksResponseMsg = GED("urn:vim25", "CreateCollectorForTasksResponse").pyclass

CreateTaskRequestMsg = GED("urn:vim25", "CreateTask").pyclass

CreateTaskResponseMsg = GED("urn:vim25", "CreateTaskResponse").pyclass

RetrieveUserGroupsRequestMsg = GED("urn:vim25", "RetrieveUserGroups").pyclass

RetrieveUserGroupsResponseMsg = GED("urn:vim25", "RetrieveUserGroupsResponse").pyclass

CreateVirtualDiskRequestMsg = GED("urn:vim25", "CreateVirtualDisk").pyclass

CreateVirtualDiskResponseMsg = GED("urn:vim25", "CreateVirtualDiskResponse").pyclass

CreateVirtualDisk_TaskRequestMsg = GED("urn:vim25", "CreateVirtualDisk_Task").pyclass

CreateVirtualDisk_TaskResponseMsg = GED("urn:vim25", "CreateVirtualDisk_TaskResponse").pyclass

DeleteVirtualDiskRequestMsg = GED("urn:vim25", "DeleteVirtualDisk").pyclass

DeleteVirtualDiskResponseMsg = GED("urn:vim25", "DeleteVirtualDiskResponse").pyclass

DeleteVirtualDisk_TaskRequestMsg = GED("urn:vim25", "DeleteVirtualDisk_Task").pyclass

DeleteVirtualDisk_TaskResponseMsg = GED("urn:vim25", "DeleteVirtualDisk_TaskResponse").pyclass

MoveVirtualDiskRequestMsg = GED("urn:vim25", "MoveVirtualDisk").pyclass

MoveVirtualDiskResponseMsg = GED("urn:vim25", "MoveVirtualDiskResponse").pyclass

MoveVirtualDisk_TaskRequestMsg = GED("urn:vim25", "MoveVirtualDisk_Task").pyclass

MoveVirtualDisk_TaskResponseMsg = GED("urn:vim25", "MoveVirtualDisk_TaskResponse").pyclass

CopyVirtualDiskRequestMsg = GED("urn:vim25", "CopyVirtualDisk").pyclass

CopyVirtualDiskResponseMsg = GED("urn:vim25", "CopyVirtualDiskResponse").pyclass

CopyVirtualDisk_TaskRequestMsg = GED("urn:vim25", "CopyVirtualDisk_Task").pyclass

CopyVirtualDisk_TaskResponseMsg = GED("urn:vim25", "CopyVirtualDisk_TaskResponse").pyclass

ExtendVirtualDiskRequestMsg = GED("urn:vim25", "ExtendVirtualDisk").pyclass

ExtendVirtualDiskResponseMsg = GED("urn:vim25", "ExtendVirtualDiskResponse").pyclass

ExtendVirtualDisk_TaskRequestMsg = GED("urn:vim25", "ExtendVirtualDisk_Task").pyclass

ExtendVirtualDisk_TaskResponseMsg = GED("urn:vim25", "ExtendVirtualDisk_TaskResponse").pyclass

QueryVirtualDiskFragmentationRequestMsg = GED("urn:vim25", "QueryVirtualDiskFragmentation").pyclass

QueryVirtualDiskFragmentationResponseMsg = GED("urn:vim25", "QueryVirtualDiskFragmentationResponse").pyclass

DefragmentVirtualDiskRequestMsg = GED("urn:vim25", "DefragmentVirtualDisk").pyclass

DefragmentVirtualDiskResponseMsg = GED("urn:vim25", "DefragmentVirtualDiskResponse").pyclass

DefragmentVirtualDisk_TaskRequestMsg = GED("urn:vim25", "DefragmentVirtualDisk_Task").pyclass

DefragmentVirtualDisk_TaskResponseMsg = GED("urn:vim25", "DefragmentVirtualDisk_TaskResponse").pyclass

ShrinkVirtualDiskRequestMsg = GED("urn:vim25", "ShrinkVirtualDisk").pyclass

ShrinkVirtualDiskResponseMsg = GED("urn:vim25", "ShrinkVirtualDiskResponse").pyclass

ShrinkVirtualDisk_TaskRequestMsg = GED("urn:vim25", "ShrinkVirtualDisk_Task").pyclass

ShrinkVirtualDisk_TaskResponseMsg = GED("urn:vim25", "ShrinkVirtualDisk_TaskResponse").pyclass

InflateVirtualDiskRequestMsg = GED("urn:vim25", "InflateVirtualDisk").pyclass

InflateVirtualDiskResponseMsg = GED("urn:vim25", "InflateVirtualDiskResponse").pyclass

InflateVirtualDisk_TaskRequestMsg = GED("urn:vim25", "InflateVirtualDisk_Task").pyclass

InflateVirtualDisk_TaskResponseMsg = GED("urn:vim25", "InflateVirtualDisk_TaskResponse").pyclass

ZeroFillVirtualDiskRequestMsg = GED("urn:vim25", "ZeroFillVirtualDisk").pyclass

ZeroFillVirtualDiskResponseMsg = GED("urn:vim25", "ZeroFillVirtualDiskResponse").pyclass

ZeroFillVirtualDisk_TaskRequestMsg = GED("urn:vim25", "ZeroFillVirtualDisk_Task").pyclass

ZeroFillVirtualDisk_TaskResponseMsg = GED("urn:vim25", "ZeroFillVirtualDisk_TaskResponse").pyclass

SetVirtualDiskUuidRequestMsg = GED("urn:vim25", "SetVirtualDiskUuid").pyclass

SetVirtualDiskUuidResponseMsg = GED("urn:vim25", "SetVirtualDiskUuidResponse").pyclass

QueryVirtualDiskUuidRequestMsg = GED("urn:vim25", "QueryVirtualDiskUuid").pyclass

QueryVirtualDiskUuidResponseMsg = GED("urn:vim25", "QueryVirtualDiskUuidResponse").pyclass

QueryVirtualDiskGeometryRequestMsg = GED("urn:vim25", "QueryVirtualDiskGeometry").pyclass

QueryVirtualDiskGeometryResponseMsg = GED("urn:vim25", "QueryVirtualDiskGeometryResponse").pyclass

CreateSnapshotRequestMsg = GED("urn:vim25", "CreateSnapshot").pyclass

CreateSnapshotResponseMsg = GED("urn:vim25", "CreateSnapshotResponse").pyclass

CreateSnapshot_TaskRequestMsg = GED("urn:vim25", "CreateSnapshot_Task").pyclass

CreateSnapshot_TaskResponseMsg = GED("urn:vim25", "CreateSnapshot_TaskResponse").pyclass

RevertToCurrentSnapshotRequestMsg = GED("urn:vim25", "RevertToCurrentSnapshot").pyclass

RevertToCurrentSnapshotResponseMsg = GED("urn:vim25", "RevertToCurrentSnapshotResponse").pyclass

RevertToCurrentSnapshot_TaskRequestMsg = GED("urn:vim25", "RevertToCurrentSnapshot_Task").pyclass

RevertToCurrentSnapshot_TaskResponseMsg = GED("urn:vim25", "RevertToCurrentSnapshot_TaskResponse").pyclass

RemoveAllSnapshotsRequestMsg = GED("urn:vim25", "RemoveAllSnapshots").pyclass

RemoveAllSnapshotsResponseMsg = GED("urn:vim25", "RemoveAllSnapshotsResponse").pyclass

RemoveAllSnapshots_TaskRequestMsg = GED("urn:vim25", "RemoveAllSnapshots_Task").pyclass

RemoveAllSnapshots_TaskResponseMsg = GED("urn:vim25", "RemoveAllSnapshots_TaskResponse").pyclass

ReconfigVMRequestMsg = GED("urn:vim25", "ReconfigVM").pyclass

ReconfigVMResponseMsg = GED("urn:vim25", "ReconfigVMResponse").pyclass

ReconfigVM_TaskRequestMsg = GED("urn:vim25", "ReconfigVM_Task").pyclass

ReconfigVM_TaskResponseMsg = GED("urn:vim25", "ReconfigVM_TaskResponse").pyclass

UpgradeVMRequestMsg = GED("urn:vim25", "UpgradeVM").pyclass

UpgradeVMResponseMsg = GED("urn:vim25", "UpgradeVMResponse").pyclass

UpgradeVM_TaskRequestMsg = GED("urn:vim25", "UpgradeVM_Task").pyclass

UpgradeVM_TaskResponseMsg = GED("urn:vim25", "UpgradeVM_TaskResponse").pyclass

PowerOnVMRequestMsg = GED("urn:vim25", "PowerOnVM").pyclass

PowerOnVMResponseMsg = GED("urn:vim25", "PowerOnVMResponse").pyclass

PowerOnVM_TaskRequestMsg = GED("urn:vim25", "PowerOnVM_Task").pyclass

PowerOnVM_TaskResponseMsg = GED("urn:vim25", "PowerOnVM_TaskResponse").pyclass

PowerOffVMRequestMsg = GED("urn:vim25", "PowerOffVM").pyclass

PowerOffVMResponseMsg = GED("urn:vim25", "PowerOffVMResponse").pyclass

PowerOffVM_TaskRequestMsg = GED("urn:vim25", "PowerOffVM_Task").pyclass

PowerOffVM_TaskResponseMsg = GED("urn:vim25", "PowerOffVM_TaskResponse").pyclass

SuspendVMRequestMsg = GED("urn:vim25", "SuspendVM").pyclass

SuspendVMResponseMsg = GED("urn:vim25", "SuspendVMResponse").pyclass

SuspendVM_TaskRequestMsg = GED("urn:vim25", "SuspendVM_Task").pyclass

SuspendVM_TaskResponseMsg = GED("urn:vim25", "SuspendVM_TaskResponse").pyclass

ResetVMRequestMsg = GED("urn:vim25", "ResetVM").pyclass

ResetVMResponseMsg = GED("urn:vim25", "ResetVMResponse").pyclass

ResetVM_TaskRequestMsg = GED("urn:vim25", "ResetVM_Task").pyclass

ResetVM_TaskResponseMsg = GED("urn:vim25", "ResetVM_TaskResponse").pyclass

ShutdownGuestRequestMsg = GED("urn:vim25", "ShutdownGuest").pyclass

ShutdownGuestResponseMsg = GED("urn:vim25", "ShutdownGuestResponse").pyclass

RebootGuestRequestMsg = GED("urn:vim25", "RebootGuest").pyclass

RebootGuestResponseMsg = GED("urn:vim25", "RebootGuestResponse").pyclass

StandbyGuestRequestMsg = GED("urn:vim25", "StandbyGuest").pyclass

StandbyGuestResponseMsg = GED("urn:vim25", "StandbyGuestResponse").pyclass

AnswerVMRequestMsg = GED("urn:vim25", "AnswerVM").pyclass

AnswerVMResponseMsg = GED("urn:vim25", "AnswerVMResponse").pyclass

CustomizeVMRequestMsg = GED("urn:vim25", "CustomizeVM").pyclass

CustomizeVMResponseMsg = GED("urn:vim25", "CustomizeVMResponse").pyclass

CustomizeVM_TaskRequestMsg = GED("urn:vim25", "CustomizeVM_Task").pyclass

CustomizeVM_TaskResponseMsg = GED("urn:vim25", "CustomizeVM_TaskResponse").pyclass

CheckCustomizationSpecRequestMsg = GED("urn:vim25", "CheckCustomizationSpec").pyclass

CheckCustomizationSpecResponseMsg = GED("urn:vim25", "CheckCustomizationSpecResponse").pyclass

MigrateVMRequestMsg = GED("urn:vim25", "MigrateVM").pyclass

MigrateVMResponseMsg = GED("urn:vim25", "MigrateVMResponse").pyclass

MigrateVM_TaskRequestMsg = GED("urn:vim25", "MigrateVM_Task").pyclass

MigrateVM_TaskResponseMsg = GED("urn:vim25", "MigrateVM_TaskResponse").pyclass

RelocateVMRequestMsg = GED("urn:vim25", "RelocateVM").pyclass

RelocateVMResponseMsg = GED("urn:vim25", "RelocateVMResponse").pyclass

RelocateVM_TaskRequestMsg = GED("urn:vim25", "RelocateVM_Task").pyclass

RelocateVM_TaskResponseMsg = GED("urn:vim25", "RelocateVM_TaskResponse").pyclass

CloneVMRequestMsg = GED("urn:vim25", "CloneVM").pyclass

CloneVMResponseMsg = GED("urn:vim25", "CloneVMResponse").pyclass

CloneVM_TaskRequestMsg = GED("urn:vim25", "CloneVM_Task").pyclass

CloneVM_TaskResponseMsg = GED("urn:vim25", "CloneVM_TaskResponse").pyclass

MarkAsTemplateRequestMsg = GED("urn:vim25", "MarkAsTemplate").pyclass

MarkAsTemplateResponseMsg = GED("urn:vim25", "MarkAsTemplateResponse").pyclass

MarkAsVirtualMachineRequestMsg = GED("urn:vim25", "MarkAsVirtualMachine").pyclass

MarkAsVirtualMachineResponseMsg = GED("urn:vim25", "MarkAsVirtualMachineResponse").pyclass

UnregisterVMRequestMsg = GED("urn:vim25", "UnregisterVM").pyclass

UnregisterVMResponseMsg = GED("urn:vim25", "UnregisterVMResponse").pyclass

ResetGuestInformationRequestMsg = GED("urn:vim25", "ResetGuestInformation").pyclass

ResetGuestInformationResponseMsg = GED("urn:vim25", "ResetGuestInformationResponse").pyclass

MountToolsInstallerRequestMsg = GED("urn:vim25", "MountToolsInstaller").pyclass

MountToolsInstallerResponseMsg = GED("urn:vim25", "MountToolsInstallerResponse").pyclass

UnmountToolsInstallerRequestMsg = GED("urn:vim25", "UnmountToolsInstaller").pyclass

UnmountToolsInstallerResponseMsg = GED("urn:vim25", "UnmountToolsInstallerResponse").pyclass

UpgradeToolsRequestMsg = GED("urn:vim25", "UpgradeTools").pyclass

UpgradeToolsResponseMsg = GED("urn:vim25", "UpgradeToolsResponse").pyclass

UpgradeTools_TaskRequestMsg = GED("urn:vim25", "UpgradeTools_Task").pyclass

UpgradeTools_TaskResponseMsg = GED("urn:vim25", "UpgradeTools_TaskResponse").pyclass

AcquireMksTicketRequestMsg = GED("urn:vim25", "AcquireMksTicket").pyclass

AcquireMksTicketResponseMsg = GED("urn:vim25", "AcquireMksTicketResponse").pyclass

SetScreenResolutionRequestMsg = GED("urn:vim25", "SetScreenResolution").pyclass

SetScreenResolutionResponseMsg = GED("urn:vim25", "SetScreenResolutionResponse").pyclass

DefragmentAllDisksRequestMsg = GED("urn:vim25", "DefragmentAllDisks").pyclass

DefragmentAllDisksResponseMsg = GED("urn:vim25", "DefragmentAllDisksResponse").pyclass

RemoveAlarmRequestMsg = GED("urn:vim25", "RemoveAlarm").pyclass

RemoveAlarmResponseMsg = GED("urn:vim25", "RemoveAlarmResponse").pyclass

ReconfigureAlarmRequestMsg = GED("urn:vim25", "ReconfigureAlarm").pyclass

ReconfigureAlarmResponseMsg = GED("urn:vim25", "ReconfigureAlarmResponse").pyclass

CreateAlarmRequestMsg = GED("urn:vim25", "CreateAlarm").pyclass

CreateAlarmResponseMsg = GED("urn:vim25", "CreateAlarmResponse").pyclass

GetAlarmRequestMsg = GED("urn:vim25", "GetAlarm").pyclass

GetAlarmResponseMsg = GED("urn:vim25", "GetAlarmResponse").pyclass

GetAlarmStateRequestMsg = GED("urn:vim25", "GetAlarmState").pyclass

GetAlarmStateResponseMsg = GED("urn:vim25", "GetAlarmStateResponse").pyclass

ReadNextEventsRequestMsg = GED("urn:vim25", "ReadNextEvents").pyclass

ReadNextEventsResponseMsg = GED("urn:vim25", "ReadNextEventsResponse").pyclass

ReadPreviousEventsRequestMsg = GED("urn:vim25", "ReadPreviousEvents").pyclass

ReadPreviousEventsResponseMsg = GED("urn:vim25", "ReadPreviousEventsResponse").pyclass

CreateCollectorForEventsRequestMsg = GED("urn:vim25", "CreateCollectorForEvents").pyclass

CreateCollectorForEventsResponseMsg = GED("urn:vim25", "CreateCollectorForEventsResponse").pyclass

LogUserEventRequestMsg = GED("urn:vim25", "LogUserEvent").pyclass

LogUserEventResponseMsg = GED("urn:vim25", "LogUserEventResponse").pyclass

QueryEventsRequestMsg = GED("urn:vim25", "QueryEvents").pyclass

QueryEventsResponseMsg = GED("urn:vim25", "QueryEventsResponse").pyclass

PostEventRequestMsg = GED("urn:vim25", "PostEvent").pyclass

PostEventResponseMsg = GED("urn:vim25", "PostEventResponse").pyclass

ReconfigureAutostartRequestMsg = GED("urn:vim25", "ReconfigureAutostart").pyclass

ReconfigureAutostartResponseMsg = GED("urn:vim25", "ReconfigureAutostartResponse").pyclass

AutoStartPowerOnRequestMsg = GED("urn:vim25", "AutoStartPowerOn").pyclass

AutoStartPowerOnResponseMsg = GED("urn:vim25", "AutoStartPowerOnResponse").pyclass

AutoStartPowerOffRequestMsg = GED("urn:vim25", "AutoStartPowerOff").pyclass

AutoStartPowerOffResponseMsg = GED("urn:vim25", "AutoStartPowerOffResponse").pyclass

QueryBootDevicesRequestMsg = GED("urn:vim25", "QueryBootDevices").pyclass

QueryBootDevicesResponseMsg = GED("urn:vim25", "QueryBootDevicesResponse").pyclass

UpdateBootDeviceRequestMsg = GED("urn:vim25", "UpdateBootDevice").pyclass

UpdateBootDeviceResponseMsg = GED("urn:vim25", "UpdateBootDeviceResponse").pyclass

EnableHyperThreadingRequestMsg = GED("urn:vim25", "EnableHyperThreading").pyclass

EnableHyperThreadingResponseMsg = GED("urn:vim25", "EnableHyperThreadingResponse").pyclass

DisableHyperThreadingRequestMsg = GED("urn:vim25", "DisableHyperThreading").pyclass

DisableHyperThreadingResponseMsg = GED("urn:vim25", "DisableHyperThreadingResponse").pyclass

SearchDatastoreRequestMsg = GED("urn:vim25", "SearchDatastore").pyclass

SearchDatastoreResponseMsg = GED("urn:vim25", "SearchDatastoreResponse").pyclass

SearchDatastore_TaskRequestMsg = GED("urn:vim25", "SearchDatastore_Task").pyclass

SearchDatastore_TaskResponseMsg = GED("urn:vim25", "SearchDatastore_TaskResponse").pyclass

SearchDatastoreSubFoldersRequestMsg = GED("urn:vim25", "SearchDatastoreSubFolders").pyclass

SearchDatastoreSubFoldersResponseMsg = GED("urn:vim25", "SearchDatastoreSubFoldersResponse").pyclass

SearchDatastoreSubFolders_TaskRequestMsg = GED("urn:vim25", "SearchDatastoreSubFolders_Task").pyclass

SearchDatastoreSubFolders_TaskResponseMsg = GED("urn:vim25", "SearchDatastoreSubFolders_TaskResponse").pyclass

DeleteFileRequestMsg = GED("urn:vim25", "DeleteFile").pyclass

DeleteFileResponseMsg = GED("urn:vim25", "DeleteFileResponse").pyclass

UpdateLocalSwapDatastoreRequestMsg = GED("urn:vim25", "UpdateLocalSwapDatastore").pyclass

UpdateLocalSwapDatastoreResponseMsg = GED("urn:vim25", "UpdateLocalSwapDatastoreResponse").pyclass

QueryAvailableDisksForVmfsRequestMsg = GED("urn:vim25", "QueryAvailableDisksForVmfs").pyclass

QueryAvailableDisksForVmfsResponseMsg = GED("urn:vim25", "QueryAvailableDisksForVmfsResponse").pyclass

QueryVmfsDatastoreCreateOptionsRequestMsg = GED("urn:vim25", "QueryVmfsDatastoreCreateOptions").pyclass

QueryVmfsDatastoreCreateOptionsResponseMsg = GED("urn:vim25", "QueryVmfsDatastoreCreateOptionsResponse").pyclass

CreateVmfsDatastoreRequestMsg = GED("urn:vim25", "CreateVmfsDatastore").pyclass

CreateVmfsDatastoreResponseMsg = GED("urn:vim25", "CreateVmfsDatastoreResponse").pyclass

QueryVmfsDatastoreExtendOptionsRequestMsg = GED("urn:vim25", "QueryVmfsDatastoreExtendOptions").pyclass

QueryVmfsDatastoreExtendOptionsResponseMsg = GED("urn:vim25", "QueryVmfsDatastoreExtendOptionsResponse").pyclass

ExtendVmfsDatastoreRequestMsg = GED("urn:vim25", "ExtendVmfsDatastore").pyclass

ExtendVmfsDatastoreResponseMsg = GED("urn:vim25", "ExtendVmfsDatastoreResponse").pyclass

CreateNasDatastoreRequestMsg = GED("urn:vim25", "CreateNasDatastore").pyclass

CreateNasDatastoreResponseMsg = GED("urn:vim25", "CreateNasDatastoreResponse").pyclass

CreateLocalDatastoreRequestMsg = GED("urn:vim25", "CreateLocalDatastore").pyclass

CreateLocalDatastoreResponseMsg = GED("urn:vim25", "CreateLocalDatastoreResponse").pyclass

RemoveDatastoreRequestMsg = GED("urn:vim25", "RemoveDatastore").pyclass

RemoveDatastoreResponseMsg = GED("urn:vim25", "RemoveDatastoreResponse").pyclass

ConfigureDatastorePrincipalRequestMsg = GED("urn:vim25", "ConfigureDatastorePrincipal").pyclass

ConfigureDatastorePrincipalResponseMsg = GED("urn:vim25", "ConfigureDatastorePrincipalResponse").pyclass

UpdateDateTimeConfigRequestMsg = GED("urn:vim25", "UpdateDateTimeConfig").pyclass

UpdateDateTimeConfigResponseMsg = GED("urn:vim25", "UpdateDateTimeConfigResponse").pyclass

QueryAvailableTimeZonesRequestMsg = GED("urn:vim25", "QueryAvailableTimeZones").pyclass

QueryAvailableTimeZonesResponseMsg = GED("urn:vim25", "QueryAvailableTimeZonesResponse").pyclass

QueryDateTimeRequestMsg = GED("urn:vim25", "QueryDateTime").pyclass

QueryDateTimeResponseMsg = GED("urn:vim25", "QueryDateTimeResponse").pyclass

UpdateDateTimeRequestMsg = GED("urn:vim25", "UpdateDateTime").pyclass

UpdateDateTimeResponseMsg = GED("urn:vim25", "UpdateDateTimeResponse").pyclass

RefreshDateTimeSystemRequestMsg = GED("urn:vim25", "RefreshDateTimeSystem").pyclass

RefreshDateTimeSystemResponseMsg = GED("urn:vim25", "RefreshDateTimeSystemResponse").pyclass

QueryAvailablePartitionRequestMsg = GED("urn:vim25", "QueryAvailablePartition").pyclass

QueryAvailablePartitionResponseMsg = GED("urn:vim25", "QueryAvailablePartitionResponse").pyclass

SelectActivePartitionRequestMsg = GED("urn:vim25", "SelectActivePartition").pyclass

SelectActivePartitionResponseMsg = GED("urn:vim25", "SelectActivePartitionResponse").pyclass

QueryPartitionCreateOptionsRequestMsg = GED("urn:vim25", "QueryPartitionCreateOptions").pyclass

QueryPartitionCreateOptionsResponseMsg = GED("urn:vim25", "QueryPartitionCreateOptionsResponse").pyclass

QueryPartitionCreateDescRequestMsg = GED("urn:vim25", "QueryPartitionCreateDesc").pyclass

QueryPartitionCreateDescResponseMsg = GED("urn:vim25", "QueryPartitionCreateDescResponse").pyclass

CreateDiagnosticPartitionRequestMsg = GED("urn:vim25", "CreateDiagnosticPartition").pyclass

CreateDiagnosticPartitionResponseMsg = GED("urn:vim25", "CreateDiagnosticPartitionResponse").pyclass

UpdateDefaultPolicyRequestMsg = GED("urn:vim25", "UpdateDefaultPolicy").pyclass

UpdateDefaultPolicyResponseMsg = GED("urn:vim25", "UpdateDefaultPolicyResponse").pyclass

EnableRulesetRequestMsg = GED("urn:vim25", "EnableRuleset").pyclass

EnableRulesetResponseMsg = GED("urn:vim25", "EnableRulesetResponse").pyclass

DisableRulesetRequestMsg = GED("urn:vim25", "DisableRuleset").pyclass

DisableRulesetResponseMsg = GED("urn:vim25", "DisableRulesetResponse").pyclass

RefreshFirewallRequestMsg = GED("urn:vim25", "RefreshFirewall").pyclass

RefreshFirewallResponseMsg = GED("urn:vim25", "RefreshFirewallResponse").pyclass

ResetFirmwareToFactoryDefaultsRequestMsg = GED("urn:vim25", "ResetFirmwareToFactoryDefaults").pyclass

ResetFirmwareToFactoryDefaultsResponseMsg = GED("urn:vim25", "ResetFirmwareToFactoryDefaultsResponse").pyclass

BackupFirmwareConfigurationRequestMsg = GED("urn:vim25", "BackupFirmwareConfiguration").pyclass

BackupFirmwareConfigurationResponseMsg = GED("urn:vim25", "BackupFirmwareConfigurationResponse").pyclass

QueryFirmwareConfigUploadURLRequestMsg = GED("urn:vim25", "QueryFirmwareConfigUploadURL").pyclass

QueryFirmwareConfigUploadURLResponseMsg = GED("urn:vim25", "QueryFirmwareConfigUploadURLResponse").pyclass

RestoreFirmwareConfigurationRequestMsg = GED("urn:vim25", "RestoreFirmwareConfiguration").pyclass

RestoreFirmwareConfigurationResponseMsg = GED("urn:vim25", "RestoreFirmwareConfigurationResponse").pyclass

RefreshHealthStatusSystemRequestMsg = GED("urn:vim25", "RefreshHealthStatusSystem").pyclass

RefreshHealthStatusSystemResponseMsg = GED("urn:vim25", "RefreshHealthStatusSystemResponse").pyclass

ResetSystemHealthInfoRequestMsg = GED("urn:vim25", "ResetSystemHealthInfo").pyclass

ResetSystemHealthInfoResponseMsg = GED("urn:vim25", "ResetSystemHealthInfoResponse").pyclass

CreateUserRequestMsg = GED("urn:vim25", "CreateUser").pyclass

CreateUserResponseMsg = GED("urn:vim25", "CreateUserResponse").pyclass

UpdateUserRequestMsg = GED("urn:vim25", "UpdateUser").pyclass

UpdateUserResponseMsg = GED("urn:vim25", "UpdateUserResponse").pyclass

CreateGroupRequestMsg = GED("urn:vim25", "CreateGroup").pyclass

CreateGroupResponseMsg = GED("urn:vim25", "CreateGroupResponse").pyclass

RemoveUserRequestMsg = GED("urn:vim25", "RemoveUser").pyclass

RemoveUserResponseMsg = GED("urn:vim25", "RemoveUserResponse").pyclass

RemoveGroupRequestMsg = GED("urn:vim25", "RemoveGroup").pyclass

RemoveGroupResponseMsg = GED("urn:vim25", "RemoveGroupResponse").pyclass

AssignUserToGroupRequestMsg = GED("urn:vim25", "AssignUserToGroup").pyclass

AssignUserToGroupResponseMsg = GED("urn:vim25", "AssignUserToGroupResponse").pyclass

UnassignUserFromGroupRequestMsg = GED("urn:vim25", "UnassignUserFromGroup").pyclass

UnassignUserFromGroupResponseMsg = GED("urn:vim25", "UnassignUserFromGroupResponse").pyclass

ReconfigureServiceConsoleReservationRequestMsg = GED("urn:vim25", "ReconfigureServiceConsoleReservation").pyclass

ReconfigureServiceConsoleReservationResponseMsg = GED("urn:vim25", "ReconfigureServiceConsoleReservationResponse").pyclass

ReconfigureVirtualMachineReservationRequestMsg = GED("urn:vim25", "ReconfigureVirtualMachineReservation").pyclass

ReconfigureVirtualMachineReservationResponseMsg = GED("urn:vim25", "ReconfigureVirtualMachineReservationResponse").pyclass

UpdateNetworkConfigRequestMsg = GED("urn:vim25", "UpdateNetworkConfig").pyclass

UpdateNetworkConfigResponseMsg = GED("urn:vim25", "UpdateNetworkConfigResponse").pyclass

UpdateDnsConfigRequestMsg = GED("urn:vim25", "UpdateDnsConfig").pyclass

UpdateDnsConfigResponseMsg = GED("urn:vim25", "UpdateDnsConfigResponse").pyclass

UpdateIpRouteConfigRequestMsg = GED("urn:vim25", "UpdateIpRouteConfig").pyclass

UpdateIpRouteConfigResponseMsg = GED("urn:vim25", "UpdateIpRouteConfigResponse").pyclass

UpdateConsoleIpRouteConfigRequestMsg = GED("urn:vim25", "UpdateConsoleIpRouteConfig").pyclass

UpdateConsoleIpRouteConfigResponseMsg = GED("urn:vim25", "UpdateConsoleIpRouteConfigResponse").pyclass

AddVirtualSwitchRequestMsg = GED("urn:vim25", "AddVirtualSwitch").pyclass

AddVirtualSwitchResponseMsg = GED("urn:vim25", "AddVirtualSwitchResponse").pyclass

RemoveVirtualSwitchRequestMsg = GED("urn:vim25", "RemoveVirtualSwitch").pyclass

RemoveVirtualSwitchResponseMsg = GED("urn:vim25", "RemoveVirtualSwitchResponse").pyclass

UpdateVirtualSwitchRequestMsg = GED("urn:vim25", "UpdateVirtualSwitch").pyclass

UpdateVirtualSwitchResponseMsg = GED("urn:vim25", "UpdateVirtualSwitchResponse").pyclass

AddPortGroupRequestMsg = GED("urn:vim25", "AddPortGroup").pyclass

AddPortGroupResponseMsg = GED("urn:vim25", "AddPortGroupResponse").pyclass

RemovePortGroupRequestMsg = GED("urn:vim25", "RemovePortGroup").pyclass

RemovePortGroupResponseMsg = GED("urn:vim25", "RemovePortGroupResponse").pyclass

UpdatePortGroupRequestMsg = GED("urn:vim25", "UpdatePortGroup").pyclass

UpdatePortGroupResponseMsg = GED("urn:vim25", "UpdatePortGroupResponse").pyclass

UpdatePhysicalNicLinkSpeedRequestMsg = GED("urn:vim25", "UpdatePhysicalNicLinkSpeed").pyclass

UpdatePhysicalNicLinkSpeedResponseMsg = GED("urn:vim25", "UpdatePhysicalNicLinkSpeedResponse").pyclass

QueryNetworkHintRequestMsg = GED("urn:vim25", "QueryNetworkHint").pyclass

QueryNetworkHintResponseMsg = GED("urn:vim25", "QueryNetworkHintResponse").pyclass

AddVirtualNicRequestMsg = GED("urn:vim25", "AddVirtualNic").pyclass

AddVirtualNicResponseMsg = GED("urn:vim25", "AddVirtualNicResponse").pyclass

RemoveVirtualNicRequestMsg = GED("urn:vim25", "RemoveVirtualNic").pyclass

RemoveVirtualNicResponseMsg = GED("urn:vim25", "RemoveVirtualNicResponse").pyclass

UpdateVirtualNicRequestMsg = GED("urn:vim25", "UpdateVirtualNic").pyclass

UpdateVirtualNicResponseMsg = GED("urn:vim25", "UpdateVirtualNicResponse").pyclass

AddServiceConsoleVirtualNicRequestMsg = GED("urn:vim25", "AddServiceConsoleVirtualNic").pyclass

AddServiceConsoleVirtualNicResponseMsg = GED("urn:vim25", "AddServiceConsoleVirtualNicResponse").pyclass

RemoveServiceConsoleVirtualNicRequestMsg = GED("urn:vim25", "RemoveServiceConsoleVirtualNic").pyclass

RemoveServiceConsoleVirtualNicResponseMsg = GED("urn:vim25", "RemoveServiceConsoleVirtualNicResponse").pyclass

UpdateServiceConsoleVirtualNicRequestMsg = GED("urn:vim25", "UpdateServiceConsoleVirtualNic").pyclass

UpdateServiceConsoleVirtualNicResponseMsg = GED("urn:vim25", "UpdateServiceConsoleVirtualNicResponse").pyclass

RestartServiceConsoleVirtualNicRequestMsg = GED("urn:vim25", "RestartServiceConsoleVirtualNic").pyclass

RestartServiceConsoleVirtualNicResponseMsg = GED("urn:vim25", "RestartServiceConsoleVirtualNicResponse").pyclass

RefreshNetworkSystemRequestMsg = GED("urn:vim25", "RefreshNetworkSystem").pyclass

RefreshNetworkSystemResponseMsg = GED("urn:vim25", "RefreshNetworkSystemResponse").pyclass

ScanHostPatchRequestMsg = GED("urn:vim25", "ScanHostPatch").pyclass

ScanHostPatchResponseMsg = GED("urn:vim25", "ScanHostPatchResponse").pyclass

ScanHostPatch_TaskRequestMsg = GED("urn:vim25", "ScanHostPatch_Task").pyclass

ScanHostPatch_TaskResponseMsg = GED("urn:vim25", "ScanHostPatch_TaskResponse").pyclass

InstallHostPatchRequestMsg = GED("urn:vim25", "InstallHostPatch").pyclass

InstallHostPatchResponseMsg = GED("urn:vim25", "InstallHostPatchResponse").pyclass

InstallHostPatch_TaskRequestMsg = GED("urn:vim25", "InstallHostPatch_Task").pyclass

InstallHostPatch_TaskResponseMsg = GED("urn:vim25", "InstallHostPatch_TaskResponse").pyclass

UpdateServicePolicyRequestMsg = GED("urn:vim25", "UpdateServicePolicy").pyclass

UpdateServicePolicyResponseMsg = GED("urn:vim25", "UpdateServicePolicyResponse").pyclass

StartServiceRequestMsg = GED("urn:vim25", "StartService").pyclass

StartServiceResponseMsg = GED("urn:vim25", "StartServiceResponse").pyclass

StopServiceRequestMsg = GED("urn:vim25", "StopService").pyclass

StopServiceResponseMsg = GED("urn:vim25", "StopServiceResponse").pyclass

RestartServiceRequestMsg = GED("urn:vim25", "RestartService").pyclass

RestartServiceResponseMsg = GED("urn:vim25", "RestartServiceResponse").pyclass

UninstallServiceRequestMsg = GED("urn:vim25", "UninstallService").pyclass

UninstallServiceResponseMsg = GED("urn:vim25", "UninstallServiceResponse").pyclass

RefreshServicesRequestMsg = GED("urn:vim25", "RefreshServices").pyclass

RefreshServicesResponseMsg = GED("urn:vim25", "RefreshServicesResponse").pyclass

ReconfigureSnmpAgentRequestMsg = GED("urn:vim25", "ReconfigureSnmpAgent").pyclass

ReconfigureSnmpAgentResponseMsg = GED("urn:vim25", "ReconfigureSnmpAgentResponse").pyclass

SendTestNotificationRequestMsg = GED("urn:vim25", "SendTestNotification").pyclass

SendTestNotificationResponseMsg = GED("urn:vim25", "SendTestNotificationResponse").pyclass

RetrieveDiskPartitionInfoRequestMsg = GED("urn:vim25", "RetrieveDiskPartitionInfo").pyclass

RetrieveDiskPartitionInfoResponseMsg = GED("urn:vim25", "RetrieveDiskPartitionInfoResponse").pyclass

ComputeDiskPartitionInfoRequestMsg = GED("urn:vim25", "ComputeDiskPartitionInfo").pyclass

ComputeDiskPartitionInfoResponseMsg = GED("urn:vim25", "ComputeDiskPartitionInfoResponse").pyclass

UpdateDiskPartitionsRequestMsg = GED("urn:vim25", "UpdateDiskPartitions").pyclass

UpdateDiskPartitionsResponseMsg = GED("urn:vim25", "UpdateDiskPartitionsResponse").pyclass

FormatVmfsRequestMsg = GED("urn:vim25", "FormatVmfs").pyclass

FormatVmfsResponseMsg = GED("urn:vim25", "FormatVmfsResponse").pyclass

RescanVmfsRequestMsg = GED("urn:vim25", "RescanVmfs").pyclass

RescanVmfsResponseMsg = GED("urn:vim25", "RescanVmfsResponse").pyclass

AttachVmfsExtentRequestMsg = GED("urn:vim25", "AttachVmfsExtent").pyclass

AttachVmfsExtentResponseMsg = GED("urn:vim25", "AttachVmfsExtentResponse").pyclass

UpgradeVmfsRequestMsg = GED("urn:vim25", "UpgradeVmfs").pyclass

UpgradeVmfsResponseMsg = GED("urn:vim25", "UpgradeVmfsResponse").pyclass

UpgradeVmLayoutRequestMsg = GED("urn:vim25", "UpgradeVmLayout").pyclass

UpgradeVmLayoutResponseMsg = GED("urn:vim25", "UpgradeVmLayoutResponse").pyclass

RescanHbaRequestMsg = GED("urn:vim25", "RescanHba").pyclass

RescanHbaResponseMsg = GED("urn:vim25", "RescanHbaResponse").pyclass

RescanAllHbaRequestMsg = GED("urn:vim25", "RescanAllHba").pyclass

RescanAllHbaResponseMsg = GED("urn:vim25", "RescanAllHbaResponse").pyclass

UpdateSoftwareInternetScsiEnabledRequestMsg = GED("urn:vim25", "UpdateSoftwareInternetScsiEnabled").pyclass

UpdateSoftwareInternetScsiEnabledResponseMsg = GED("urn:vim25", "UpdateSoftwareInternetScsiEnabledResponse").pyclass

UpdateInternetScsiDiscoveryPropertiesRequestMsg = GED("urn:vim25", "UpdateInternetScsiDiscoveryProperties").pyclass

UpdateInternetScsiDiscoveryPropertiesResponseMsg = GED("urn:vim25", "UpdateInternetScsiDiscoveryPropertiesResponse").pyclass

UpdateInternetScsiAuthenticationPropertiesRequestMsg = GED("urn:vim25", "UpdateInternetScsiAuthenticationProperties").pyclass

UpdateInternetScsiAuthenticationPropertiesResponseMsg = GED("urn:vim25", "UpdateInternetScsiAuthenticationPropertiesResponse").pyclass

UpdateInternetScsiIPPropertiesRequestMsg = GED("urn:vim25", "UpdateInternetScsiIPProperties").pyclass

UpdateInternetScsiIPPropertiesResponseMsg = GED("urn:vim25", "UpdateInternetScsiIPPropertiesResponse").pyclass

UpdateInternetScsiNameRequestMsg = GED("urn:vim25", "UpdateInternetScsiName").pyclass

UpdateInternetScsiNameResponseMsg = GED("urn:vim25", "UpdateInternetScsiNameResponse").pyclass

UpdateInternetScsiAliasRequestMsg = GED("urn:vim25", "UpdateInternetScsiAlias").pyclass

UpdateInternetScsiAliasResponseMsg = GED("urn:vim25", "UpdateInternetScsiAliasResponse").pyclass

AddInternetScsiSendTargetsRequestMsg = GED("urn:vim25", "AddInternetScsiSendTargets").pyclass

AddInternetScsiSendTargetsResponseMsg = GED("urn:vim25", "AddInternetScsiSendTargetsResponse").pyclass

RemoveInternetScsiSendTargetsRequestMsg = GED("urn:vim25", "RemoveInternetScsiSendTargets").pyclass

RemoveInternetScsiSendTargetsResponseMsg = GED("urn:vim25", "RemoveInternetScsiSendTargetsResponse").pyclass

AddInternetScsiStaticTargetsRequestMsg = GED("urn:vim25", "AddInternetScsiStaticTargets").pyclass

AddInternetScsiStaticTargetsResponseMsg = GED("urn:vim25", "AddInternetScsiStaticTargetsResponse").pyclass

RemoveInternetScsiStaticTargetsRequestMsg = GED("urn:vim25", "RemoveInternetScsiStaticTargets").pyclass

RemoveInternetScsiStaticTargetsResponseMsg = GED("urn:vim25", "RemoveInternetScsiStaticTargetsResponse").pyclass

EnableMultipathPathRequestMsg = GED("urn:vim25", "EnableMultipathPath").pyclass

EnableMultipathPathResponseMsg = GED("urn:vim25", "EnableMultipathPathResponse").pyclass

DisableMultipathPathRequestMsg = GED("urn:vim25", "DisableMultipathPath").pyclass

DisableMultipathPathResponseMsg = GED("urn:vim25", "DisableMultipathPathResponse").pyclass

SetMultipathLunPolicyRequestMsg = GED("urn:vim25", "SetMultipathLunPolicy").pyclass

SetMultipathLunPolicyResponseMsg = GED("urn:vim25", "SetMultipathLunPolicyResponse").pyclass

RefreshStorageSystemRequestMsg = GED("urn:vim25", "RefreshStorageSystem").pyclass

RefreshStorageSystemResponseMsg = GED("urn:vim25", "RefreshStorageSystemResponse").pyclass

UpdateIpConfigRequestMsg = GED("urn:vim25", "UpdateIpConfig").pyclass

UpdateIpConfigResponseMsg = GED("urn:vim25", "UpdateIpConfigResponse").pyclass

SelectVnicRequestMsg = GED("urn:vim25", "SelectVnic").pyclass

SelectVnicResponseMsg = GED("urn:vim25", "SelectVnicResponse").pyclass

DeselectVnicRequestMsg = GED("urn:vim25", "DeselectVnic").pyclass

DeselectVnicResponseMsg = GED("urn:vim25", "DeselectVnicResponse").pyclass

QueryOptionsRequestMsg = GED("urn:vim25", "QueryOptions").pyclass

QueryOptionsResponseMsg = GED("urn:vim25", "QueryOptionsResponse").pyclass

UpdateOptionsRequestMsg = GED("urn:vim25", "UpdateOptions").pyclass

UpdateOptionsResponseMsg = GED("urn:vim25", "UpdateOptionsResponse").pyclass

RemoveScheduledTaskRequestMsg = GED("urn:vim25", "RemoveScheduledTask").pyclass

RemoveScheduledTaskResponseMsg = GED("urn:vim25", "RemoveScheduledTaskResponse").pyclass

ReconfigureScheduledTaskRequestMsg = GED("urn:vim25", "ReconfigureScheduledTask").pyclass

ReconfigureScheduledTaskResponseMsg = GED("urn:vim25", "ReconfigureScheduledTaskResponse").pyclass

RunScheduledTaskRequestMsg = GED("urn:vim25", "RunScheduledTask").pyclass

RunScheduledTaskResponseMsg = GED("urn:vim25", "RunScheduledTaskResponse").pyclass

CreateScheduledTaskRequestMsg = GED("urn:vim25", "CreateScheduledTask").pyclass

CreateScheduledTaskResponseMsg = GED("urn:vim25", "CreateScheduledTaskResponse").pyclass

RetrieveEntityScheduledTaskRequestMsg = GED("urn:vim25", "RetrieveEntityScheduledTask").pyclass

RetrieveEntityScheduledTaskResponseMsg = GED("urn:vim25", "RetrieveEntityScheduledTaskResponse").pyclass

OpenInventoryViewFolderRequestMsg = GED("urn:vim25", "OpenInventoryViewFolder").pyclass

OpenInventoryViewFolderResponseMsg = GED("urn:vim25", "OpenInventoryViewFolderResponse").pyclass

CloseInventoryViewFolderRequestMsg = GED("urn:vim25", "CloseInventoryViewFolder").pyclass

CloseInventoryViewFolderResponseMsg = GED("urn:vim25", "CloseInventoryViewFolderResponse").pyclass

ModifyListViewRequestMsg = GED("urn:vim25", "ModifyListView").pyclass

ModifyListViewResponseMsg = GED("urn:vim25", "ModifyListViewResponse").pyclass

ResetListViewRequestMsg = GED("urn:vim25", "ResetListView").pyclass

ResetListViewResponseMsg = GED("urn:vim25", "ResetListViewResponse").pyclass

ResetListViewFromViewRequestMsg = GED("urn:vim25", "ResetListViewFromView").pyclass

ResetListViewFromViewResponseMsg = GED("urn:vim25", "ResetListViewFromViewResponse").pyclass

DestroyViewRequestMsg = GED("urn:vim25", "DestroyView").pyclass

DestroyViewResponseMsg = GED("urn:vim25", "DestroyViewResponse").pyclass

CreateInventoryViewRequestMsg = GED("urn:vim25", "CreateInventoryView").pyclass

CreateInventoryViewResponseMsg = GED("urn:vim25", "CreateInventoryViewResponse").pyclass

CreateContainerViewRequestMsg = GED("urn:vim25", "CreateContainerView").pyclass

CreateContainerViewResponseMsg = GED("urn:vim25", "CreateContainerViewResponse").pyclass

CreateListViewRequestMsg = GED("urn:vim25", "CreateListView").pyclass

CreateListViewResponseMsg = GED("urn:vim25", "CreateListViewResponse").pyclass

CreateListViewFromViewRequestMsg = GED("urn:vim25", "CreateListViewFromView").pyclass

CreateListViewFromViewResponseMsg = GED("urn:vim25", "CreateListViewFromViewResponse").pyclass

RevertToSnapshotRequestMsg = GED("urn:vim25", "RevertToSnapshot").pyclass

RevertToSnapshotResponseMsg = GED("urn:vim25", "RevertToSnapshotResponse").pyclass

RevertToSnapshot_TaskRequestMsg = GED("urn:vim25", "RevertToSnapshot_Task").pyclass

RevertToSnapshot_TaskResponseMsg = GED("urn:vim25", "RevertToSnapshot_TaskResponse").pyclass

RemoveSnapshotRequestMsg = GED("urn:vim25", "RemoveSnapshot").pyclass

RemoveSnapshotResponseMsg = GED("urn:vim25", "RemoveSnapshotResponse").pyclass

RemoveSnapshot_TaskRequestMsg = GED("urn:vim25", "RemoveSnapshot_Task").pyclass

RemoveSnapshot_TaskResponseMsg = GED("urn:vim25", "RemoveSnapshot_TaskResponse").pyclass

RenameSnapshotRequestMsg = GED("urn:vim25", "RenameSnapshot").pyclass

RenameSnapshotResponseMsg = GED("urn:vim25", "RenameSnapshotResponse").pyclass


# Service Skeletons
class VimService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/sdk/vimService', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_DestroyPropertyFilter(self, ps, **kw):
        request = ps.Parse(DestroyPropertyFilterRequestMsg.typecode)
        return request,DestroyPropertyFilterResponseMsg()

    soapAction[''] = 'soap_DestroyPropertyFilter'
    root[(DestroyPropertyFilterRequestMsg.typecode.nspname,DestroyPropertyFilterRequestMsg.typecode.pname)] = 'soap_DestroyPropertyFilter'

    def soap_CreateFilter(self, ps, **kw):
        request = ps.Parse(CreateFilterRequestMsg.typecode)
        return request,CreateFilterResponseMsg()

    soapAction[''] = 'soap_CreateFilter'
    root[(CreateFilterRequestMsg.typecode.nspname,CreateFilterRequestMsg.typecode.pname)] = 'soap_CreateFilter'

    def soap_RetrieveProperties(self, ps, **kw):
        request = ps.Parse(RetrievePropertiesRequestMsg.typecode)
        return request,RetrievePropertiesResponseMsg()

    soapAction[''] = 'soap_RetrieveProperties'
    root[(RetrievePropertiesRequestMsg.typecode.nspname,RetrievePropertiesRequestMsg.typecode.pname)] = 'soap_RetrieveProperties'

    def soap_CheckForUpdates(self, ps, **kw):
        request = ps.Parse(CheckForUpdatesRequestMsg.typecode)
        return request,CheckForUpdatesResponseMsg()

    soapAction[''] = 'soap_CheckForUpdates'
    root[(CheckForUpdatesRequestMsg.typecode.nspname,CheckForUpdatesRequestMsg.typecode.pname)] = 'soap_CheckForUpdates'

    def soap_WaitForUpdates(self, ps, **kw):
        request = ps.Parse(WaitForUpdatesRequestMsg.typecode)
        return request,WaitForUpdatesResponseMsg()

    soapAction[''] = 'soap_WaitForUpdates'
    root[(WaitForUpdatesRequestMsg.typecode.nspname,WaitForUpdatesRequestMsg.typecode.pname)] = 'soap_WaitForUpdates'

    def soap_CancelWaitForUpdates(self, ps, **kw):
        request = ps.Parse(CancelWaitForUpdatesRequestMsg.typecode)
        return request,CancelWaitForUpdatesResponseMsg()

    soapAction[''] = 'soap_CancelWaitForUpdates'
    root[(CancelWaitForUpdatesRequestMsg.typecode.nspname,CancelWaitForUpdatesRequestMsg.typecode.pname)] = 'soap_CancelWaitForUpdates'

    def soap_AddAuthorizationRole(self, ps, **kw):
        request = ps.Parse(AddAuthorizationRoleRequestMsg.typecode)
        return request,AddAuthorizationRoleResponseMsg()

    soapAction[''] = 'soap_AddAuthorizationRole'
    root[(AddAuthorizationRoleRequestMsg.typecode.nspname,AddAuthorizationRoleRequestMsg.typecode.pname)] = 'soap_AddAuthorizationRole'

    def soap_RemoveAuthorizationRole(self, ps, **kw):
        request = ps.Parse(RemoveAuthorizationRoleRequestMsg.typecode)
        return request,RemoveAuthorizationRoleResponseMsg()

    soapAction[''] = 'soap_RemoveAuthorizationRole'
    root[(RemoveAuthorizationRoleRequestMsg.typecode.nspname,RemoveAuthorizationRoleRequestMsg.typecode.pname)] = 'soap_RemoveAuthorizationRole'

    def soap_UpdateAuthorizationRole(self, ps, **kw):
        request = ps.Parse(UpdateAuthorizationRoleRequestMsg.typecode)
        return request,UpdateAuthorizationRoleResponseMsg()

    soapAction[''] = 'soap_UpdateAuthorizationRole'
    root[(UpdateAuthorizationRoleRequestMsg.typecode.nspname,UpdateAuthorizationRoleRequestMsg.typecode.pname)] = 'soap_UpdateAuthorizationRole'

    def soap_MergePermissions(self, ps, **kw):
        request = ps.Parse(MergePermissionsRequestMsg.typecode)
        return request,MergePermissionsResponseMsg()

    soapAction[''] = 'soap_MergePermissions'
    root[(MergePermissionsRequestMsg.typecode.nspname,MergePermissionsRequestMsg.typecode.pname)] = 'soap_MergePermissions'

    def soap_RetrieveRolePermissions(self, ps, **kw):
        request = ps.Parse(RetrieveRolePermissionsRequestMsg.typecode)
        return request,RetrieveRolePermissionsResponseMsg()

    soapAction[''] = 'soap_RetrieveRolePermissions'
    root[(RetrieveRolePermissionsRequestMsg.typecode.nspname,RetrieveRolePermissionsRequestMsg.typecode.pname)] = 'soap_RetrieveRolePermissions'

    def soap_RetrieveEntityPermissions(self, ps, **kw):
        request = ps.Parse(RetrieveEntityPermissionsRequestMsg.typecode)
        return request,RetrieveEntityPermissionsResponseMsg()

    soapAction[''] = 'soap_RetrieveEntityPermissions'
    root[(RetrieveEntityPermissionsRequestMsg.typecode.nspname,RetrieveEntityPermissionsRequestMsg.typecode.pname)] = 'soap_RetrieveEntityPermissions'

    def soap_RetrieveAllPermissions(self, ps, **kw):
        request = ps.Parse(RetrieveAllPermissionsRequestMsg.typecode)
        return request,RetrieveAllPermissionsResponseMsg()

    soapAction[''] = 'soap_RetrieveAllPermissions'
    root[(RetrieveAllPermissionsRequestMsg.typecode.nspname,RetrieveAllPermissionsRequestMsg.typecode.pname)] = 'soap_RetrieveAllPermissions'

    def soap_SetEntityPermissions(self, ps, **kw):
        request = ps.Parse(SetEntityPermissionsRequestMsg.typecode)
        return request,SetEntityPermissionsResponseMsg()

    soapAction[''] = 'soap_SetEntityPermissions'
    root[(SetEntityPermissionsRequestMsg.typecode.nspname,SetEntityPermissionsRequestMsg.typecode.pname)] = 'soap_SetEntityPermissions'

    def soap_ResetEntityPermissions(self, ps, **kw):
        request = ps.Parse(ResetEntityPermissionsRequestMsg.typecode)
        return request,ResetEntityPermissionsResponseMsg()

    soapAction[''] = 'soap_ResetEntityPermissions'
    root[(ResetEntityPermissionsRequestMsg.typecode.nspname,ResetEntityPermissionsRequestMsg.typecode.pname)] = 'soap_ResetEntityPermissions'

    def soap_RemoveEntityPermission(self, ps, **kw):
        request = ps.Parse(RemoveEntityPermissionRequestMsg.typecode)
        return request,RemoveEntityPermissionResponseMsg()

    soapAction[''] = 'soap_RemoveEntityPermission'
    root[(RemoveEntityPermissionRequestMsg.typecode.nspname,RemoveEntityPermissionRequestMsg.typecode.pname)] = 'soap_RemoveEntityPermission'

    def soap_ReconfigureCluster(self, ps, **kw):
        request = ps.Parse(ReconfigureClusterRequestMsg.typecode)
        return request,ReconfigureClusterResponseMsg()

    soapAction[''] = 'soap_ReconfigureCluster'
    root[(ReconfigureClusterRequestMsg.typecode.nspname,ReconfigureClusterRequestMsg.typecode.pname)] = 'soap_ReconfigureCluster'

    def soap_ReconfigureCluster_Task(self, ps, **kw):
        request = ps.Parse(ReconfigureCluster_TaskRequestMsg.typecode)
        return request,ReconfigureCluster_TaskResponseMsg()

    soapAction[''] = 'soap_ReconfigureCluster_Task'
    root[(ReconfigureCluster_TaskRequestMsg.typecode.nspname,ReconfigureCluster_TaskRequestMsg.typecode.pname)] = 'soap_ReconfigureCluster_Task'

    def soap_ApplyRecommendation(self, ps, **kw):
        request = ps.Parse(ApplyRecommendationRequestMsg.typecode)
        return request,ApplyRecommendationResponseMsg()

    soapAction[''] = 'soap_ApplyRecommendation'
    root[(ApplyRecommendationRequestMsg.typecode.nspname,ApplyRecommendationRequestMsg.typecode.pname)] = 'soap_ApplyRecommendation'

    def soap_RecommendHostsForVm(self, ps, **kw):
        request = ps.Parse(RecommendHostsForVmRequestMsg.typecode)
        return request,RecommendHostsForVmResponseMsg()

    soapAction[''] = 'soap_RecommendHostsForVm'
    root[(RecommendHostsForVmRequestMsg.typecode.nspname,RecommendHostsForVmRequestMsg.typecode.pname)] = 'soap_RecommendHostsForVm'

    def soap_AddHost(self, ps, **kw):
        request = ps.Parse(AddHostRequestMsg.typecode)
        return request,AddHostResponseMsg()

    soapAction[''] = 'soap_AddHost'
    root[(AddHostRequestMsg.typecode.nspname,AddHostRequestMsg.typecode.pname)] = 'soap_AddHost'

    def soap_AddHost_Task(self, ps, **kw):
        request = ps.Parse(AddHost_TaskRequestMsg.typecode)
        return request,AddHost_TaskResponseMsg()

    soapAction[''] = 'soap_AddHost_Task'
    root[(AddHost_TaskRequestMsg.typecode.nspname,AddHost_TaskRequestMsg.typecode.pname)] = 'soap_AddHost_Task'

    def soap_MoveInto(self, ps, **kw):
        request = ps.Parse(MoveIntoRequestMsg.typecode)
        return request,MoveIntoResponseMsg()

    soapAction[''] = 'soap_MoveInto'
    root[(MoveIntoRequestMsg.typecode.nspname,MoveIntoRequestMsg.typecode.pname)] = 'soap_MoveInto'

    def soap_MoveInto_Task(self, ps, **kw):
        request = ps.Parse(MoveInto_TaskRequestMsg.typecode)
        return request,MoveInto_TaskResponseMsg()

    soapAction[''] = 'soap_MoveInto_Task'
    root[(MoveInto_TaskRequestMsg.typecode.nspname,MoveInto_TaskRequestMsg.typecode.pname)] = 'soap_MoveInto_Task'

    def soap_MoveHostInto(self, ps, **kw):
        request = ps.Parse(MoveHostIntoRequestMsg.typecode)
        return request,MoveHostIntoResponseMsg()

    soapAction[''] = 'soap_MoveHostInto'
    root[(MoveHostIntoRequestMsg.typecode.nspname,MoveHostIntoRequestMsg.typecode.pname)] = 'soap_MoveHostInto'

    def soap_MoveHostInto_Task(self, ps, **kw):
        request = ps.Parse(MoveHostInto_TaskRequestMsg.typecode)
        return request,MoveHostInto_TaskResponseMsg()

    soapAction[''] = 'soap_MoveHostInto_Task'
    root[(MoveHostInto_TaskRequestMsg.typecode.nspname,MoveHostInto_TaskRequestMsg.typecode.pname)] = 'soap_MoveHostInto_Task'

    def soap_RefreshRecommendation(self, ps, **kw):
        request = ps.Parse(RefreshRecommendationRequestMsg.typecode)
        return request,RefreshRecommendationResponseMsg()

    soapAction[''] = 'soap_RefreshRecommendation'
    root[(RefreshRecommendationRequestMsg.typecode.nspname,RefreshRecommendationRequestMsg.typecode.pname)] = 'soap_RefreshRecommendation'

    def soap_ReconfigureComputeResource(self, ps, **kw):
        request = ps.Parse(ReconfigureComputeResourceRequestMsg.typecode)
        return request,ReconfigureComputeResourceResponseMsg()

    soapAction[''] = 'soap_ReconfigureComputeResource'
    root[(ReconfigureComputeResourceRequestMsg.typecode.nspname,ReconfigureComputeResourceRequestMsg.typecode.pname)] = 'soap_ReconfigureComputeResource'

    def soap_ReconfigureComputeResource_Task(self, ps, **kw):
        request = ps.Parse(ReconfigureComputeResource_TaskRequestMsg.typecode)
        return request,ReconfigureComputeResource_TaskResponseMsg()

    soapAction[''] = 'soap_ReconfigureComputeResource_Task'
    root[(ReconfigureComputeResource_TaskRequestMsg.typecode.nspname,ReconfigureComputeResource_TaskRequestMsg.typecode.pname)] = 'soap_ReconfigureComputeResource_Task'

    def soap_AddCustomFieldDef(self, ps, **kw):
        request = ps.Parse(AddCustomFieldDefRequestMsg.typecode)
        return request,AddCustomFieldDefResponseMsg()

    soapAction[''] = 'soap_AddCustomFieldDef'
    root[(AddCustomFieldDefRequestMsg.typecode.nspname,AddCustomFieldDefRequestMsg.typecode.pname)] = 'soap_AddCustomFieldDef'

    def soap_RemoveCustomFieldDef(self, ps, **kw):
        request = ps.Parse(RemoveCustomFieldDefRequestMsg.typecode)
        return request,RemoveCustomFieldDefResponseMsg()

    soapAction[''] = 'soap_RemoveCustomFieldDef'
    root[(RemoveCustomFieldDefRequestMsg.typecode.nspname,RemoveCustomFieldDefRequestMsg.typecode.pname)] = 'soap_RemoveCustomFieldDef'

    def soap_RenameCustomFieldDef(self, ps, **kw):
        request = ps.Parse(RenameCustomFieldDefRequestMsg.typecode)
        return request,RenameCustomFieldDefResponseMsg()

    soapAction[''] = 'soap_RenameCustomFieldDef'
    root[(RenameCustomFieldDefRequestMsg.typecode.nspname,RenameCustomFieldDefRequestMsg.typecode.pname)] = 'soap_RenameCustomFieldDef'

    def soap_SetField(self, ps, **kw):
        request = ps.Parse(SetFieldRequestMsg.typecode)
        return request,SetFieldResponseMsg()

    soapAction[''] = 'soap_SetField'
    root[(SetFieldRequestMsg.typecode.nspname,SetFieldRequestMsg.typecode.pname)] = 'soap_SetField'

    def soap_DoesCustomizationSpecExist(self, ps, **kw):
        request = ps.Parse(DoesCustomizationSpecExistRequestMsg.typecode)
        return request,DoesCustomizationSpecExistResponseMsg()

    soapAction[''] = 'soap_DoesCustomizationSpecExist'
    root[(DoesCustomizationSpecExistRequestMsg.typecode.nspname,DoesCustomizationSpecExistRequestMsg.typecode.pname)] = 'soap_DoesCustomizationSpecExist'

    def soap_GetCustomizationSpec(self, ps, **kw):
        request = ps.Parse(GetCustomizationSpecRequestMsg.typecode)
        return request,GetCustomizationSpecResponseMsg()

    soapAction[''] = 'soap_GetCustomizationSpec'
    root[(GetCustomizationSpecRequestMsg.typecode.nspname,GetCustomizationSpecRequestMsg.typecode.pname)] = 'soap_GetCustomizationSpec'

    def soap_CreateCustomizationSpec(self, ps, **kw):
        request = ps.Parse(CreateCustomizationSpecRequestMsg.typecode)
        return request,CreateCustomizationSpecResponseMsg()

    soapAction[''] = 'soap_CreateCustomizationSpec'
    root[(CreateCustomizationSpecRequestMsg.typecode.nspname,CreateCustomizationSpecRequestMsg.typecode.pname)] = 'soap_CreateCustomizationSpec'

    def soap_OverwriteCustomizationSpec(self, ps, **kw):
        request = ps.Parse(OverwriteCustomizationSpecRequestMsg.typecode)
        return request,OverwriteCustomizationSpecResponseMsg()

    soapAction[''] = 'soap_OverwriteCustomizationSpec'
    root[(OverwriteCustomizationSpecRequestMsg.typecode.nspname,OverwriteCustomizationSpecRequestMsg.typecode.pname)] = 'soap_OverwriteCustomizationSpec'

    def soap_DeleteCustomizationSpec(self, ps, **kw):
        request = ps.Parse(DeleteCustomizationSpecRequestMsg.typecode)
        return request,DeleteCustomizationSpecResponseMsg()

    soapAction[''] = 'soap_DeleteCustomizationSpec'
    root[(DeleteCustomizationSpecRequestMsg.typecode.nspname,DeleteCustomizationSpecRequestMsg.typecode.pname)] = 'soap_DeleteCustomizationSpec'

    def soap_DuplicateCustomizationSpec(self, ps, **kw):
        request = ps.Parse(DuplicateCustomizationSpecRequestMsg.typecode)
        return request,DuplicateCustomizationSpecResponseMsg()

    soapAction[''] = 'soap_DuplicateCustomizationSpec'
    root[(DuplicateCustomizationSpecRequestMsg.typecode.nspname,DuplicateCustomizationSpecRequestMsg.typecode.pname)] = 'soap_DuplicateCustomizationSpec'

    def soap_RenameCustomizationSpec(self, ps, **kw):
        request = ps.Parse(RenameCustomizationSpecRequestMsg.typecode)
        return request,RenameCustomizationSpecResponseMsg()

    soapAction[''] = 'soap_RenameCustomizationSpec'
    root[(RenameCustomizationSpecRequestMsg.typecode.nspname,RenameCustomizationSpecRequestMsg.typecode.pname)] = 'soap_RenameCustomizationSpec'

    def soap_CustomizationSpecItemToXml(self, ps, **kw):
        request = ps.Parse(CustomizationSpecItemToXmlRequestMsg.typecode)
        return request,CustomizationSpecItemToXmlResponseMsg()

    soapAction[''] = 'soap_CustomizationSpecItemToXml'
    root[(CustomizationSpecItemToXmlRequestMsg.typecode.nspname,CustomizationSpecItemToXmlRequestMsg.typecode.pname)] = 'soap_CustomizationSpecItemToXml'

    def soap_XmlToCustomizationSpecItem(self, ps, **kw):
        request = ps.Parse(XmlToCustomizationSpecItemRequestMsg.typecode)
        return request,XmlToCustomizationSpecItemResponseMsg()

    soapAction[''] = 'soap_XmlToCustomizationSpecItem'
    root[(XmlToCustomizationSpecItemRequestMsg.typecode.nspname,XmlToCustomizationSpecItemRequestMsg.typecode.pname)] = 'soap_XmlToCustomizationSpecItem'

    def soap_CheckCustomizationResources(self, ps, **kw):
        request = ps.Parse(CheckCustomizationResourcesRequestMsg.typecode)
        return request,CheckCustomizationResourcesResponseMsg()

    soapAction[''] = 'soap_CheckCustomizationResources'
    root[(CheckCustomizationResourcesRequestMsg.typecode.nspname,CheckCustomizationResourcesRequestMsg.typecode.pname)] = 'soap_CheckCustomizationResources'

    def soap_QueryConnectionInfo(self, ps, **kw):
        request = ps.Parse(QueryConnectionInfoRequestMsg.typecode)
        return request,QueryConnectionInfoResponseMsg()

    soapAction[''] = 'soap_QueryConnectionInfo'
    root[(QueryConnectionInfoRequestMsg.typecode.nspname,QueryConnectionInfoRequestMsg.typecode.pname)] = 'soap_QueryConnectionInfo'

    def soap_PowerOnMultiVM(self, ps, **kw):
        request = ps.Parse(PowerOnMultiVMRequestMsg.typecode)
        return request,PowerOnMultiVMResponseMsg()

    soapAction[''] = 'soap_PowerOnMultiVM'
    root[(PowerOnMultiVMRequestMsg.typecode.nspname,PowerOnMultiVMRequestMsg.typecode.pname)] = 'soap_PowerOnMultiVM'

    def soap_PowerOnMultiVM_Task(self, ps, **kw):
        request = ps.Parse(PowerOnMultiVM_TaskRequestMsg.typecode)
        return request,PowerOnMultiVM_TaskResponseMsg()

    soapAction[''] = 'soap_PowerOnMultiVM_Task'
    root[(PowerOnMultiVM_TaskRequestMsg.typecode.nspname,PowerOnMultiVM_TaskRequestMsg.typecode.pname)] = 'soap_PowerOnMultiVM_Task'

    def soap_RenameDatastore(self, ps, **kw):
        request = ps.Parse(RenameDatastoreRequestMsg.typecode)
        return request,RenameDatastoreResponseMsg()

    soapAction[''] = 'soap_RenameDatastore'
    root[(RenameDatastoreRequestMsg.typecode.nspname,RenameDatastoreRequestMsg.typecode.pname)] = 'soap_RenameDatastore'

    def soap_RefreshDatastore(self, ps, **kw):
        request = ps.Parse(RefreshDatastoreRequestMsg.typecode)
        return request,RefreshDatastoreResponseMsg()

    soapAction[''] = 'soap_RefreshDatastore'
    root[(RefreshDatastoreRequestMsg.typecode.nspname,RefreshDatastoreRequestMsg.typecode.pname)] = 'soap_RefreshDatastore'

    def soap_DestroyDatastore(self, ps, **kw):
        request = ps.Parse(DestroyDatastoreRequestMsg.typecode)
        return request,DestroyDatastoreResponseMsg()

    soapAction[''] = 'soap_DestroyDatastore'
    root[(DestroyDatastoreRequestMsg.typecode.nspname,DestroyDatastoreRequestMsg.typecode.pname)] = 'soap_DestroyDatastore'

    def soap_QueryDescriptions(self, ps, **kw):
        request = ps.Parse(QueryDescriptionsRequestMsg.typecode)
        return request,QueryDescriptionsResponseMsg()

    soapAction[''] = 'soap_QueryDescriptions'
    root[(QueryDescriptionsRequestMsg.typecode.nspname,QueryDescriptionsRequestMsg.typecode.pname)] = 'soap_QueryDescriptions'

    def soap_BrowseDiagnosticLog(self, ps, **kw):
        request = ps.Parse(BrowseDiagnosticLogRequestMsg.typecode)
        return request,BrowseDiagnosticLogResponseMsg()

    soapAction[''] = 'soap_BrowseDiagnosticLog'
    root[(BrowseDiagnosticLogRequestMsg.typecode.nspname,BrowseDiagnosticLogRequestMsg.typecode.pname)] = 'soap_BrowseDiagnosticLog'

    def soap_GenerateLogBundles(self, ps, **kw):
        request = ps.Parse(GenerateLogBundlesRequestMsg.typecode)
        return request,GenerateLogBundlesResponseMsg()

    soapAction[''] = 'soap_GenerateLogBundles'
    root[(GenerateLogBundlesRequestMsg.typecode.nspname,GenerateLogBundlesRequestMsg.typecode.pname)] = 'soap_GenerateLogBundles'

    def soap_GenerateLogBundles_Task(self, ps, **kw):
        request = ps.Parse(GenerateLogBundles_TaskRequestMsg.typecode)
        return request,GenerateLogBundles_TaskResponseMsg()

    soapAction[''] = 'soap_GenerateLogBundles_Task'
    root[(GenerateLogBundles_TaskRequestMsg.typecode.nspname,GenerateLogBundles_TaskRequestMsg.typecode.pname)] = 'soap_GenerateLogBundles_Task'

    def soap_QueryConfigOptionDescriptor(self, ps, **kw):
        request = ps.Parse(QueryConfigOptionDescriptorRequestMsg.typecode)
        return request,QueryConfigOptionDescriptorResponseMsg()

    soapAction[''] = 'soap_QueryConfigOptionDescriptor'
    root[(QueryConfigOptionDescriptorRequestMsg.typecode.nspname,QueryConfigOptionDescriptorRequestMsg.typecode.pname)] = 'soap_QueryConfigOptionDescriptor'

    def soap_QueryConfigOption(self, ps, **kw):
        request = ps.Parse(QueryConfigOptionRequestMsg.typecode)
        return request,QueryConfigOptionResponseMsg()

    soapAction[''] = 'soap_QueryConfigOption'
    root[(QueryConfigOptionRequestMsg.typecode.nspname,QueryConfigOptionRequestMsg.typecode.pname)] = 'soap_QueryConfigOption'

    def soap_QueryConfigTarget(self, ps, **kw):
        request = ps.Parse(QueryConfigTargetRequestMsg.typecode)
        return request,QueryConfigTargetResponseMsg()

    soapAction[''] = 'soap_QueryConfigTarget'
    root[(QueryConfigTargetRequestMsg.typecode.nspname,QueryConfigTargetRequestMsg.typecode.pname)] = 'soap_QueryConfigTarget'

    def soap_setCustomValue(self, ps, **kw):
        request = ps.Parse(setCustomValueRequestMsg.typecode)
        return request,setCustomValueResponseMsg()

    soapAction[''] = 'soap_setCustomValue'
    root[(setCustomValueRequestMsg.typecode.nspname,setCustomValueRequestMsg.typecode.pname)] = 'soap_setCustomValue'

    def soap_UnregisterExtension(self, ps, **kw):
        request = ps.Parse(UnregisterExtensionRequestMsg.typecode)
        return request,UnregisterExtensionResponseMsg()

    soapAction[''] = 'soap_UnregisterExtension'
    root[(UnregisterExtensionRequestMsg.typecode.nspname,UnregisterExtensionRequestMsg.typecode.pname)] = 'soap_UnregisterExtension'

    def soap_FindExtension(self, ps, **kw):
        request = ps.Parse(FindExtensionRequestMsg.typecode)
        return request,FindExtensionResponseMsg()

    soapAction[''] = 'soap_FindExtension'
    root[(FindExtensionRequestMsg.typecode.nspname,FindExtensionRequestMsg.typecode.pname)] = 'soap_FindExtension'

    def soap_RegisterExtension(self, ps, **kw):
        request = ps.Parse(RegisterExtensionRequestMsg.typecode)
        return request,RegisterExtensionResponseMsg()

    soapAction[''] = 'soap_RegisterExtension'
    root[(RegisterExtensionRequestMsg.typecode.nspname,RegisterExtensionRequestMsg.typecode.pname)] = 'soap_RegisterExtension'

    def soap_UpdateExtension(self, ps, **kw):
        request = ps.Parse(UpdateExtensionRequestMsg.typecode)
        return request,UpdateExtensionResponseMsg()

    soapAction[''] = 'soap_UpdateExtension'
    root[(UpdateExtensionRequestMsg.typecode.nspname,UpdateExtensionRequestMsg.typecode.pname)] = 'soap_UpdateExtension'

    def soap_GetPublicKey(self, ps, **kw):
        request = ps.Parse(GetPublicKeyRequestMsg.typecode)
        return request,GetPublicKeyResponseMsg()

    soapAction[''] = 'soap_GetPublicKey'
    root[(GetPublicKeyRequestMsg.typecode.nspname,GetPublicKeyRequestMsg.typecode.pname)] = 'soap_GetPublicKey'

    def soap_SetPublicKey(self, ps, **kw):
        request = ps.Parse(SetPublicKeyRequestMsg.typecode)
        return request,SetPublicKeyResponseMsg()

    soapAction[''] = 'soap_SetPublicKey'
    root[(SetPublicKeyRequestMsg.typecode.nspname,SetPublicKeyRequestMsg.typecode.pname)] = 'soap_SetPublicKey'

    def soap_MoveDatastoreFile(self, ps, **kw):
        request = ps.Parse(MoveDatastoreFileRequestMsg.typecode)
        return request,MoveDatastoreFileResponseMsg()

    soapAction[''] = 'soap_MoveDatastoreFile'
    root[(MoveDatastoreFileRequestMsg.typecode.nspname,MoveDatastoreFileRequestMsg.typecode.pname)] = 'soap_MoveDatastoreFile'

    def soap_MoveDatastoreFile_Task(self, ps, **kw):
        request = ps.Parse(MoveDatastoreFile_TaskRequestMsg.typecode)
        return request,MoveDatastoreFile_TaskResponseMsg()

    soapAction[''] = 'soap_MoveDatastoreFile_Task'
    root[(MoveDatastoreFile_TaskRequestMsg.typecode.nspname,MoveDatastoreFile_TaskRequestMsg.typecode.pname)] = 'soap_MoveDatastoreFile_Task'

    def soap_CopyDatastoreFile(self, ps, **kw):
        request = ps.Parse(CopyDatastoreFileRequestMsg.typecode)
        return request,CopyDatastoreFileResponseMsg()

    soapAction[''] = 'soap_CopyDatastoreFile'
    root[(CopyDatastoreFileRequestMsg.typecode.nspname,CopyDatastoreFileRequestMsg.typecode.pname)] = 'soap_CopyDatastoreFile'

    def soap_CopyDatastoreFile_Task(self, ps, **kw):
        request = ps.Parse(CopyDatastoreFile_TaskRequestMsg.typecode)
        return request,CopyDatastoreFile_TaskResponseMsg()

    soapAction[''] = 'soap_CopyDatastoreFile_Task'
    root[(CopyDatastoreFile_TaskRequestMsg.typecode.nspname,CopyDatastoreFile_TaskRequestMsg.typecode.pname)] = 'soap_CopyDatastoreFile_Task'

    def soap_DeleteDatastoreFile(self, ps, **kw):
        request = ps.Parse(DeleteDatastoreFileRequestMsg.typecode)
        return request,DeleteDatastoreFileResponseMsg()

    soapAction[''] = 'soap_DeleteDatastoreFile'
    root[(DeleteDatastoreFileRequestMsg.typecode.nspname,DeleteDatastoreFileRequestMsg.typecode.pname)] = 'soap_DeleteDatastoreFile'

    def soap_DeleteDatastoreFile_Task(self, ps, **kw):
        request = ps.Parse(DeleteDatastoreFile_TaskRequestMsg.typecode)
        return request,DeleteDatastoreFile_TaskResponseMsg()

    soapAction[''] = 'soap_DeleteDatastoreFile_Task'
    root[(DeleteDatastoreFile_TaskRequestMsg.typecode.nspname,DeleteDatastoreFile_TaskRequestMsg.typecode.pname)] = 'soap_DeleteDatastoreFile_Task'

    def soap_MakeDirectory(self, ps, **kw):
        request = ps.Parse(MakeDirectoryRequestMsg.typecode)
        return request,MakeDirectoryResponseMsg()

    soapAction[''] = 'soap_MakeDirectory'
    root[(MakeDirectoryRequestMsg.typecode.nspname,MakeDirectoryRequestMsg.typecode.pname)] = 'soap_MakeDirectory'

    def soap_CreateFolder(self, ps, **kw):
        request = ps.Parse(CreateFolderRequestMsg.typecode)
        return request,CreateFolderResponseMsg()

    soapAction[''] = 'soap_CreateFolder'
    root[(CreateFolderRequestMsg.typecode.nspname,CreateFolderRequestMsg.typecode.pname)] = 'soap_CreateFolder'

    def soap_MoveIntoFolder(self, ps, **kw):
        request = ps.Parse(MoveIntoFolderRequestMsg.typecode)
        return request,MoveIntoFolderResponseMsg()

    soapAction[''] = 'soap_MoveIntoFolder'
    root[(MoveIntoFolderRequestMsg.typecode.nspname,MoveIntoFolderRequestMsg.typecode.pname)] = 'soap_MoveIntoFolder'

    def soap_MoveIntoFolder_Task(self, ps, **kw):
        request = ps.Parse(MoveIntoFolder_TaskRequestMsg.typecode)
        return request,MoveIntoFolder_TaskResponseMsg()

    soapAction[''] = 'soap_MoveIntoFolder_Task'
    root[(MoveIntoFolder_TaskRequestMsg.typecode.nspname,MoveIntoFolder_TaskRequestMsg.typecode.pname)] = 'soap_MoveIntoFolder_Task'

    def soap_CreateVM(self, ps, **kw):
        request = ps.Parse(CreateVMRequestMsg.typecode)
        return request,CreateVMResponseMsg()

    soapAction[''] = 'soap_CreateVM'
    root[(CreateVMRequestMsg.typecode.nspname,CreateVMRequestMsg.typecode.pname)] = 'soap_CreateVM'

    def soap_CreateVM_Task(self, ps, **kw):
        request = ps.Parse(CreateVM_TaskRequestMsg.typecode)
        return request,CreateVM_TaskResponseMsg()

    soapAction[''] = 'soap_CreateVM_Task'
    root[(CreateVM_TaskRequestMsg.typecode.nspname,CreateVM_TaskRequestMsg.typecode.pname)] = 'soap_CreateVM_Task'

    def soap_RegisterVM(self, ps, **kw):
        request = ps.Parse(RegisterVMRequestMsg.typecode)
        return request,RegisterVMResponseMsg()

    soapAction[''] = 'soap_RegisterVM'
    root[(RegisterVMRequestMsg.typecode.nspname,RegisterVMRequestMsg.typecode.pname)] = 'soap_RegisterVM'

    def soap_RegisterVM_Task(self, ps, **kw):
        request = ps.Parse(RegisterVM_TaskRequestMsg.typecode)
        return request,RegisterVM_TaskResponseMsg()

    soapAction[''] = 'soap_RegisterVM_Task'
    root[(RegisterVM_TaskRequestMsg.typecode.nspname,RegisterVM_TaskRequestMsg.typecode.pname)] = 'soap_RegisterVM_Task'

    def soap_CreateCluster(self, ps, **kw):
        request = ps.Parse(CreateClusterRequestMsg.typecode)
        return request,CreateClusterResponseMsg()

    soapAction[''] = 'soap_CreateCluster'
    root[(CreateClusterRequestMsg.typecode.nspname,CreateClusterRequestMsg.typecode.pname)] = 'soap_CreateCluster'

    def soap_CreateClusterEx(self, ps, **kw):
        request = ps.Parse(CreateClusterExRequestMsg.typecode)
        return request,CreateClusterExResponseMsg()

    soapAction[''] = 'soap_CreateClusterEx'
    root[(CreateClusterExRequestMsg.typecode.nspname,CreateClusterExRequestMsg.typecode.pname)] = 'soap_CreateClusterEx'

    def soap_AddStandaloneHost(self, ps, **kw):
        request = ps.Parse(AddStandaloneHostRequestMsg.typecode)
        return request,AddStandaloneHostResponseMsg()

    soapAction[''] = 'soap_AddStandaloneHost'
    root[(AddStandaloneHostRequestMsg.typecode.nspname,AddStandaloneHostRequestMsg.typecode.pname)] = 'soap_AddStandaloneHost'

    def soap_AddStandaloneHost_Task(self, ps, **kw):
        request = ps.Parse(AddStandaloneHost_TaskRequestMsg.typecode)
        return request,AddStandaloneHost_TaskResponseMsg()

    soapAction[''] = 'soap_AddStandaloneHost_Task'
    root[(AddStandaloneHost_TaskRequestMsg.typecode.nspname,AddStandaloneHost_TaskRequestMsg.typecode.pname)] = 'soap_AddStandaloneHost_Task'

    def soap_CreateDatacenter(self, ps, **kw):
        request = ps.Parse(CreateDatacenterRequestMsg.typecode)
        return request,CreateDatacenterResponseMsg()

    soapAction[''] = 'soap_CreateDatacenter'
    root[(CreateDatacenterRequestMsg.typecode.nspname,CreateDatacenterRequestMsg.typecode.pname)] = 'soap_CreateDatacenter'

    def soap_UnregisterAndDestroy(self, ps, **kw):
        request = ps.Parse(UnregisterAndDestroyRequestMsg.typecode)
        return request,UnregisterAndDestroyResponseMsg()

    soapAction[''] = 'soap_UnregisterAndDestroy'
    root[(UnregisterAndDestroyRequestMsg.typecode.nspname,UnregisterAndDestroyRequestMsg.typecode.pname)] = 'soap_UnregisterAndDestroy'

    def soap_UnregisterAndDestroy_Task(self, ps, **kw):
        request = ps.Parse(UnregisterAndDestroy_TaskRequestMsg.typecode)
        return request,UnregisterAndDestroy_TaskResponseMsg()

    soapAction[''] = 'soap_UnregisterAndDestroy_Task'
    root[(UnregisterAndDestroy_TaskRequestMsg.typecode.nspname,UnregisterAndDestroy_TaskRequestMsg.typecode.pname)] = 'soap_UnregisterAndDestroy_Task'

    def soap_SetCollectorPageSize(self, ps, **kw):
        request = ps.Parse(SetCollectorPageSizeRequestMsg.typecode)
        return request,SetCollectorPageSizeResponseMsg()

    soapAction[''] = 'soap_SetCollectorPageSize'
    root[(SetCollectorPageSizeRequestMsg.typecode.nspname,SetCollectorPageSizeRequestMsg.typecode.pname)] = 'soap_SetCollectorPageSize'

    def soap_RewindCollector(self, ps, **kw):
        request = ps.Parse(RewindCollectorRequestMsg.typecode)
        return request,RewindCollectorResponseMsg()

    soapAction[''] = 'soap_RewindCollector'
    root[(RewindCollectorRequestMsg.typecode.nspname,RewindCollectorRequestMsg.typecode.pname)] = 'soap_RewindCollector'

    def soap_ResetCollector(self, ps, **kw):
        request = ps.Parse(ResetCollectorRequestMsg.typecode)
        return request,ResetCollectorResponseMsg()

    soapAction[''] = 'soap_ResetCollector'
    root[(ResetCollectorRequestMsg.typecode.nspname,ResetCollectorRequestMsg.typecode.pname)] = 'soap_ResetCollector'

    def soap_DestroyCollector(self, ps, **kw):
        request = ps.Parse(DestroyCollectorRequestMsg.typecode)
        return request,DestroyCollectorResponseMsg()

    soapAction[''] = 'soap_DestroyCollector'
    root[(DestroyCollectorRequestMsg.typecode.nspname,DestroyCollectorRequestMsg.typecode.pname)] = 'soap_DestroyCollector'

    def soap_QueryHostConnectionInfo(self, ps, **kw):
        request = ps.Parse(QueryHostConnectionInfoRequestMsg.typecode)
        return request,QueryHostConnectionInfoResponseMsg()

    soapAction[''] = 'soap_QueryHostConnectionInfo'
    root[(QueryHostConnectionInfoRequestMsg.typecode.nspname,QueryHostConnectionInfoRequestMsg.typecode.pname)] = 'soap_QueryHostConnectionInfo'

    def soap_UpdateSystemResources(self, ps, **kw):
        request = ps.Parse(UpdateSystemResourcesRequestMsg.typecode)
        return request,UpdateSystemResourcesResponseMsg()

    soapAction[''] = 'soap_UpdateSystemResources'
    root[(UpdateSystemResourcesRequestMsg.typecode.nspname,UpdateSystemResourcesRequestMsg.typecode.pname)] = 'soap_UpdateSystemResources'

    def soap_ReconnectHost(self, ps, **kw):
        request = ps.Parse(ReconnectHostRequestMsg.typecode)
        return request,ReconnectHostResponseMsg()

    soapAction[''] = 'soap_ReconnectHost'
    root[(ReconnectHostRequestMsg.typecode.nspname,ReconnectHostRequestMsg.typecode.pname)] = 'soap_ReconnectHost'

    def soap_ReconnectHost_Task(self, ps, **kw):
        request = ps.Parse(ReconnectHost_TaskRequestMsg.typecode)
        return request,ReconnectHost_TaskResponseMsg()

    soapAction[''] = 'soap_ReconnectHost_Task'
    root[(ReconnectHost_TaskRequestMsg.typecode.nspname,ReconnectHost_TaskRequestMsg.typecode.pname)] = 'soap_ReconnectHost_Task'

    def soap_DisconnectHost(self, ps, **kw):
        request = ps.Parse(DisconnectHostRequestMsg.typecode)
        return request,DisconnectHostResponseMsg()

    soapAction[''] = 'soap_DisconnectHost'
    root[(DisconnectHostRequestMsg.typecode.nspname,DisconnectHostRequestMsg.typecode.pname)] = 'soap_DisconnectHost'

    def soap_DisconnectHost_Task(self, ps, **kw):
        request = ps.Parse(DisconnectHost_TaskRequestMsg.typecode)
        return request,DisconnectHost_TaskResponseMsg()

    soapAction[''] = 'soap_DisconnectHost_Task'
    root[(DisconnectHost_TaskRequestMsg.typecode.nspname,DisconnectHost_TaskRequestMsg.typecode.pname)] = 'soap_DisconnectHost_Task'

    def soap_EnterMaintenanceMode(self, ps, **kw):
        request = ps.Parse(EnterMaintenanceModeRequestMsg.typecode)
        return request,EnterMaintenanceModeResponseMsg()

    soapAction[''] = 'soap_EnterMaintenanceMode'
    root[(EnterMaintenanceModeRequestMsg.typecode.nspname,EnterMaintenanceModeRequestMsg.typecode.pname)] = 'soap_EnterMaintenanceMode'

    def soap_EnterMaintenanceMode_Task(self, ps, **kw):
        request = ps.Parse(EnterMaintenanceMode_TaskRequestMsg.typecode)
        return request,EnterMaintenanceMode_TaskResponseMsg()

    soapAction[''] = 'soap_EnterMaintenanceMode_Task'
    root[(EnterMaintenanceMode_TaskRequestMsg.typecode.nspname,EnterMaintenanceMode_TaskRequestMsg.typecode.pname)] = 'soap_EnterMaintenanceMode_Task'

    def soap_ExitMaintenanceMode(self, ps, **kw):
        request = ps.Parse(ExitMaintenanceModeRequestMsg.typecode)
        return request,ExitMaintenanceModeResponseMsg()

    soapAction[''] = 'soap_ExitMaintenanceMode'
    root[(ExitMaintenanceModeRequestMsg.typecode.nspname,ExitMaintenanceModeRequestMsg.typecode.pname)] = 'soap_ExitMaintenanceMode'

    def soap_ExitMaintenanceMode_Task(self, ps, **kw):
        request = ps.Parse(ExitMaintenanceMode_TaskRequestMsg.typecode)
        return request,ExitMaintenanceMode_TaskResponseMsg()

    soapAction[''] = 'soap_ExitMaintenanceMode_Task'
    root[(ExitMaintenanceMode_TaskRequestMsg.typecode.nspname,ExitMaintenanceMode_TaskRequestMsg.typecode.pname)] = 'soap_ExitMaintenanceMode_Task'

    def soap_RebootHost(self, ps, **kw):
        request = ps.Parse(RebootHostRequestMsg.typecode)
        return request,RebootHostResponseMsg()

    soapAction[''] = 'soap_RebootHost'
    root[(RebootHostRequestMsg.typecode.nspname,RebootHostRequestMsg.typecode.pname)] = 'soap_RebootHost'

    def soap_RebootHost_Task(self, ps, **kw):
        request = ps.Parse(RebootHost_TaskRequestMsg.typecode)
        return request,RebootHost_TaskResponseMsg()

    soapAction[''] = 'soap_RebootHost_Task'
    root[(RebootHost_TaskRequestMsg.typecode.nspname,RebootHost_TaskRequestMsg.typecode.pname)] = 'soap_RebootHost_Task'

    def soap_ShutdownHost(self, ps, **kw):
        request = ps.Parse(ShutdownHostRequestMsg.typecode)
        return request,ShutdownHostResponseMsg()

    soapAction[''] = 'soap_ShutdownHost'
    root[(ShutdownHostRequestMsg.typecode.nspname,ShutdownHostRequestMsg.typecode.pname)] = 'soap_ShutdownHost'

    def soap_ShutdownHost_Task(self, ps, **kw):
        request = ps.Parse(ShutdownHost_TaskRequestMsg.typecode)
        return request,ShutdownHost_TaskResponseMsg()

    soapAction[''] = 'soap_ShutdownHost_Task'
    root[(ShutdownHost_TaskRequestMsg.typecode.nspname,ShutdownHost_TaskRequestMsg.typecode.pname)] = 'soap_ShutdownHost_Task'

    def soap_PowerDownHostToStandBy(self, ps, **kw):
        request = ps.Parse(PowerDownHostToStandByRequestMsg.typecode)
        return request,PowerDownHostToStandByResponseMsg()

    soapAction[''] = 'soap_PowerDownHostToStandBy'
    root[(PowerDownHostToStandByRequestMsg.typecode.nspname,PowerDownHostToStandByRequestMsg.typecode.pname)] = 'soap_PowerDownHostToStandBy'

    def soap_PowerDownHostToStandBy_Task(self, ps, **kw):
        request = ps.Parse(PowerDownHostToStandBy_TaskRequestMsg.typecode)
        return request,PowerDownHostToStandBy_TaskResponseMsg()

    soapAction[''] = 'soap_PowerDownHostToStandBy_Task'
    root[(PowerDownHostToStandBy_TaskRequestMsg.typecode.nspname,PowerDownHostToStandBy_TaskRequestMsg.typecode.pname)] = 'soap_PowerDownHostToStandBy_Task'

    def soap_PowerUpHostFromStandBy(self, ps, **kw):
        request = ps.Parse(PowerUpHostFromStandByRequestMsg.typecode)
        return request,PowerUpHostFromStandByResponseMsg()

    soapAction[''] = 'soap_PowerUpHostFromStandBy'
    root[(PowerUpHostFromStandByRequestMsg.typecode.nspname,PowerUpHostFromStandByRequestMsg.typecode.pname)] = 'soap_PowerUpHostFromStandBy'

    def soap_PowerUpHostFromStandBy_Task(self, ps, **kw):
        request = ps.Parse(PowerUpHostFromStandBy_TaskRequestMsg.typecode)
        return request,PowerUpHostFromStandBy_TaskResponseMsg()

    soapAction[''] = 'soap_PowerUpHostFromStandBy_Task'
    root[(PowerUpHostFromStandBy_TaskRequestMsg.typecode.nspname,PowerUpHostFromStandBy_TaskRequestMsg.typecode.pname)] = 'soap_PowerUpHostFromStandBy_Task'

    def soap_QueryMemoryOverhead(self, ps, **kw):
        request = ps.Parse(QueryMemoryOverheadRequestMsg.typecode)
        return request,QueryMemoryOverheadResponseMsg()

    soapAction[''] = 'soap_QueryMemoryOverhead'
    root[(QueryMemoryOverheadRequestMsg.typecode.nspname,QueryMemoryOverheadRequestMsg.typecode.pname)] = 'soap_QueryMemoryOverhead'

    def soap_QueryMemoryOverheadEx(self, ps, **kw):
        request = ps.Parse(QueryMemoryOverheadExRequestMsg.typecode)
        return request,QueryMemoryOverheadExResponseMsg()

    soapAction[''] = 'soap_QueryMemoryOverheadEx'
    root[(QueryMemoryOverheadExRequestMsg.typecode.nspname,QueryMemoryOverheadExRequestMsg.typecode.pname)] = 'soap_QueryMemoryOverheadEx'

    def soap_ReconfigureHostForDAS(self, ps, **kw):
        request = ps.Parse(ReconfigureHostForDASRequestMsg.typecode)
        return request,ReconfigureHostForDASResponseMsg()

    soapAction[''] = 'soap_ReconfigureHostForDAS'
    root[(ReconfigureHostForDASRequestMsg.typecode.nspname,ReconfigureHostForDASRequestMsg.typecode.pname)] = 'soap_ReconfigureHostForDAS'

    def soap_ReconfigureHostForDAS_Task(self, ps, **kw):
        request = ps.Parse(ReconfigureHostForDAS_TaskRequestMsg.typecode)
        return request,ReconfigureHostForDAS_TaskResponseMsg()

    soapAction[''] = 'soap_ReconfigureHostForDAS_Task'
    root[(ReconfigureHostForDAS_TaskRequestMsg.typecode.nspname,ReconfigureHostForDAS_TaskRequestMsg.typecode.pname)] = 'soap_ReconfigureHostForDAS_Task'

    def soap_UpdateFlags(self, ps, **kw):
        request = ps.Parse(UpdateFlagsRequestMsg.typecode)
        return request,UpdateFlagsResponseMsg()

    soapAction[''] = 'soap_UpdateFlags'
    root[(UpdateFlagsRequestMsg.typecode.nspname,UpdateFlagsRequestMsg.typecode.pname)] = 'soap_UpdateFlags'

    def soap_AcquireCimServicesTicket(self, ps, **kw):
        request = ps.Parse(AcquireCimServicesTicketRequestMsg.typecode)
        return request,AcquireCimServicesTicketResponseMsg()

    soapAction[''] = 'soap_AcquireCimServicesTicket'
    root[(AcquireCimServicesTicketRequestMsg.typecode.nspname,AcquireCimServicesTicketRequestMsg.typecode.pname)] = 'soap_AcquireCimServicesTicket'

    def soap_QuerySupportedFeatures(self, ps, **kw):
        request = ps.Parse(QuerySupportedFeaturesRequestMsg.typecode)
        return request,QuerySupportedFeaturesResponseMsg()

    soapAction[''] = 'soap_QuerySupportedFeatures'
    root[(QuerySupportedFeaturesRequestMsg.typecode.nspname,QuerySupportedFeaturesRequestMsg.typecode.pname)] = 'soap_QuerySupportedFeatures'

    def soap_QueryLicenseSourceAvailability(self, ps, **kw):
        request = ps.Parse(QueryLicenseSourceAvailabilityRequestMsg.typecode)
        return request,QueryLicenseSourceAvailabilityResponseMsg()

    soapAction[''] = 'soap_QueryLicenseSourceAvailability'
    root[(QueryLicenseSourceAvailabilityRequestMsg.typecode.nspname,QueryLicenseSourceAvailabilityRequestMsg.typecode.pname)] = 'soap_QueryLicenseSourceAvailability'

    def soap_QueryLicenseUsage(self, ps, **kw):
        request = ps.Parse(QueryLicenseUsageRequestMsg.typecode)
        return request,QueryLicenseUsageResponseMsg()

    soapAction[''] = 'soap_QueryLicenseUsage'
    root[(QueryLicenseUsageRequestMsg.typecode.nspname,QueryLicenseUsageRequestMsg.typecode.pname)] = 'soap_QueryLicenseUsage'

    def soap_SetLicenseEdition(self, ps, **kw):
        request = ps.Parse(SetLicenseEditionRequestMsg.typecode)
        return request,SetLicenseEditionResponseMsg()

    soapAction[''] = 'soap_SetLicenseEdition'
    root[(SetLicenseEditionRequestMsg.typecode.nspname,SetLicenseEditionRequestMsg.typecode.pname)] = 'soap_SetLicenseEdition'

    def soap_CheckLicenseFeature(self, ps, **kw):
        request = ps.Parse(CheckLicenseFeatureRequestMsg.typecode)
        return request,CheckLicenseFeatureResponseMsg()

    soapAction[''] = 'soap_CheckLicenseFeature'
    root[(CheckLicenseFeatureRequestMsg.typecode.nspname,CheckLicenseFeatureRequestMsg.typecode.pname)] = 'soap_CheckLicenseFeature'

    def soap_EnableFeature(self, ps, **kw):
        request = ps.Parse(EnableFeatureRequestMsg.typecode)
        return request,EnableFeatureResponseMsg()

    soapAction[''] = 'soap_EnableFeature'
    root[(EnableFeatureRequestMsg.typecode.nspname,EnableFeatureRequestMsg.typecode.pname)] = 'soap_EnableFeature'

    def soap_DisableFeature(self, ps, **kw):
        request = ps.Parse(DisableFeatureRequestMsg.typecode)
        return request,DisableFeatureResponseMsg()

    soapAction[''] = 'soap_DisableFeature'
    root[(DisableFeatureRequestMsg.typecode.nspname,DisableFeatureRequestMsg.typecode.pname)] = 'soap_DisableFeature'

    def soap_ConfigureLicenseSource(self, ps, **kw):
        request = ps.Parse(ConfigureLicenseSourceRequestMsg.typecode)
        return request,ConfigureLicenseSourceResponseMsg()

    soapAction[''] = 'soap_ConfigureLicenseSource'
    root[(ConfigureLicenseSourceRequestMsg.typecode.nspname,ConfigureLicenseSourceRequestMsg.typecode.pname)] = 'soap_ConfigureLicenseSource'

    def soap_Reload(self, ps, **kw):
        request = ps.Parse(ReloadRequestMsg.typecode)
        return request,ReloadResponseMsg()

    soapAction[''] = 'soap_Reload'
    root[(ReloadRequestMsg.typecode.nspname,ReloadRequestMsg.typecode.pname)] = 'soap_Reload'

    def soap_Rename(self, ps, **kw):
        request = ps.Parse(RenameRequestMsg.typecode)
        return request,RenameResponseMsg()

    soapAction[''] = 'soap_Rename'
    root[(RenameRequestMsg.typecode.nspname,RenameRequestMsg.typecode.pname)] = 'soap_Rename'

    def soap_Rename_Task(self, ps, **kw):
        request = ps.Parse(Rename_TaskRequestMsg.typecode)
        return request,Rename_TaskResponseMsg()

    soapAction[''] = 'soap_Rename_Task'
    root[(Rename_TaskRequestMsg.typecode.nspname,Rename_TaskRequestMsg.typecode.pname)] = 'soap_Rename_Task'

    def soap_Destroy(self, ps, **kw):
        request = ps.Parse(DestroyRequestMsg.typecode)
        return request,DestroyResponseMsg()

    soapAction[''] = 'soap_Destroy'
    root[(DestroyRequestMsg.typecode.nspname,DestroyRequestMsg.typecode.pname)] = 'soap_Destroy'

    def soap_Destroy_Task(self, ps, **kw):
        request = ps.Parse(Destroy_TaskRequestMsg.typecode)
        return request,Destroy_TaskResponseMsg()

    soapAction[''] = 'soap_Destroy_Task'
    root[(Destroy_TaskRequestMsg.typecode.nspname,Destroy_TaskRequestMsg.typecode.pname)] = 'soap_Destroy_Task'

    def soap_DestroyNetwork(self, ps, **kw):
        request = ps.Parse(DestroyNetworkRequestMsg.typecode)
        return request,DestroyNetworkResponseMsg()

    soapAction[''] = 'soap_DestroyNetwork'
    root[(DestroyNetworkRequestMsg.typecode.nspname,DestroyNetworkRequestMsg.typecode.pname)] = 'soap_DestroyNetwork'

    def soap_QueryPerfProviderSummary(self, ps, **kw):
        request = ps.Parse(QueryPerfProviderSummaryRequestMsg.typecode)
        return request,QueryPerfProviderSummaryResponseMsg()

    soapAction[''] = 'soap_QueryPerfProviderSummary'
    root[(QueryPerfProviderSummaryRequestMsg.typecode.nspname,QueryPerfProviderSummaryRequestMsg.typecode.pname)] = 'soap_QueryPerfProviderSummary'

    def soap_QueryAvailablePerfMetric(self, ps, **kw):
        request = ps.Parse(QueryAvailablePerfMetricRequestMsg.typecode)
        return request,QueryAvailablePerfMetricResponseMsg()

    soapAction[''] = 'soap_QueryAvailablePerfMetric'
    root[(QueryAvailablePerfMetricRequestMsg.typecode.nspname,QueryAvailablePerfMetricRequestMsg.typecode.pname)] = 'soap_QueryAvailablePerfMetric'

    def soap_QueryPerfCounter(self, ps, **kw):
        request = ps.Parse(QueryPerfCounterRequestMsg.typecode)
        return request,QueryPerfCounterResponseMsg()

    soapAction[''] = 'soap_QueryPerfCounter'
    root[(QueryPerfCounterRequestMsg.typecode.nspname,QueryPerfCounterRequestMsg.typecode.pname)] = 'soap_QueryPerfCounter'

    def soap_QueryPerfCounterByLevel(self, ps, **kw):
        request = ps.Parse(QueryPerfCounterByLevelRequestMsg.typecode)
        return request,QueryPerfCounterByLevelResponseMsg()

    soapAction[''] = 'soap_QueryPerfCounterByLevel'
    root[(QueryPerfCounterByLevelRequestMsg.typecode.nspname,QueryPerfCounterByLevelRequestMsg.typecode.pname)] = 'soap_QueryPerfCounterByLevel'

    def soap_QueryPerf(self, ps, **kw):
        request = ps.Parse(QueryPerfRequestMsg.typecode)
        return request,QueryPerfResponseMsg()

    soapAction[''] = 'soap_QueryPerf'
    root[(QueryPerfRequestMsg.typecode.nspname,QueryPerfRequestMsg.typecode.pname)] = 'soap_QueryPerf'

    def soap_QueryPerfComposite(self, ps, **kw):
        request = ps.Parse(QueryPerfCompositeRequestMsg.typecode)
        return request,QueryPerfCompositeResponseMsg()

    soapAction[''] = 'soap_QueryPerfComposite'
    root[(QueryPerfCompositeRequestMsg.typecode.nspname,QueryPerfCompositeRequestMsg.typecode.pname)] = 'soap_QueryPerfComposite'

    def soap_CreatePerfInterval(self, ps, **kw):
        request = ps.Parse(CreatePerfIntervalRequestMsg.typecode)
        return request,CreatePerfIntervalResponseMsg()

    soapAction[''] = 'soap_CreatePerfInterval'
    root[(CreatePerfIntervalRequestMsg.typecode.nspname,CreatePerfIntervalRequestMsg.typecode.pname)] = 'soap_CreatePerfInterval'

    def soap_RemovePerfInterval(self, ps, **kw):
        request = ps.Parse(RemovePerfIntervalRequestMsg.typecode)
        return request,RemovePerfIntervalResponseMsg()

    soapAction[''] = 'soap_RemovePerfInterval'
    root[(RemovePerfIntervalRequestMsg.typecode.nspname,RemovePerfIntervalRequestMsg.typecode.pname)] = 'soap_RemovePerfInterval'

    def soap_UpdatePerfInterval(self, ps, **kw):
        request = ps.Parse(UpdatePerfIntervalRequestMsg.typecode)
        return request,UpdatePerfIntervalResponseMsg()

    soapAction[''] = 'soap_UpdatePerfInterval'
    root[(UpdatePerfIntervalRequestMsg.typecode.nspname,UpdatePerfIntervalRequestMsg.typecode.pname)] = 'soap_UpdatePerfInterval'

    def soap_UpdateConfig(self, ps, **kw):
        request = ps.Parse(UpdateConfigRequestMsg.typecode)
        return request,UpdateConfigResponseMsg()

    soapAction[''] = 'soap_UpdateConfig'
    root[(UpdateConfigRequestMsg.typecode.nspname,UpdateConfigRequestMsg.typecode.pname)] = 'soap_UpdateConfig'

    def soap_MoveIntoResourcePool(self, ps, **kw):
        request = ps.Parse(MoveIntoResourcePoolRequestMsg.typecode)
        return request,MoveIntoResourcePoolResponseMsg()

    soapAction[''] = 'soap_MoveIntoResourcePool'
    root[(MoveIntoResourcePoolRequestMsg.typecode.nspname,MoveIntoResourcePoolRequestMsg.typecode.pname)] = 'soap_MoveIntoResourcePool'

    def soap_UpdateChildResourceConfiguration(self, ps, **kw):
        request = ps.Parse(UpdateChildResourceConfigurationRequestMsg.typecode)
        return request,UpdateChildResourceConfigurationResponseMsg()

    soapAction[''] = 'soap_UpdateChildResourceConfiguration'
    root[(UpdateChildResourceConfigurationRequestMsg.typecode.nspname,UpdateChildResourceConfigurationRequestMsg.typecode.pname)] = 'soap_UpdateChildResourceConfiguration'

    def soap_CreateResourcePool(self, ps, **kw):
        request = ps.Parse(CreateResourcePoolRequestMsg.typecode)
        return request,CreateResourcePoolResponseMsg()

    soapAction[''] = 'soap_CreateResourcePool'
    root[(CreateResourcePoolRequestMsg.typecode.nspname,CreateResourcePoolRequestMsg.typecode.pname)] = 'soap_CreateResourcePool'

    def soap_DestroyChildren(self, ps, **kw):
        request = ps.Parse(DestroyChildrenRequestMsg.typecode)
        return request,DestroyChildrenResponseMsg()

    soapAction[''] = 'soap_DestroyChildren'
    root[(DestroyChildrenRequestMsg.typecode.nspname,DestroyChildrenRequestMsg.typecode.pname)] = 'soap_DestroyChildren'

    def soap_FindByUuid(self, ps, **kw):
        request = ps.Parse(FindByUuidRequestMsg.typecode)
        return request,FindByUuidResponseMsg()

    soapAction[''] = 'soap_FindByUuid'
    root[(FindByUuidRequestMsg.typecode.nspname,FindByUuidRequestMsg.typecode.pname)] = 'soap_FindByUuid'

    def soap_FindByDatastorePath(self, ps, **kw):
        request = ps.Parse(FindByDatastorePathRequestMsg.typecode)
        return request,FindByDatastorePathResponseMsg()

    soapAction[''] = 'soap_FindByDatastorePath'
    root[(FindByDatastorePathRequestMsg.typecode.nspname,FindByDatastorePathRequestMsg.typecode.pname)] = 'soap_FindByDatastorePath'

    def soap_FindByDnsName(self, ps, **kw):
        request = ps.Parse(FindByDnsNameRequestMsg.typecode)
        return request,FindByDnsNameResponseMsg()

    soapAction[''] = 'soap_FindByDnsName'
    root[(FindByDnsNameRequestMsg.typecode.nspname,FindByDnsNameRequestMsg.typecode.pname)] = 'soap_FindByDnsName'

    def soap_FindByIp(self, ps, **kw):
        request = ps.Parse(FindByIpRequestMsg.typecode)
        return request,FindByIpResponseMsg()

    soapAction[''] = 'soap_FindByIp'
    root[(FindByIpRequestMsg.typecode.nspname,FindByIpRequestMsg.typecode.pname)] = 'soap_FindByIp'

    def soap_FindByInventoryPath(self, ps, **kw):
        request = ps.Parse(FindByInventoryPathRequestMsg.typecode)
        return request,FindByInventoryPathResponseMsg()

    soapAction[''] = 'soap_FindByInventoryPath'
    root[(FindByInventoryPathRequestMsg.typecode.nspname,FindByInventoryPathRequestMsg.typecode.pname)] = 'soap_FindByInventoryPath'

    def soap_FindChild(self, ps, **kw):
        request = ps.Parse(FindChildRequestMsg.typecode)
        return request,FindChildResponseMsg()

    soapAction[''] = 'soap_FindChild'
    root[(FindChildRequestMsg.typecode.nspname,FindChildRequestMsg.typecode.pname)] = 'soap_FindChild'

    def soap_CurrentTime(self, ps, **kw):
        request = ps.Parse(CurrentTimeRequestMsg.typecode)
        return request,CurrentTimeResponseMsg()

    soapAction[''] = 'soap_CurrentTime'
    root[(CurrentTimeRequestMsg.typecode.nspname,CurrentTimeRequestMsg.typecode.pname)] = 'soap_CurrentTime'

    def soap_RetrieveServiceContent(self, ps, **kw):
        request = ps.Parse(RetrieveServiceContentRequestMsg.typecode)
        return request,RetrieveServiceContentResponseMsg()

    soapAction[''] = 'soap_RetrieveServiceContent'
    root[(RetrieveServiceContentRequestMsg.typecode.nspname,RetrieveServiceContentRequestMsg.typecode.pname)] = 'soap_RetrieveServiceContent'

    def soap_ValidateMigration(self, ps, **kw):
        request = ps.Parse(ValidateMigrationRequestMsg.typecode)
        return request,ValidateMigrationResponseMsg()

    soapAction[''] = 'soap_ValidateMigration'
    root[(ValidateMigrationRequestMsg.typecode.nspname,ValidateMigrationRequestMsg.typecode.pname)] = 'soap_ValidateMigration'

    def soap_QueryVMotionCompatibility(self, ps, **kw):
        request = ps.Parse(QueryVMotionCompatibilityRequestMsg.typecode)
        return request,QueryVMotionCompatibilityResponseMsg()

    soapAction[''] = 'soap_QueryVMotionCompatibility'
    root[(QueryVMotionCompatibilityRequestMsg.typecode.nspname,QueryVMotionCompatibilityRequestMsg.typecode.pname)] = 'soap_QueryVMotionCompatibility'

    def soap_RetrieveProductComponents(self, ps, **kw):
        request = ps.Parse(RetrieveProductComponentsRequestMsg.typecode)
        return request,RetrieveProductComponentsResponseMsg()

    soapAction[''] = 'soap_RetrieveProductComponents'
    root[(RetrieveProductComponentsRequestMsg.typecode.nspname,RetrieveProductComponentsRequestMsg.typecode.pname)] = 'soap_RetrieveProductComponents'

    def soap_UpdateServiceMessage(self, ps, **kw):
        request = ps.Parse(UpdateServiceMessageRequestMsg.typecode)
        return request,UpdateServiceMessageResponseMsg()

    soapAction[''] = 'soap_UpdateServiceMessage'
    root[(UpdateServiceMessageRequestMsg.typecode.nspname,UpdateServiceMessageRequestMsg.typecode.pname)] = 'soap_UpdateServiceMessage'

    def soap_Login(self, ps, **kw):
        request = ps.Parse(LoginRequestMsg.typecode)
        return request,LoginResponseMsg()

    soapAction[''] = 'soap_Login'
    root[(LoginRequestMsg.typecode.nspname,LoginRequestMsg.typecode.pname)] = 'soap_Login'

    def soap_LoginBySSPI(self, ps, **kw):
        request = ps.Parse(LoginBySSPIRequestMsg.typecode)
        return request,LoginBySSPIResponseMsg()

    soapAction[''] = 'soap_LoginBySSPI'
    root[(LoginBySSPIRequestMsg.typecode.nspname,LoginBySSPIRequestMsg.typecode.pname)] = 'soap_LoginBySSPI'

    def soap_Logout(self, ps, **kw):
        request = ps.Parse(LogoutRequestMsg.typecode)
        return request,LogoutResponseMsg()

    soapAction[''] = 'soap_Logout'
    root[(LogoutRequestMsg.typecode.nspname,LogoutRequestMsg.typecode.pname)] = 'soap_Logout'

    def soap_AcquireLocalTicket(self, ps, **kw):
        request = ps.Parse(AcquireLocalTicketRequestMsg.typecode)
        return request,AcquireLocalTicketResponseMsg()

    soapAction[''] = 'soap_AcquireLocalTicket'
    root[(AcquireLocalTicketRequestMsg.typecode.nspname,AcquireLocalTicketRequestMsg.typecode.pname)] = 'soap_AcquireLocalTicket'

    def soap_TerminateSession(self, ps, **kw):
        request = ps.Parse(TerminateSessionRequestMsg.typecode)
        return request,TerminateSessionResponseMsg()

    soapAction[''] = 'soap_TerminateSession'
    root[(TerminateSessionRequestMsg.typecode.nspname,TerminateSessionRequestMsg.typecode.pname)] = 'soap_TerminateSession'

    def soap_SetLocale(self, ps, **kw):
        request = ps.Parse(SetLocaleRequestMsg.typecode)
        return request,SetLocaleResponseMsg()

    soapAction[''] = 'soap_SetLocale'
    root[(SetLocaleRequestMsg.typecode.nspname,SetLocaleRequestMsg.typecode.pname)] = 'soap_SetLocale'

    def soap_ImpersonateUser(self, ps, **kw):
        request = ps.Parse(ImpersonateUserRequestMsg.typecode)
        return request,ImpersonateUserResponseMsg()

    soapAction[''] = 'soap_ImpersonateUser'
    root[(ImpersonateUserRequestMsg.typecode.nspname,ImpersonateUserRequestMsg.typecode.pname)] = 'soap_ImpersonateUser'

    def soap_SessionIsActive(self, ps, **kw):
        request = ps.Parse(SessionIsActiveRequestMsg.typecode)
        return request,SessionIsActiveResponseMsg()

    soapAction[''] = 'soap_SessionIsActive'
    root[(SessionIsActiveRequestMsg.typecode.nspname,SessionIsActiveRequestMsg.typecode.pname)] = 'soap_SessionIsActive'

    def soap_CancelTask(self, ps, **kw):
        request = ps.Parse(CancelTaskRequestMsg.typecode)
        return request,CancelTaskResponseMsg()

    soapAction[''] = 'soap_CancelTask'
    root[(CancelTaskRequestMsg.typecode.nspname,CancelTaskRequestMsg.typecode.pname)] = 'soap_CancelTask'

    def soap_UpdateProgress(self, ps, **kw):
        request = ps.Parse(UpdateProgressRequestMsg.typecode)
        return request,UpdateProgressResponseMsg()

    soapAction[''] = 'soap_UpdateProgress'
    root[(UpdateProgressRequestMsg.typecode.nspname,UpdateProgressRequestMsg.typecode.pname)] = 'soap_UpdateProgress'

    def soap_SetTaskState(self, ps, **kw):
        request = ps.Parse(SetTaskStateRequestMsg.typecode)
        return request,SetTaskStateResponseMsg()

    soapAction[''] = 'soap_SetTaskState'
    root[(SetTaskStateRequestMsg.typecode.nspname,SetTaskStateRequestMsg.typecode.pname)] = 'soap_SetTaskState'

    def soap_ReadNextTasks(self, ps, **kw):
        request = ps.Parse(ReadNextTasksRequestMsg.typecode)
        return request,ReadNextTasksResponseMsg()

    soapAction[''] = 'soap_ReadNextTasks'
    root[(ReadNextTasksRequestMsg.typecode.nspname,ReadNextTasksRequestMsg.typecode.pname)] = 'soap_ReadNextTasks'

    def soap_ReadPreviousTasks(self, ps, **kw):
        request = ps.Parse(ReadPreviousTasksRequestMsg.typecode)
        return request,ReadPreviousTasksResponseMsg()

    soapAction[''] = 'soap_ReadPreviousTasks'
    root[(ReadPreviousTasksRequestMsg.typecode.nspname,ReadPreviousTasksRequestMsg.typecode.pname)] = 'soap_ReadPreviousTasks'

    def soap_CreateCollectorForTasks(self, ps, **kw):
        request = ps.Parse(CreateCollectorForTasksRequestMsg.typecode)
        return request,CreateCollectorForTasksResponseMsg()

    soapAction[''] = 'soap_CreateCollectorForTasks'
    root[(CreateCollectorForTasksRequestMsg.typecode.nspname,CreateCollectorForTasksRequestMsg.typecode.pname)] = 'soap_CreateCollectorForTasks'

    def soap_CreateTask(self, ps, **kw):
        request = ps.Parse(CreateTaskRequestMsg.typecode)
        return request,CreateTaskResponseMsg()

    soapAction[''] = 'soap_CreateTask'
    root[(CreateTaskRequestMsg.typecode.nspname,CreateTaskRequestMsg.typecode.pname)] = 'soap_CreateTask'

    def soap_RetrieveUserGroups(self, ps, **kw):
        request = ps.Parse(RetrieveUserGroupsRequestMsg.typecode)
        return request,RetrieveUserGroupsResponseMsg()

    soapAction[''] = 'soap_RetrieveUserGroups'
    root[(RetrieveUserGroupsRequestMsg.typecode.nspname,RetrieveUserGroupsRequestMsg.typecode.pname)] = 'soap_RetrieveUserGroups'

    def soap_CreateVirtualDisk(self, ps, **kw):
        request = ps.Parse(CreateVirtualDiskRequestMsg.typecode)
        return request,CreateVirtualDiskResponseMsg()

    soapAction[''] = 'soap_CreateVirtualDisk'
    root[(CreateVirtualDiskRequestMsg.typecode.nspname,CreateVirtualDiskRequestMsg.typecode.pname)] = 'soap_CreateVirtualDisk'

    def soap_CreateVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(CreateVirtualDisk_TaskRequestMsg.typecode)
        return request,CreateVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_CreateVirtualDisk_Task'
    root[(CreateVirtualDisk_TaskRequestMsg.typecode.nspname,CreateVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_CreateVirtualDisk_Task'

    def soap_DeleteVirtualDisk(self, ps, **kw):
        request = ps.Parse(DeleteVirtualDiskRequestMsg.typecode)
        return request,DeleteVirtualDiskResponseMsg()

    soapAction[''] = 'soap_DeleteVirtualDisk'
    root[(DeleteVirtualDiskRequestMsg.typecode.nspname,DeleteVirtualDiskRequestMsg.typecode.pname)] = 'soap_DeleteVirtualDisk'

    def soap_DeleteVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(DeleteVirtualDisk_TaskRequestMsg.typecode)
        return request,DeleteVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_DeleteVirtualDisk_Task'
    root[(DeleteVirtualDisk_TaskRequestMsg.typecode.nspname,DeleteVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_DeleteVirtualDisk_Task'

    def soap_MoveVirtualDisk(self, ps, **kw):
        request = ps.Parse(MoveVirtualDiskRequestMsg.typecode)
        return request,MoveVirtualDiskResponseMsg()

    soapAction[''] = 'soap_MoveVirtualDisk'
    root[(MoveVirtualDiskRequestMsg.typecode.nspname,MoveVirtualDiskRequestMsg.typecode.pname)] = 'soap_MoveVirtualDisk'

    def soap_MoveVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(MoveVirtualDisk_TaskRequestMsg.typecode)
        return request,MoveVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_MoveVirtualDisk_Task'
    root[(MoveVirtualDisk_TaskRequestMsg.typecode.nspname,MoveVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_MoveVirtualDisk_Task'

    def soap_CopyVirtualDisk(self, ps, **kw):
        request = ps.Parse(CopyVirtualDiskRequestMsg.typecode)
        return request,CopyVirtualDiskResponseMsg()

    soapAction[''] = 'soap_CopyVirtualDisk'
    root[(CopyVirtualDiskRequestMsg.typecode.nspname,CopyVirtualDiskRequestMsg.typecode.pname)] = 'soap_CopyVirtualDisk'

    def soap_CopyVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(CopyVirtualDisk_TaskRequestMsg.typecode)
        return request,CopyVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_CopyVirtualDisk_Task'
    root[(CopyVirtualDisk_TaskRequestMsg.typecode.nspname,CopyVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_CopyVirtualDisk_Task'

    def soap_ExtendVirtualDisk(self, ps, **kw):
        request = ps.Parse(ExtendVirtualDiskRequestMsg.typecode)
        return request,ExtendVirtualDiskResponseMsg()

    soapAction[''] = 'soap_ExtendVirtualDisk'
    root[(ExtendVirtualDiskRequestMsg.typecode.nspname,ExtendVirtualDiskRequestMsg.typecode.pname)] = 'soap_ExtendVirtualDisk'

    def soap_ExtendVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(ExtendVirtualDisk_TaskRequestMsg.typecode)
        return request,ExtendVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_ExtendVirtualDisk_Task'
    root[(ExtendVirtualDisk_TaskRequestMsg.typecode.nspname,ExtendVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_ExtendVirtualDisk_Task'

    def soap_QueryVirtualDiskFragmentation(self, ps, **kw):
        request = ps.Parse(QueryVirtualDiskFragmentationRequestMsg.typecode)
        return request,QueryVirtualDiskFragmentationResponseMsg()

    soapAction[''] = 'soap_QueryVirtualDiskFragmentation'
    root[(QueryVirtualDiskFragmentationRequestMsg.typecode.nspname,QueryVirtualDiskFragmentationRequestMsg.typecode.pname)] = 'soap_QueryVirtualDiskFragmentation'

    def soap_DefragmentVirtualDisk(self, ps, **kw):
        request = ps.Parse(DefragmentVirtualDiskRequestMsg.typecode)
        return request,DefragmentVirtualDiskResponseMsg()

    soapAction[''] = 'soap_DefragmentVirtualDisk'
    root[(DefragmentVirtualDiskRequestMsg.typecode.nspname,DefragmentVirtualDiskRequestMsg.typecode.pname)] = 'soap_DefragmentVirtualDisk'

    def soap_DefragmentVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(DefragmentVirtualDisk_TaskRequestMsg.typecode)
        return request,DefragmentVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_DefragmentVirtualDisk_Task'
    root[(DefragmentVirtualDisk_TaskRequestMsg.typecode.nspname,DefragmentVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_DefragmentVirtualDisk_Task'

    def soap_ShrinkVirtualDisk(self, ps, **kw):
        request = ps.Parse(ShrinkVirtualDiskRequestMsg.typecode)
        return request,ShrinkVirtualDiskResponseMsg()

    soapAction[''] = 'soap_ShrinkVirtualDisk'
    root[(ShrinkVirtualDiskRequestMsg.typecode.nspname,ShrinkVirtualDiskRequestMsg.typecode.pname)] = 'soap_ShrinkVirtualDisk'

    def soap_ShrinkVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(ShrinkVirtualDisk_TaskRequestMsg.typecode)
        return request,ShrinkVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_ShrinkVirtualDisk_Task'
    root[(ShrinkVirtualDisk_TaskRequestMsg.typecode.nspname,ShrinkVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_ShrinkVirtualDisk_Task'

    def soap_InflateVirtualDisk(self, ps, **kw):
        request = ps.Parse(InflateVirtualDiskRequestMsg.typecode)
        return request,InflateVirtualDiskResponseMsg()

    soapAction[''] = 'soap_InflateVirtualDisk'
    root[(InflateVirtualDiskRequestMsg.typecode.nspname,InflateVirtualDiskRequestMsg.typecode.pname)] = 'soap_InflateVirtualDisk'

    def soap_InflateVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(InflateVirtualDisk_TaskRequestMsg.typecode)
        return request,InflateVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_InflateVirtualDisk_Task'
    root[(InflateVirtualDisk_TaskRequestMsg.typecode.nspname,InflateVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_InflateVirtualDisk_Task'

    def soap_ZeroFillVirtualDisk(self, ps, **kw):
        request = ps.Parse(ZeroFillVirtualDiskRequestMsg.typecode)
        return request,ZeroFillVirtualDiskResponseMsg()

    soapAction[''] = 'soap_ZeroFillVirtualDisk'
    root[(ZeroFillVirtualDiskRequestMsg.typecode.nspname,ZeroFillVirtualDiskRequestMsg.typecode.pname)] = 'soap_ZeroFillVirtualDisk'

    def soap_ZeroFillVirtualDisk_Task(self, ps, **kw):
        request = ps.Parse(ZeroFillVirtualDisk_TaskRequestMsg.typecode)
        return request,ZeroFillVirtualDisk_TaskResponseMsg()

    soapAction[''] = 'soap_ZeroFillVirtualDisk_Task'
    root[(ZeroFillVirtualDisk_TaskRequestMsg.typecode.nspname,ZeroFillVirtualDisk_TaskRequestMsg.typecode.pname)] = 'soap_ZeroFillVirtualDisk_Task'

    def soap_SetVirtualDiskUuid(self, ps, **kw):
        request = ps.Parse(SetVirtualDiskUuidRequestMsg.typecode)
        return request,SetVirtualDiskUuidResponseMsg()

    soapAction[''] = 'soap_SetVirtualDiskUuid'
    root[(SetVirtualDiskUuidRequestMsg.typecode.nspname,SetVirtualDiskUuidRequestMsg.typecode.pname)] = 'soap_SetVirtualDiskUuid'

    def soap_QueryVirtualDiskUuid(self, ps, **kw):
        request = ps.Parse(QueryVirtualDiskUuidRequestMsg.typecode)
        return request,QueryVirtualDiskUuidResponseMsg()

    soapAction[''] = 'soap_QueryVirtualDiskUuid'
    root[(QueryVirtualDiskUuidRequestMsg.typecode.nspname,QueryVirtualDiskUuidRequestMsg.typecode.pname)] = 'soap_QueryVirtualDiskUuid'

    def soap_QueryVirtualDiskGeometry(self, ps, **kw):
        request = ps.Parse(QueryVirtualDiskGeometryRequestMsg.typecode)
        return request,QueryVirtualDiskGeometryResponseMsg()

    soapAction[''] = 'soap_QueryVirtualDiskGeometry'
    root[(QueryVirtualDiskGeometryRequestMsg.typecode.nspname,QueryVirtualDiskGeometryRequestMsg.typecode.pname)] = 'soap_QueryVirtualDiskGeometry'

    def soap_CreateSnapshot(self, ps, **kw):
        request = ps.Parse(CreateSnapshotRequestMsg.typecode)
        return request,CreateSnapshotResponseMsg()

    soapAction[''] = 'soap_CreateSnapshot'
    root[(CreateSnapshotRequestMsg.typecode.nspname,CreateSnapshotRequestMsg.typecode.pname)] = 'soap_CreateSnapshot'

    def soap_CreateSnapshot_Task(self, ps, **kw):
        request = ps.Parse(CreateSnapshot_TaskRequestMsg.typecode)
        return request,CreateSnapshot_TaskResponseMsg()

    soapAction[''] = 'soap_CreateSnapshot_Task'
    root[(CreateSnapshot_TaskRequestMsg.typecode.nspname,CreateSnapshot_TaskRequestMsg.typecode.pname)] = 'soap_CreateSnapshot_Task'

    def soap_RevertToCurrentSnapshot(self, ps, **kw):
        request = ps.Parse(RevertToCurrentSnapshotRequestMsg.typecode)
        return request,RevertToCurrentSnapshotResponseMsg()

    soapAction[''] = 'soap_RevertToCurrentSnapshot'
    root[(RevertToCurrentSnapshotRequestMsg.typecode.nspname,RevertToCurrentSnapshotRequestMsg.typecode.pname)] = 'soap_RevertToCurrentSnapshot'

    def soap_RevertToCurrentSnapshot_Task(self, ps, **kw):
        request = ps.Parse(RevertToCurrentSnapshot_TaskRequestMsg.typecode)
        return request,RevertToCurrentSnapshot_TaskResponseMsg()

    soapAction[''] = 'soap_RevertToCurrentSnapshot_Task'
    root[(RevertToCurrentSnapshot_TaskRequestMsg.typecode.nspname,RevertToCurrentSnapshot_TaskRequestMsg.typecode.pname)] = 'soap_RevertToCurrentSnapshot_Task'

    def soap_RemoveAllSnapshots(self, ps, **kw):
        request = ps.Parse(RemoveAllSnapshotsRequestMsg.typecode)
        return request,RemoveAllSnapshotsResponseMsg()

    soapAction[''] = 'soap_RemoveAllSnapshots'
    root[(RemoveAllSnapshotsRequestMsg.typecode.nspname,RemoveAllSnapshotsRequestMsg.typecode.pname)] = 'soap_RemoveAllSnapshots'

    def soap_RemoveAllSnapshots_Task(self, ps, **kw):
        request = ps.Parse(RemoveAllSnapshots_TaskRequestMsg.typecode)
        return request,RemoveAllSnapshots_TaskResponseMsg()

    soapAction[''] = 'soap_RemoveAllSnapshots_Task'
    root[(RemoveAllSnapshots_TaskRequestMsg.typecode.nspname,RemoveAllSnapshots_TaskRequestMsg.typecode.pname)] = 'soap_RemoveAllSnapshots_Task'

    def soap_ReconfigVM(self, ps, **kw):
        request = ps.Parse(ReconfigVMRequestMsg.typecode)
        return request,ReconfigVMResponseMsg()

    soapAction[''] = 'soap_ReconfigVM'
    root[(ReconfigVMRequestMsg.typecode.nspname,ReconfigVMRequestMsg.typecode.pname)] = 'soap_ReconfigVM'

    def soap_ReconfigVM_Task(self, ps, **kw):
        request = ps.Parse(ReconfigVM_TaskRequestMsg.typecode)
        return request,ReconfigVM_TaskResponseMsg()

    soapAction[''] = 'soap_ReconfigVM_Task'
    root[(ReconfigVM_TaskRequestMsg.typecode.nspname,ReconfigVM_TaskRequestMsg.typecode.pname)] = 'soap_ReconfigVM_Task'

    def soap_UpgradeVM(self, ps, **kw):
        request = ps.Parse(UpgradeVMRequestMsg.typecode)
        return request,UpgradeVMResponseMsg()

    soapAction[''] = 'soap_UpgradeVM'
    root[(UpgradeVMRequestMsg.typecode.nspname,UpgradeVMRequestMsg.typecode.pname)] = 'soap_UpgradeVM'

    def soap_UpgradeVM_Task(self, ps, **kw):
        request = ps.Parse(UpgradeVM_TaskRequestMsg.typecode)
        return request,UpgradeVM_TaskResponseMsg()

    soapAction[''] = 'soap_UpgradeVM_Task'
    root[(UpgradeVM_TaskRequestMsg.typecode.nspname,UpgradeVM_TaskRequestMsg.typecode.pname)] = 'soap_UpgradeVM_Task'

    def soap_PowerOnVM(self, ps, **kw):
        request = ps.Parse(PowerOnVMRequestMsg.typecode)
        return request,PowerOnVMResponseMsg()

    soapAction[''] = 'soap_PowerOnVM'
    root[(PowerOnVMRequestMsg.typecode.nspname,PowerOnVMRequestMsg.typecode.pname)] = 'soap_PowerOnVM'

    def soap_PowerOnVM_Task(self, ps, **kw):
        request = ps.Parse(PowerOnVM_TaskRequestMsg.typecode)
        return request,PowerOnVM_TaskResponseMsg()

    soapAction[''] = 'soap_PowerOnVM_Task'
    root[(PowerOnVM_TaskRequestMsg.typecode.nspname,PowerOnVM_TaskRequestMsg.typecode.pname)] = 'soap_PowerOnVM_Task'

    def soap_PowerOffVM(self, ps, **kw):
        request = ps.Parse(PowerOffVMRequestMsg.typecode)
        return request,PowerOffVMResponseMsg()

    soapAction[''] = 'soap_PowerOffVM'
    root[(PowerOffVMRequestMsg.typecode.nspname,PowerOffVMRequestMsg.typecode.pname)] = 'soap_PowerOffVM'

    def soap_PowerOffVM_Task(self, ps, **kw):
        request = ps.Parse(PowerOffVM_TaskRequestMsg.typecode)
        return request,PowerOffVM_TaskResponseMsg()

    soapAction[''] = 'soap_PowerOffVM_Task'
    root[(PowerOffVM_TaskRequestMsg.typecode.nspname,PowerOffVM_TaskRequestMsg.typecode.pname)] = 'soap_PowerOffVM_Task'

    def soap_SuspendVM(self, ps, **kw):
        request = ps.Parse(SuspendVMRequestMsg.typecode)
        return request,SuspendVMResponseMsg()

    soapAction[''] = 'soap_SuspendVM'
    root[(SuspendVMRequestMsg.typecode.nspname,SuspendVMRequestMsg.typecode.pname)] = 'soap_SuspendVM'

    def soap_SuspendVM_Task(self, ps, **kw):
        request = ps.Parse(SuspendVM_TaskRequestMsg.typecode)
        return request,SuspendVM_TaskResponseMsg()

    soapAction[''] = 'soap_SuspendVM_Task'
    root[(SuspendVM_TaskRequestMsg.typecode.nspname,SuspendVM_TaskRequestMsg.typecode.pname)] = 'soap_SuspendVM_Task'

    def soap_ResetVM(self, ps, **kw):
        request = ps.Parse(ResetVMRequestMsg.typecode)
        return request,ResetVMResponseMsg()

    soapAction[''] = 'soap_ResetVM'
    root[(ResetVMRequestMsg.typecode.nspname,ResetVMRequestMsg.typecode.pname)] = 'soap_ResetVM'

    def soap_ResetVM_Task(self, ps, **kw):
        request = ps.Parse(ResetVM_TaskRequestMsg.typecode)
        return request,ResetVM_TaskResponseMsg()

    soapAction[''] = 'soap_ResetVM_Task'
    root[(ResetVM_TaskRequestMsg.typecode.nspname,ResetVM_TaskRequestMsg.typecode.pname)] = 'soap_ResetVM_Task'

    def soap_ShutdownGuest(self, ps, **kw):
        request = ps.Parse(ShutdownGuestRequestMsg.typecode)
        return request,ShutdownGuestResponseMsg()

    soapAction[''] = 'soap_ShutdownGuest'
    root[(ShutdownGuestRequestMsg.typecode.nspname,ShutdownGuestRequestMsg.typecode.pname)] = 'soap_ShutdownGuest'

    def soap_RebootGuest(self, ps, **kw):
        request = ps.Parse(RebootGuestRequestMsg.typecode)
        return request,RebootGuestResponseMsg()

    soapAction[''] = 'soap_RebootGuest'
    root[(RebootGuestRequestMsg.typecode.nspname,RebootGuestRequestMsg.typecode.pname)] = 'soap_RebootGuest'

    def soap_StandbyGuest(self, ps, **kw):
        request = ps.Parse(StandbyGuestRequestMsg.typecode)
        return request,StandbyGuestResponseMsg()

    soapAction[''] = 'soap_StandbyGuest'
    root[(StandbyGuestRequestMsg.typecode.nspname,StandbyGuestRequestMsg.typecode.pname)] = 'soap_StandbyGuest'

    def soap_AnswerVM(self, ps, **kw):
        request = ps.Parse(AnswerVMRequestMsg.typecode)
        return request,AnswerVMResponseMsg()

    soapAction[''] = 'soap_AnswerVM'
    root[(AnswerVMRequestMsg.typecode.nspname,AnswerVMRequestMsg.typecode.pname)] = 'soap_AnswerVM'

    def soap_CustomizeVM(self, ps, **kw):
        request = ps.Parse(CustomizeVMRequestMsg.typecode)
        return request,CustomizeVMResponseMsg()

    soapAction[''] = 'soap_CustomizeVM'
    root[(CustomizeVMRequestMsg.typecode.nspname,CustomizeVMRequestMsg.typecode.pname)] = 'soap_CustomizeVM'

    def soap_CustomizeVM_Task(self, ps, **kw):
        request = ps.Parse(CustomizeVM_TaskRequestMsg.typecode)
        return request,CustomizeVM_TaskResponseMsg()

    soapAction[''] = 'soap_CustomizeVM_Task'
    root[(CustomizeVM_TaskRequestMsg.typecode.nspname,CustomizeVM_TaskRequestMsg.typecode.pname)] = 'soap_CustomizeVM_Task'

    def soap_CheckCustomizationSpec(self, ps, **kw):
        request = ps.Parse(CheckCustomizationSpecRequestMsg.typecode)
        return request,CheckCustomizationSpecResponseMsg()

    soapAction[''] = 'soap_CheckCustomizationSpec'
    root[(CheckCustomizationSpecRequestMsg.typecode.nspname,CheckCustomizationSpecRequestMsg.typecode.pname)] = 'soap_CheckCustomizationSpec'

    def soap_MigrateVM(self, ps, **kw):
        request = ps.Parse(MigrateVMRequestMsg.typecode)
        return request,MigrateVMResponseMsg()

    soapAction[''] = 'soap_MigrateVM'
    root[(MigrateVMRequestMsg.typecode.nspname,MigrateVMRequestMsg.typecode.pname)] = 'soap_MigrateVM'

    def soap_MigrateVM_Task(self, ps, **kw):
        request = ps.Parse(MigrateVM_TaskRequestMsg.typecode)
        return request,MigrateVM_TaskResponseMsg()

    soapAction[''] = 'soap_MigrateVM_Task'
    root[(MigrateVM_TaskRequestMsg.typecode.nspname,MigrateVM_TaskRequestMsg.typecode.pname)] = 'soap_MigrateVM_Task'

    def soap_RelocateVM(self, ps, **kw):
        request = ps.Parse(RelocateVMRequestMsg.typecode)
        return request,RelocateVMResponseMsg()

    soapAction[''] = 'soap_RelocateVM'
    root[(RelocateVMRequestMsg.typecode.nspname,RelocateVMRequestMsg.typecode.pname)] = 'soap_RelocateVM'

    def soap_RelocateVM_Task(self, ps, **kw):
        request = ps.Parse(RelocateVM_TaskRequestMsg.typecode)
        return request,RelocateVM_TaskResponseMsg()

    soapAction[''] = 'soap_RelocateVM_Task'
    root[(RelocateVM_TaskRequestMsg.typecode.nspname,RelocateVM_TaskRequestMsg.typecode.pname)] = 'soap_RelocateVM_Task'

    def soap_CloneVM(self, ps, **kw):
        request = ps.Parse(CloneVMRequestMsg.typecode)
        return request,CloneVMResponseMsg()

    soapAction[''] = 'soap_CloneVM'
    root[(CloneVMRequestMsg.typecode.nspname,CloneVMRequestMsg.typecode.pname)] = 'soap_CloneVM'

    def soap_CloneVM_Task(self, ps, **kw):
        request = ps.Parse(CloneVM_TaskRequestMsg.typecode)
        return request,CloneVM_TaskResponseMsg()

    soapAction[''] = 'soap_CloneVM_Task'
    root[(CloneVM_TaskRequestMsg.typecode.nspname,CloneVM_TaskRequestMsg.typecode.pname)] = 'soap_CloneVM_Task'

    def soap_MarkAsTemplate(self, ps, **kw):
        request = ps.Parse(MarkAsTemplateRequestMsg.typecode)
        return request,MarkAsTemplateResponseMsg()

    soapAction[''] = 'soap_MarkAsTemplate'
    root[(MarkAsTemplateRequestMsg.typecode.nspname,MarkAsTemplateRequestMsg.typecode.pname)] = 'soap_MarkAsTemplate'

    def soap_MarkAsVirtualMachine(self, ps, **kw):
        request = ps.Parse(MarkAsVirtualMachineRequestMsg.typecode)
        return request,MarkAsVirtualMachineResponseMsg()

    soapAction[''] = 'soap_MarkAsVirtualMachine'
    root[(MarkAsVirtualMachineRequestMsg.typecode.nspname,MarkAsVirtualMachineRequestMsg.typecode.pname)] = 'soap_MarkAsVirtualMachine'

    def soap_UnregisterVM(self, ps, **kw):
        request = ps.Parse(UnregisterVMRequestMsg.typecode)
        return request,UnregisterVMResponseMsg()

    soapAction[''] = 'soap_UnregisterVM'
    root[(UnregisterVMRequestMsg.typecode.nspname,UnregisterVMRequestMsg.typecode.pname)] = 'soap_UnregisterVM'

    def soap_ResetGuestInformation(self, ps, **kw):
        request = ps.Parse(ResetGuestInformationRequestMsg.typecode)
        return request,ResetGuestInformationResponseMsg()

    soapAction[''] = 'soap_ResetGuestInformation'
    root[(ResetGuestInformationRequestMsg.typecode.nspname,ResetGuestInformationRequestMsg.typecode.pname)] = 'soap_ResetGuestInformation'

    def soap_MountToolsInstaller(self, ps, **kw):
        request = ps.Parse(MountToolsInstallerRequestMsg.typecode)
        return request,MountToolsInstallerResponseMsg()

    soapAction[''] = 'soap_MountToolsInstaller'
    root[(MountToolsInstallerRequestMsg.typecode.nspname,MountToolsInstallerRequestMsg.typecode.pname)] = 'soap_MountToolsInstaller'

    def soap_UnmountToolsInstaller(self, ps, **kw):
        request = ps.Parse(UnmountToolsInstallerRequestMsg.typecode)
        return request,UnmountToolsInstallerResponseMsg()

    soapAction[''] = 'soap_UnmountToolsInstaller'
    root[(UnmountToolsInstallerRequestMsg.typecode.nspname,UnmountToolsInstallerRequestMsg.typecode.pname)] = 'soap_UnmountToolsInstaller'

    def soap_UpgradeTools(self, ps, **kw):
        request = ps.Parse(UpgradeToolsRequestMsg.typecode)
        return request,UpgradeToolsResponseMsg()

    soapAction[''] = 'soap_UpgradeTools'
    root[(UpgradeToolsRequestMsg.typecode.nspname,UpgradeToolsRequestMsg.typecode.pname)] = 'soap_UpgradeTools'

    def soap_UpgradeTools_Task(self, ps, **kw):
        request = ps.Parse(UpgradeTools_TaskRequestMsg.typecode)
        return request,UpgradeTools_TaskResponseMsg()

    soapAction[''] = 'soap_UpgradeTools_Task'
    root[(UpgradeTools_TaskRequestMsg.typecode.nspname,UpgradeTools_TaskRequestMsg.typecode.pname)] = 'soap_UpgradeTools_Task'

    def soap_AcquireMksTicket(self, ps, **kw):
        request = ps.Parse(AcquireMksTicketRequestMsg.typecode)
        return request,AcquireMksTicketResponseMsg()

    soapAction[''] = 'soap_AcquireMksTicket'
    root[(AcquireMksTicketRequestMsg.typecode.nspname,AcquireMksTicketRequestMsg.typecode.pname)] = 'soap_AcquireMksTicket'

    def soap_SetScreenResolution(self, ps, **kw):
        request = ps.Parse(SetScreenResolutionRequestMsg.typecode)
        return request,SetScreenResolutionResponseMsg()

    soapAction[''] = 'soap_SetScreenResolution'
    root[(SetScreenResolutionRequestMsg.typecode.nspname,SetScreenResolutionRequestMsg.typecode.pname)] = 'soap_SetScreenResolution'

    def soap_DefragmentAllDisks(self, ps, **kw):
        request = ps.Parse(DefragmentAllDisksRequestMsg.typecode)
        return request,DefragmentAllDisksResponseMsg()

    soapAction[''] = 'soap_DefragmentAllDisks'
    root[(DefragmentAllDisksRequestMsg.typecode.nspname,DefragmentAllDisksRequestMsg.typecode.pname)] = 'soap_DefragmentAllDisks'

    def soap_RemoveAlarm(self, ps, **kw):
        request = ps.Parse(RemoveAlarmRequestMsg.typecode)
        return request,RemoveAlarmResponseMsg()

    soapAction[''] = 'soap_RemoveAlarm'
    root[(RemoveAlarmRequestMsg.typecode.nspname,RemoveAlarmRequestMsg.typecode.pname)] = 'soap_RemoveAlarm'

    def soap_ReconfigureAlarm(self, ps, **kw):
        request = ps.Parse(ReconfigureAlarmRequestMsg.typecode)
        return request,ReconfigureAlarmResponseMsg()

    soapAction[''] = 'soap_ReconfigureAlarm'
    root[(ReconfigureAlarmRequestMsg.typecode.nspname,ReconfigureAlarmRequestMsg.typecode.pname)] = 'soap_ReconfigureAlarm'

    def soap_CreateAlarm(self, ps, **kw):
        request = ps.Parse(CreateAlarmRequestMsg.typecode)
        return request,CreateAlarmResponseMsg()

    soapAction[''] = 'soap_CreateAlarm'
    root[(CreateAlarmRequestMsg.typecode.nspname,CreateAlarmRequestMsg.typecode.pname)] = 'soap_CreateAlarm'

    def soap_GetAlarm(self, ps, **kw):
        request = ps.Parse(GetAlarmRequestMsg.typecode)
        return request,GetAlarmResponseMsg()

    soapAction[''] = 'soap_GetAlarm'
    root[(GetAlarmRequestMsg.typecode.nspname,GetAlarmRequestMsg.typecode.pname)] = 'soap_GetAlarm'

    def soap_GetAlarmState(self, ps, **kw):
        request = ps.Parse(GetAlarmStateRequestMsg.typecode)
        return request,GetAlarmStateResponseMsg()

    soapAction[''] = 'soap_GetAlarmState'
    root[(GetAlarmStateRequestMsg.typecode.nspname,GetAlarmStateRequestMsg.typecode.pname)] = 'soap_GetAlarmState'

    def soap_ReadNextEvents(self, ps, **kw):
        request = ps.Parse(ReadNextEventsRequestMsg.typecode)
        return request,ReadNextEventsResponseMsg()

    soapAction[''] = 'soap_ReadNextEvents'
    root[(ReadNextEventsRequestMsg.typecode.nspname,ReadNextEventsRequestMsg.typecode.pname)] = 'soap_ReadNextEvents'

    def soap_ReadPreviousEvents(self, ps, **kw):
        request = ps.Parse(ReadPreviousEventsRequestMsg.typecode)
        return request,ReadPreviousEventsResponseMsg()

    soapAction[''] = 'soap_ReadPreviousEvents'
    root[(ReadPreviousEventsRequestMsg.typecode.nspname,ReadPreviousEventsRequestMsg.typecode.pname)] = 'soap_ReadPreviousEvents'

    def soap_CreateCollectorForEvents(self, ps, **kw):
        request = ps.Parse(CreateCollectorForEventsRequestMsg.typecode)
        return request,CreateCollectorForEventsResponseMsg()

    soapAction[''] = 'soap_CreateCollectorForEvents'
    root[(CreateCollectorForEventsRequestMsg.typecode.nspname,CreateCollectorForEventsRequestMsg.typecode.pname)] = 'soap_CreateCollectorForEvents'

    def soap_LogUserEvent(self, ps, **kw):
        request = ps.Parse(LogUserEventRequestMsg.typecode)
        return request,LogUserEventResponseMsg()

    soapAction[''] = 'soap_LogUserEvent'
    root[(LogUserEventRequestMsg.typecode.nspname,LogUserEventRequestMsg.typecode.pname)] = 'soap_LogUserEvent'

    def soap_QueryEvents(self, ps, **kw):
        request = ps.Parse(QueryEventsRequestMsg.typecode)
        return request,QueryEventsResponseMsg()

    soapAction[''] = 'soap_QueryEvents'
    root[(QueryEventsRequestMsg.typecode.nspname,QueryEventsRequestMsg.typecode.pname)] = 'soap_QueryEvents'

    def soap_PostEvent(self, ps, **kw):
        request = ps.Parse(PostEventRequestMsg.typecode)
        return request,PostEventResponseMsg()

    soapAction[''] = 'soap_PostEvent'
    root[(PostEventRequestMsg.typecode.nspname,PostEventRequestMsg.typecode.pname)] = 'soap_PostEvent'

    def soap_ReconfigureAutostart(self, ps, **kw):
        request = ps.Parse(ReconfigureAutostartRequestMsg.typecode)
        return request,ReconfigureAutostartResponseMsg()

    soapAction[''] = 'soap_ReconfigureAutostart'
    root[(ReconfigureAutostartRequestMsg.typecode.nspname,ReconfigureAutostartRequestMsg.typecode.pname)] = 'soap_ReconfigureAutostart'

    def soap_AutoStartPowerOn(self, ps, **kw):
        request = ps.Parse(AutoStartPowerOnRequestMsg.typecode)
        return request,AutoStartPowerOnResponseMsg()

    soapAction[''] = 'soap_AutoStartPowerOn'
    root[(AutoStartPowerOnRequestMsg.typecode.nspname,AutoStartPowerOnRequestMsg.typecode.pname)] = 'soap_AutoStartPowerOn'

    def soap_AutoStartPowerOff(self, ps, **kw):
        request = ps.Parse(AutoStartPowerOffRequestMsg.typecode)
        return request,AutoStartPowerOffResponseMsg()

    soapAction[''] = 'soap_AutoStartPowerOff'
    root[(AutoStartPowerOffRequestMsg.typecode.nspname,AutoStartPowerOffRequestMsg.typecode.pname)] = 'soap_AutoStartPowerOff'

    def soap_QueryBootDevices(self, ps, **kw):
        request = ps.Parse(QueryBootDevicesRequestMsg.typecode)
        return request,QueryBootDevicesResponseMsg()

    soapAction[''] = 'soap_QueryBootDevices'
    root[(QueryBootDevicesRequestMsg.typecode.nspname,QueryBootDevicesRequestMsg.typecode.pname)] = 'soap_QueryBootDevices'

    def soap_UpdateBootDevice(self, ps, **kw):
        request = ps.Parse(UpdateBootDeviceRequestMsg.typecode)
        return request,UpdateBootDeviceResponseMsg()

    soapAction[''] = 'soap_UpdateBootDevice'
    root[(UpdateBootDeviceRequestMsg.typecode.nspname,UpdateBootDeviceRequestMsg.typecode.pname)] = 'soap_UpdateBootDevice'

    def soap_EnableHyperThreading(self, ps, **kw):
        request = ps.Parse(EnableHyperThreadingRequestMsg.typecode)
        return request,EnableHyperThreadingResponseMsg()

    soapAction[''] = 'soap_EnableHyperThreading'
    root[(EnableHyperThreadingRequestMsg.typecode.nspname,EnableHyperThreadingRequestMsg.typecode.pname)] = 'soap_EnableHyperThreading'

    def soap_DisableHyperThreading(self, ps, **kw):
        request = ps.Parse(DisableHyperThreadingRequestMsg.typecode)
        return request,DisableHyperThreadingResponseMsg()

    soapAction[''] = 'soap_DisableHyperThreading'
    root[(DisableHyperThreadingRequestMsg.typecode.nspname,DisableHyperThreadingRequestMsg.typecode.pname)] = 'soap_DisableHyperThreading'

    def soap_SearchDatastore(self, ps, **kw):
        request = ps.Parse(SearchDatastoreRequestMsg.typecode)
        return request,SearchDatastoreResponseMsg()

    soapAction[''] = 'soap_SearchDatastore'
    root[(SearchDatastoreRequestMsg.typecode.nspname,SearchDatastoreRequestMsg.typecode.pname)] = 'soap_SearchDatastore'

    def soap_SearchDatastore_Task(self, ps, **kw):
        request = ps.Parse(SearchDatastore_TaskRequestMsg.typecode)
        return request,SearchDatastore_TaskResponseMsg()

    soapAction[''] = 'soap_SearchDatastore_Task'
    root[(SearchDatastore_TaskRequestMsg.typecode.nspname,SearchDatastore_TaskRequestMsg.typecode.pname)] = 'soap_SearchDatastore_Task'

    def soap_SearchDatastoreSubFolders(self, ps, **kw):
        request = ps.Parse(SearchDatastoreSubFoldersRequestMsg.typecode)
        return request,SearchDatastoreSubFoldersResponseMsg()

    soapAction[''] = 'soap_SearchDatastoreSubFolders'
    root[(SearchDatastoreSubFoldersRequestMsg.typecode.nspname,SearchDatastoreSubFoldersRequestMsg.typecode.pname)] = 'soap_SearchDatastoreSubFolders'

    def soap_SearchDatastoreSubFolders_Task(self, ps, **kw):
        request = ps.Parse(SearchDatastoreSubFolders_TaskRequestMsg.typecode)
        return request,SearchDatastoreSubFolders_TaskResponseMsg()

    soapAction[''] = 'soap_SearchDatastoreSubFolders_Task'
    root[(SearchDatastoreSubFolders_TaskRequestMsg.typecode.nspname,SearchDatastoreSubFolders_TaskRequestMsg.typecode.pname)] = 'soap_SearchDatastoreSubFolders_Task'

    def soap_DeleteFile(self, ps, **kw):
        request = ps.Parse(DeleteFileRequestMsg.typecode)
        return request,DeleteFileResponseMsg()

    soapAction[''] = 'soap_DeleteFile'
    root[(DeleteFileRequestMsg.typecode.nspname,DeleteFileRequestMsg.typecode.pname)] = 'soap_DeleteFile'

    def soap_UpdateLocalSwapDatastore(self, ps, **kw):
        request = ps.Parse(UpdateLocalSwapDatastoreRequestMsg.typecode)
        return request,UpdateLocalSwapDatastoreResponseMsg()

    soapAction[''] = 'soap_UpdateLocalSwapDatastore'
    root[(UpdateLocalSwapDatastoreRequestMsg.typecode.nspname,UpdateLocalSwapDatastoreRequestMsg.typecode.pname)] = 'soap_UpdateLocalSwapDatastore'

    def soap_QueryAvailableDisksForVmfs(self, ps, **kw):
        request = ps.Parse(QueryAvailableDisksForVmfsRequestMsg.typecode)
        return request,QueryAvailableDisksForVmfsResponseMsg()

    soapAction[''] = 'soap_QueryAvailableDisksForVmfs'
    root[(QueryAvailableDisksForVmfsRequestMsg.typecode.nspname,QueryAvailableDisksForVmfsRequestMsg.typecode.pname)] = 'soap_QueryAvailableDisksForVmfs'

    def soap_QueryVmfsDatastoreCreateOptions(self, ps, **kw):
        request = ps.Parse(QueryVmfsDatastoreCreateOptionsRequestMsg.typecode)
        return request,QueryVmfsDatastoreCreateOptionsResponseMsg()

    soapAction[''] = 'soap_QueryVmfsDatastoreCreateOptions'
    root[(QueryVmfsDatastoreCreateOptionsRequestMsg.typecode.nspname,QueryVmfsDatastoreCreateOptionsRequestMsg.typecode.pname)] = 'soap_QueryVmfsDatastoreCreateOptions'

    def soap_CreateVmfsDatastore(self, ps, **kw):
        request = ps.Parse(CreateVmfsDatastoreRequestMsg.typecode)
        return request,CreateVmfsDatastoreResponseMsg()

    soapAction[''] = 'soap_CreateVmfsDatastore'
    root[(CreateVmfsDatastoreRequestMsg.typecode.nspname,CreateVmfsDatastoreRequestMsg.typecode.pname)] = 'soap_CreateVmfsDatastore'

    def soap_QueryVmfsDatastoreExtendOptions(self, ps, **kw):
        request = ps.Parse(QueryVmfsDatastoreExtendOptionsRequestMsg.typecode)
        return request,QueryVmfsDatastoreExtendOptionsResponseMsg()

    soapAction[''] = 'soap_QueryVmfsDatastoreExtendOptions'
    root[(QueryVmfsDatastoreExtendOptionsRequestMsg.typecode.nspname,QueryVmfsDatastoreExtendOptionsRequestMsg.typecode.pname)] = 'soap_QueryVmfsDatastoreExtendOptions'

    def soap_ExtendVmfsDatastore(self, ps, **kw):
        request = ps.Parse(ExtendVmfsDatastoreRequestMsg.typecode)
        return request,ExtendVmfsDatastoreResponseMsg()

    soapAction[''] = 'soap_ExtendVmfsDatastore'
    root[(ExtendVmfsDatastoreRequestMsg.typecode.nspname,ExtendVmfsDatastoreRequestMsg.typecode.pname)] = 'soap_ExtendVmfsDatastore'

    def soap_CreateNasDatastore(self, ps, **kw):
        request = ps.Parse(CreateNasDatastoreRequestMsg.typecode)
        return request,CreateNasDatastoreResponseMsg()

    soapAction[''] = 'soap_CreateNasDatastore'
    root[(CreateNasDatastoreRequestMsg.typecode.nspname,CreateNasDatastoreRequestMsg.typecode.pname)] = 'soap_CreateNasDatastore'

    def soap_CreateLocalDatastore(self, ps, **kw):
        request = ps.Parse(CreateLocalDatastoreRequestMsg.typecode)
        return request,CreateLocalDatastoreResponseMsg()

    soapAction[''] = 'soap_CreateLocalDatastore'
    root[(CreateLocalDatastoreRequestMsg.typecode.nspname,CreateLocalDatastoreRequestMsg.typecode.pname)] = 'soap_CreateLocalDatastore'

    def soap_RemoveDatastore(self, ps, **kw):
        request = ps.Parse(RemoveDatastoreRequestMsg.typecode)
        return request,RemoveDatastoreResponseMsg()

    soapAction[''] = 'soap_RemoveDatastore'
    root[(RemoveDatastoreRequestMsg.typecode.nspname,RemoveDatastoreRequestMsg.typecode.pname)] = 'soap_RemoveDatastore'

    def soap_ConfigureDatastorePrincipal(self, ps, **kw):
        request = ps.Parse(ConfigureDatastorePrincipalRequestMsg.typecode)
        return request,ConfigureDatastorePrincipalResponseMsg()

    soapAction[''] = 'soap_ConfigureDatastorePrincipal'
    root[(ConfigureDatastorePrincipalRequestMsg.typecode.nspname,ConfigureDatastorePrincipalRequestMsg.typecode.pname)] = 'soap_ConfigureDatastorePrincipal'

    def soap_UpdateDateTimeConfig(self, ps, **kw):
        request = ps.Parse(UpdateDateTimeConfigRequestMsg.typecode)
        return request,UpdateDateTimeConfigResponseMsg()

    soapAction[''] = 'soap_UpdateDateTimeConfig'
    root[(UpdateDateTimeConfigRequestMsg.typecode.nspname,UpdateDateTimeConfigRequestMsg.typecode.pname)] = 'soap_UpdateDateTimeConfig'

    def soap_QueryAvailableTimeZones(self, ps, **kw):
        request = ps.Parse(QueryAvailableTimeZonesRequestMsg.typecode)
        return request,QueryAvailableTimeZonesResponseMsg()

    soapAction[''] = 'soap_QueryAvailableTimeZones'
    root[(QueryAvailableTimeZonesRequestMsg.typecode.nspname,QueryAvailableTimeZonesRequestMsg.typecode.pname)] = 'soap_QueryAvailableTimeZones'

    def soap_QueryDateTime(self, ps, **kw):
        request = ps.Parse(QueryDateTimeRequestMsg.typecode)
        return request,QueryDateTimeResponseMsg()

    soapAction[''] = 'soap_QueryDateTime'
    root[(QueryDateTimeRequestMsg.typecode.nspname,QueryDateTimeRequestMsg.typecode.pname)] = 'soap_QueryDateTime'

    def soap_UpdateDateTime(self, ps, **kw):
        request = ps.Parse(UpdateDateTimeRequestMsg.typecode)
        return request,UpdateDateTimeResponseMsg()

    soapAction[''] = 'soap_UpdateDateTime'
    root[(UpdateDateTimeRequestMsg.typecode.nspname,UpdateDateTimeRequestMsg.typecode.pname)] = 'soap_UpdateDateTime'

    def soap_RefreshDateTimeSystem(self, ps, **kw):
        request = ps.Parse(RefreshDateTimeSystemRequestMsg.typecode)
        return request,RefreshDateTimeSystemResponseMsg()

    soapAction[''] = 'soap_RefreshDateTimeSystem'
    root[(RefreshDateTimeSystemRequestMsg.typecode.nspname,RefreshDateTimeSystemRequestMsg.typecode.pname)] = 'soap_RefreshDateTimeSystem'

    def soap_QueryAvailablePartition(self, ps, **kw):
        request = ps.Parse(QueryAvailablePartitionRequestMsg.typecode)
        return request,QueryAvailablePartitionResponseMsg()

    soapAction[''] = 'soap_QueryAvailablePartition'
    root[(QueryAvailablePartitionRequestMsg.typecode.nspname,QueryAvailablePartitionRequestMsg.typecode.pname)] = 'soap_QueryAvailablePartition'

    def soap_SelectActivePartition(self, ps, **kw):
        request = ps.Parse(SelectActivePartitionRequestMsg.typecode)
        return request,SelectActivePartitionResponseMsg()

    soapAction[''] = 'soap_SelectActivePartition'
    root[(SelectActivePartitionRequestMsg.typecode.nspname,SelectActivePartitionRequestMsg.typecode.pname)] = 'soap_SelectActivePartition'

    def soap_QueryPartitionCreateOptions(self, ps, **kw):
        request = ps.Parse(QueryPartitionCreateOptionsRequestMsg.typecode)
        return request,QueryPartitionCreateOptionsResponseMsg()

    soapAction[''] = 'soap_QueryPartitionCreateOptions'
    root[(QueryPartitionCreateOptionsRequestMsg.typecode.nspname,QueryPartitionCreateOptionsRequestMsg.typecode.pname)] = 'soap_QueryPartitionCreateOptions'

    def soap_QueryPartitionCreateDesc(self, ps, **kw):
        request = ps.Parse(QueryPartitionCreateDescRequestMsg.typecode)
        return request,QueryPartitionCreateDescResponseMsg()

    soapAction[''] = 'soap_QueryPartitionCreateDesc'
    root[(QueryPartitionCreateDescRequestMsg.typecode.nspname,QueryPartitionCreateDescRequestMsg.typecode.pname)] = 'soap_QueryPartitionCreateDesc'

    def soap_CreateDiagnosticPartition(self, ps, **kw):
        request = ps.Parse(CreateDiagnosticPartitionRequestMsg.typecode)
        return request,CreateDiagnosticPartitionResponseMsg()

    soapAction[''] = 'soap_CreateDiagnosticPartition'
    root[(CreateDiagnosticPartitionRequestMsg.typecode.nspname,CreateDiagnosticPartitionRequestMsg.typecode.pname)] = 'soap_CreateDiagnosticPartition'

    def soap_UpdateDefaultPolicy(self, ps, **kw):
        request = ps.Parse(UpdateDefaultPolicyRequestMsg.typecode)
        return request,UpdateDefaultPolicyResponseMsg()

    soapAction[''] = 'soap_UpdateDefaultPolicy'
    root[(UpdateDefaultPolicyRequestMsg.typecode.nspname,UpdateDefaultPolicyRequestMsg.typecode.pname)] = 'soap_UpdateDefaultPolicy'

    def soap_EnableRuleset(self, ps, **kw):
        request = ps.Parse(EnableRulesetRequestMsg.typecode)
        return request,EnableRulesetResponseMsg()

    soapAction[''] = 'soap_EnableRuleset'
    root[(EnableRulesetRequestMsg.typecode.nspname,EnableRulesetRequestMsg.typecode.pname)] = 'soap_EnableRuleset'

    def soap_DisableRuleset(self, ps, **kw):
        request = ps.Parse(DisableRulesetRequestMsg.typecode)
        return request,DisableRulesetResponseMsg()

    soapAction[''] = 'soap_DisableRuleset'
    root[(DisableRulesetRequestMsg.typecode.nspname,DisableRulesetRequestMsg.typecode.pname)] = 'soap_DisableRuleset'

    def soap_RefreshFirewall(self, ps, **kw):
        request = ps.Parse(RefreshFirewallRequestMsg.typecode)
        return request,RefreshFirewallResponseMsg()

    soapAction[''] = 'soap_RefreshFirewall'
    root[(RefreshFirewallRequestMsg.typecode.nspname,RefreshFirewallRequestMsg.typecode.pname)] = 'soap_RefreshFirewall'

    def soap_ResetFirmwareToFactoryDefaults(self, ps, **kw):
        request = ps.Parse(ResetFirmwareToFactoryDefaultsRequestMsg.typecode)
        return request,ResetFirmwareToFactoryDefaultsResponseMsg()

    soapAction[''] = 'soap_ResetFirmwareToFactoryDefaults'
    root[(ResetFirmwareToFactoryDefaultsRequestMsg.typecode.nspname,ResetFirmwareToFactoryDefaultsRequestMsg.typecode.pname)] = 'soap_ResetFirmwareToFactoryDefaults'

    def soap_BackupFirmwareConfiguration(self, ps, **kw):
        request = ps.Parse(BackupFirmwareConfigurationRequestMsg.typecode)
        return request,BackupFirmwareConfigurationResponseMsg()

    soapAction[''] = 'soap_BackupFirmwareConfiguration'
    root[(BackupFirmwareConfigurationRequestMsg.typecode.nspname,BackupFirmwareConfigurationRequestMsg.typecode.pname)] = 'soap_BackupFirmwareConfiguration'

    def soap_QueryFirmwareConfigUploadURL(self, ps, **kw):
        request = ps.Parse(QueryFirmwareConfigUploadURLRequestMsg.typecode)
        return request,QueryFirmwareConfigUploadURLResponseMsg()

    soapAction[''] = 'soap_QueryFirmwareConfigUploadURL'
    root[(QueryFirmwareConfigUploadURLRequestMsg.typecode.nspname,QueryFirmwareConfigUploadURLRequestMsg.typecode.pname)] = 'soap_QueryFirmwareConfigUploadURL'

    def soap_RestoreFirmwareConfiguration(self, ps, **kw):
        request = ps.Parse(RestoreFirmwareConfigurationRequestMsg.typecode)
        return request,RestoreFirmwareConfigurationResponseMsg()

    soapAction[''] = 'soap_RestoreFirmwareConfiguration'
    root[(RestoreFirmwareConfigurationRequestMsg.typecode.nspname,RestoreFirmwareConfigurationRequestMsg.typecode.pname)] = 'soap_RestoreFirmwareConfiguration'

    def soap_RefreshHealthStatusSystem(self, ps, **kw):
        request = ps.Parse(RefreshHealthStatusSystemRequestMsg.typecode)
        return request,RefreshHealthStatusSystemResponseMsg()

    soapAction[''] = 'soap_RefreshHealthStatusSystem'
    root[(RefreshHealthStatusSystemRequestMsg.typecode.nspname,RefreshHealthStatusSystemRequestMsg.typecode.pname)] = 'soap_RefreshHealthStatusSystem'

    def soap_ResetSystemHealthInfo(self, ps, **kw):
        request = ps.Parse(ResetSystemHealthInfoRequestMsg.typecode)
        return request,ResetSystemHealthInfoResponseMsg()

    soapAction[''] = 'soap_ResetSystemHealthInfo'
    root[(ResetSystemHealthInfoRequestMsg.typecode.nspname,ResetSystemHealthInfoRequestMsg.typecode.pname)] = 'soap_ResetSystemHealthInfo'

    def soap_CreateUser(self, ps, **kw):
        request = ps.Parse(CreateUserRequestMsg.typecode)
        return request,CreateUserResponseMsg()

    soapAction[''] = 'soap_CreateUser'
    root[(CreateUserRequestMsg.typecode.nspname,CreateUserRequestMsg.typecode.pname)] = 'soap_CreateUser'

    def soap_UpdateUser(self, ps, **kw):
        request = ps.Parse(UpdateUserRequestMsg.typecode)
        return request,UpdateUserResponseMsg()

    soapAction[''] = 'soap_UpdateUser'
    root[(UpdateUserRequestMsg.typecode.nspname,UpdateUserRequestMsg.typecode.pname)] = 'soap_UpdateUser'

    def soap_CreateGroup(self, ps, **kw):
        request = ps.Parse(CreateGroupRequestMsg.typecode)
        return request,CreateGroupResponseMsg()

    soapAction[''] = 'soap_CreateGroup'
    root[(CreateGroupRequestMsg.typecode.nspname,CreateGroupRequestMsg.typecode.pname)] = 'soap_CreateGroup'

    def soap_RemoveUser(self, ps, **kw):
        request = ps.Parse(RemoveUserRequestMsg.typecode)
        return request,RemoveUserResponseMsg()

    soapAction[''] = 'soap_RemoveUser'
    root[(RemoveUserRequestMsg.typecode.nspname,RemoveUserRequestMsg.typecode.pname)] = 'soap_RemoveUser'

    def soap_RemoveGroup(self, ps, **kw):
        request = ps.Parse(RemoveGroupRequestMsg.typecode)
        return request,RemoveGroupResponseMsg()

    soapAction[''] = 'soap_RemoveGroup'
    root[(RemoveGroupRequestMsg.typecode.nspname,RemoveGroupRequestMsg.typecode.pname)] = 'soap_RemoveGroup'

    def soap_AssignUserToGroup(self, ps, **kw):
        request = ps.Parse(AssignUserToGroupRequestMsg.typecode)
        return request,AssignUserToGroupResponseMsg()

    soapAction[''] = 'soap_AssignUserToGroup'
    root[(AssignUserToGroupRequestMsg.typecode.nspname,AssignUserToGroupRequestMsg.typecode.pname)] = 'soap_AssignUserToGroup'

    def soap_UnassignUserFromGroup(self, ps, **kw):
        request = ps.Parse(UnassignUserFromGroupRequestMsg.typecode)
        return request,UnassignUserFromGroupResponseMsg()

    soapAction[''] = 'soap_UnassignUserFromGroup'
    root[(UnassignUserFromGroupRequestMsg.typecode.nspname,UnassignUserFromGroupRequestMsg.typecode.pname)] = 'soap_UnassignUserFromGroup'

    def soap_ReconfigureServiceConsoleReservation(self, ps, **kw):
        request = ps.Parse(ReconfigureServiceConsoleReservationRequestMsg.typecode)
        return request,ReconfigureServiceConsoleReservationResponseMsg()

    soapAction[''] = 'soap_ReconfigureServiceConsoleReservation'
    root[(ReconfigureServiceConsoleReservationRequestMsg.typecode.nspname,ReconfigureServiceConsoleReservationRequestMsg.typecode.pname)] = 'soap_ReconfigureServiceConsoleReservation'

    def soap_ReconfigureVirtualMachineReservation(self, ps, **kw):
        request = ps.Parse(ReconfigureVirtualMachineReservationRequestMsg.typecode)
        return request,ReconfigureVirtualMachineReservationResponseMsg()

    soapAction[''] = 'soap_ReconfigureVirtualMachineReservation'
    root[(ReconfigureVirtualMachineReservationRequestMsg.typecode.nspname,ReconfigureVirtualMachineReservationRequestMsg.typecode.pname)] = 'soap_ReconfigureVirtualMachineReservation'

    def soap_UpdateNetworkConfig(self, ps, **kw):
        request = ps.Parse(UpdateNetworkConfigRequestMsg.typecode)
        return request,UpdateNetworkConfigResponseMsg()

    soapAction[''] = 'soap_UpdateNetworkConfig'
    root[(UpdateNetworkConfigRequestMsg.typecode.nspname,UpdateNetworkConfigRequestMsg.typecode.pname)] = 'soap_UpdateNetworkConfig'

    def soap_UpdateDnsConfig(self, ps, **kw):
        request = ps.Parse(UpdateDnsConfigRequestMsg.typecode)
        return request,UpdateDnsConfigResponseMsg()

    soapAction[''] = 'soap_UpdateDnsConfig'
    root[(UpdateDnsConfigRequestMsg.typecode.nspname,UpdateDnsConfigRequestMsg.typecode.pname)] = 'soap_UpdateDnsConfig'

    def soap_UpdateIpRouteConfig(self, ps, **kw):
        request = ps.Parse(UpdateIpRouteConfigRequestMsg.typecode)
        return request,UpdateIpRouteConfigResponseMsg()

    soapAction[''] = 'soap_UpdateIpRouteConfig'
    root[(UpdateIpRouteConfigRequestMsg.typecode.nspname,UpdateIpRouteConfigRequestMsg.typecode.pname)] = 'soap_UpdateIpRouteConfig'

    def soap_UpdateConsoleIpRouteConfig(self, ps, **kw):
        request = ps.Parse(UpdateConsoleIpRouteConfigRequestMsg.typecode)
        return request,UpdateConsoleIpRouteConfigResponseMsg()

    soapAction[''] = 'soap_UpdateConsoleIpRouteConfig'
    root[(UpdateConsoleIpRouteConfigRequestMsg.typecode.nspname,UpdateConsoleIpRouteConfigRequestMsg.typecode.pname)] = 'soap_UpdateConsoleIpRouteConfig'

    def soap_AddVirtualSwitch(self, ps, **kw):
        request = ps.Parse(AddVirtualSwitchRequestMsg.typecode)
        return request,AddVirtualSwitchResponseMsg()

    soapAction[''] = 'soap_AddVirtualSwitch'
    root[(AddVirtualSwitchRequestMsg.typecode.nspname,AddVirtualSwitchRequestMsg.typecode.pname)] = 'soap_AddVirtualSwitch'

    def soap_RemoveVirtualSwitch(self, ps, **kw):
        request = ps.Parse(RemoveVirtualSwitchRequestMsg.typecode)
        return request,RemoveVirtualSwitchResponseMsg()

    soapAction[''] = 'soap_RemoveVirtualSwitch'
    root[(RemoveVirtualSwitchRequestMsg.typecode.nspname,RemoveVirtualSwitchRequestMsg.typecode.pname)] = 'soap_RemoveVirtualSwitch'

    def soap_UpdateVirtualSwitch(self, ps, **kw):
        request = ps.Parse(UpdateVirtualSwitchRequestMsg.typecode)
        return request,UpdateVirtualSwitchResponseMsg()

    soapAction[''] = 'soap_UpdateVirtualSwitch'
    root[(UpdateVirtualSwitchRequestMsg.typecode.nspname,UpdateVirtualSwitchRequestMsg.typecode.pname)] = 'soap_UpdateVirtualSwitch'

    def soap_AddPortGroup(self, ps, **kw):
        request = ps.Parse(AddPortGroupRequestMsg.typecode)
        return request,AddPortGroupResponseMsg()

    soapAction[''] = 'soap_AddPortGroup'
    root[(AddPortGroupRequestMsg.typecode.nspname,AddPortGroupRequestMsg.typecode.pname)] = 'soap_AddPortGroup'

    def soap_RemovePortGroup(self, ps, **kw):
        request = ps.Parse(RemovePortGroupRequestMsg.typecode)
        return request,RemovePortGroupResponseMsg()

    soapAction[''] = 'soap_RemovePortGroup'
    root[(RemovePortGroupRequestMsg.typecode.nspname,RemovePortGroupRequestMsg.typecode.pname)] = 'soap_RemovePortGroup'

    def soap_UpdatePortGroup(self, ps, **kw):
        request = ps.Parse(UpdatePortGroupRequestMsg.typecode)
        return request,UpdatePortGroupResponseMsg()

    soapAction[''] = 'soap_UpdatePortGroup'
    root[(UpdatePortGroupRequestMsg.typecode.nspname,UpdatePortGroupRequestMsg.typecode.pname)] = 'soap_UpdatePortGroup'

    def soap_UpdatePhysicalNicLinkSpeed(self, ps, **kw):
        request = ps.Parse(UpdatePhysicalNicLinkSpeedRequestMsg.typecode)
        return request,UpdatePhysicalNicLinkSpeedResponseMsg()

    soapAction[''] = 'soap_UpdatePhysicalNicLinkSpeed'
    root[(UpdatePhysicalNicLinkSpeedRequestMsg.typecode.nspname,UpdatePhysicalNicLinkSpeedRequestMsg.typecode.pname)] = 'soap_UpdatePhysicalNicLinkSpeed'

    def soap_QueryNetworkHint(self, ps, **kw):
        request = ps.Parse(QueryNetworkHintRequestMsg.typecode)
        return request,QueryNetworkHintResponseMsg()

    soapAction[''] = 'soap_QueryNetworkHint'
    root[(QueryNetworkHintRequestMsg.typecode.nspname,QueryNetworkHintRequestMsg.typecode.pname)] = 'soap_QueryNetworkHint'

    def soap_AddVirtualNic(self, ps, **kw):
        request = ps.Parse(AddVirtualNicRequestMsg.typecode)
        return request,AddVirtualNicResponseMsg()

    soapAction[''] = 'soap_AddVirtualNic'
    root[(AddVirtualNicRequestMsg.typecode.nspname,AddVirtualNicRequestMsg.typecode.pname)] = 'soap_AddVirtualNic'

    def soap_RemoveVirtualNic(self, ps, **kw):
        request = ps.Parse(RemoveVirtualNicRequestMsg.typecode)
        return request,RemoveVirtualNicResponseMsg()

    soapAction[''] = 'soap_RemoveVirtualNic'
    root[(RemoveVirtualNicRequestMsg.typecode.nspname,RemoveVirtualNicRequestMsg.typecode.pname)] = 'soap_RemoveVirtualNic'

    def soap_UpdateVirtualNic(self, ps, **kw):
        request = ps.Parse(UpdateVirtualNicRequestMsg.typecode)
        return request,UpdateVirtualNicResponseMsg()

    soapAction[''] = 'soap_UpdateVirtualNic'
    root[(UpdateVirtualNicRequestMsg.typecode.nspname,UpdateVirtualNicRequestMsg.typecode.pname)] = 'soap_UpdateVirtualNic'

    def soap_AddServiceConsoleVirtualNic(self, ps, **kw):
        request = ps.Parse(AddServiceConsoleVirtualNicRequestMsg.typecode)
        return request,AddServiceConsoleVirtualNicResponseMsg()

    soapAction[''] = 'soap_AddServiceConsoleVirtualNic'
    root[(AddServiceConsoleVirtualNicRequestMsg.typecode.nspname,AddServiceConsoleVirtualNicRequestMsg.typecode.pname)] = 'soap_AddServiceConsoleVirtualNic'

    def soap_RemoveServiceConsoleVirtualNic(self, ps, **kw):
        request = ps.Parse(RemoveServiceConsoleVirtualNicRequestMsg.typecode)
        return request,RemoveServiceConsoleVirtualNicResponseMsg()

    soapAction[''] = 'soap_RemoveServiceConsoleVirtualNic'
    root[(RemoveServiceConsoleVirtualNicRequestMsg.typecode.nspname,RemoveServiceConsoleVirtualNicRequestMsg.typecode.pname)] = 'soap_RemoveServiceConsoleVirtualNic'

    def soap_UpdateServiceConsoleVirtualNic(self, ps, **kw):
        request = ps.Parse(UpdateServiceConsoleVirtualNicRequestMsg.typecode)
        return request,UpdateServiceConsoleVirtualNicResponseMsg()

    soapAction[''] = 'soap_UpdateServiceConsoleVirtualNic'
    root[(UpdateServiceConsoleVirtualNicRequestMsg.typecode.nspname,UpdateServiceConsoleVirtualNicRequestMsg.typecode.pname)] = 'soap_UpdateServiceConsoleVirtualNic'

    def soap_RestartServiceConsoleVirtualNic(self, ps, **kw):
        request = ps.Parse(RestartServiceConsoleVirtualNicRequestMsg.typecode)
        return request,RestartServiceConsoleVirtualNicResponseMsg()

    soapAction[''] = 'soap_RestartServiceConsoleVirtualNic'
    root[(RestartServiceConsoleVirtualNicRequestMsg.typecode.nspname,RestartServiceConsoleVirtualNicRequestMsg.typecode.pname)] = 'soap_RestartServiceConsoleVirtualNic'

    def soap_RefreshNetworkSystem(self, ps, **kw):
        request = ps.Parse(RefreshNetworkSystemRequestMsg.typecode)
        return request,RefreshNetworkSystemResponseMsg()

    soapAction[''] = 'soap_RefreshNetworkSystem'
    root[(RefreshNetworkSystemRequestMsg.typecode.nspname,RefreshNetworkSystemRequestMsg.typecode.pname)] = 'soap_RefreshNetworkSystem'

    def soap_ScanHostPatch(self, ps, **kw):
        request = ps.Parse(ScanHostPatchRequestMsg.typecode)
        return request,ScanHostPatchResponseMsg()

    soapAction[''] = 'soap_ScanHostPatch'
    root[(ScanHostPatchRequestMsg.typecode.nspname,ScanHostPatchRequestMsg.typecode.pname)] = 'soap_ScanHostPatch'

    def soap_ScanHostPatch_Task(self, ps, **kw):
        request = ps.Parse(ScanHostPatch_TaskRequestMsg.typecode)
        return request,ScanHostPatch_TaskResponseMsg()

    soapAction[''] = 'soap_ScanHostPatch_Task'
    root[(ScanHostPatch_TaskRequestMsg.typecode.nspname,ScanHostPatch_TaskRequestMsg.typecode.pname)] = 'soap_ScanHostPatch_Task'

    def soap_InstallHostPatch(self, ps, **kw):
        request = ps.Parse(InstallHostPatchRequestMsg.typecode)
        return request,InstallHostPatchResponseMsg()

    soapAction[''] = 'soap_InstallHostPatch'
    root[(InstallHostPatchRequestMsg.typecode.nspname,InstallHostPatchRequestMsg.typecode.pname)] = 'soap_InstallHostPatch'

    def soap_InstallHostPatch_Task(self, ps, **kw):
        request = ps.Parse(InstallHostPatch_TaskRequestMsg.typecode)
        return request,InstallHostPatch_TaskResponseMsg()

    soapAction[''] = 'soap_InstallHostPatch_Task'
    root[(InstallHostPatch_TaskRequestMsg.typecode.nspname,InstallHostPatch_TaskRequestMsg.typecode.pname)] = 'soap_InstallHostPatch_Task'

    def soap_UpdateServicePolicy(self, ps, **kw):
        request = ps.Parse(UpdateServicePolicyRequestMsg.typecode)
        return request,UpdateServicePolicyResponseMsg()

    soapAction[''] = 'soap_UpdateServicePolicy'
    root[(UpdateServicePolicyRequestMsg.typecode.nspname,UpdateServicePolicyRequestMsg.typecode.pname)] = 'soap_UpdateServicePolicy'

    def soap_StartService(self, ps, **kw):
        request = ps.Parse(StartServiceRequestMsg.typecode)
        return request,StartServiceResponseMsg()

    soapAction[''] = 'soap_StartService'
    root[(StartServiceRequestMsg.typecode.nspname,StartServiceRequestMsg.typecode.pname)] = 'soap_StartService'

    def soap_StopService(self, ps, **kw):
        request = ps.Parse(StopServiceRequestMsg.typecode)
        return request,StopServiceResponseMsg()

    soapAction[''] = 'soap_StopService'
    root[(StopServiceRequestMsg.typecode.nspname,StopServiceRequestMsg.typecode.pname)] = 'soap_StopService'

    def soap_RestartService(self, ps, **kw):
        request = ps.Parse(RestartServiceRequestMsg.typecode)
        return request,RestartServiceResponseMsg()

    soapAction[''] = 'soap_RestartService'
    root[(RestartServiceRequestMsg.typecode.nspname,RestartServiceRequestMsg.typecode.pname)] = 'soap_RestartService'

    def soap_UninstallService(self, ps, **kw):
        request = ps.Parse(UninstallServiceRequestMsg.typecode)
        return request,UninstallServiceResponseMsg()

    soapAction[''] = 'soap_UninstallService'
    root[(UninstallServiceRequestMsg.typecode.nspname,UninstallServiceRequestMsg.typecode.pname)] = 'soap_UninstallService'

    def soap_RefreshServices(self, ps, **kw):
        request = ps.Parse(RefreshServicesRequestMsg.typecode)
        return request,RefreshServicesResponseMsg()

    soapAction[''] = 'soap_RefreshServices'
    root[(RefreshServicesRequestMsg.typecode.nspname,RefreshServicesRequestMsg.typecode.pname)] = 'soap_RefreshServices'

    def soap_ReconfigureSnmpAgent(self, ps, **kw):
        request = ps.Parse(ReconfigureSnmpAgentRequestMsg.typecode)
        return request,ReconfigureSnmpAgentResponseMsg()

    soapAction[''] = 'soap_ReconfigureSnmpAgent'
    root[(ReconfigureSnmpAgentRequestMsg.typecode.nspname,ReconfigureSnmpAgentRequestMsg.typecode.pname)] = 'soap_ReconfigureSnmpAgent'

    def soap_SendTestNotification(self, ps, **kw):
        request = ps.Parse(SendTestNotificationRequestMsg.typecode)
        return request,SendTestNotificationResponseMsg()

    soapAction[''] = 'soap_SendTestNotification'
    root[(SendTestNotificationRequestMsg.typecode.nspname,SendTestNotificationRequestMsg.typecode.pname)] = 'soap_SendTestNotification'

    def soap_RetrieveDiskPartitionInfo(self, ps, **kw):
        request = ps.Parse(RetrieveDiskPartitionInfoRequestMsg.typecode)
        return request,RetrieveDiskPartitionInfoResponseMsg()

    soapAction[''] = 'soap_RetrieveDiskPartitionInfo'
    root[(RetrieveDiskPartitionInfoRequestMsg.typecode.nspname,RetrieveDiskPartitionInfoRequestMsg.typecode.pname)] = 'soap_RetrieveDiskPartitionInfo'

    def soap_ComputeDiskPartitionInfo(self, ps, **kw):
        request = ps.Parse(ComputeDiskPartitionInfoRequestMsg.typecode)
        return request,ComputeDiskPartitionInfoResponseMsg()

    soapAction[''] = 'soap_ComputeDiskPartitionInfo'
    root[(ComputeDiskPartitionInfoRequestMsg.typecode.nspname,ComputeDiskPartitionInfoRequestMsg.typecode.pname)] = 'soap_ComputeDiskPartitionInfo'

    def soap_UpdateDiskPartitions(self, ps, **kw):
        request = ps.Parse(UpdateDiskPartitionsRequestMsg.typecode)
        return request,UpdateDiskPartitionsResponseMsg()

    soapAction[''] = 'soap_UpdateDiskPartitions'
    root[(UpdateDiskPartitionsRequestMsg.typecode.nspname,UpdateDiskPartitionsRequestMsg.typecode.pname)] = 'soap_UpdateDiskPartitions'

    def soap_FormatVmfs(self, ps, **kw):
        request = ps.Parse(FormatVmfsRequestMsg.typecode)
        return request,FormatVmfsResponseMsg()

    soapAction[''] = 'soap_FormatVmfs'
    root[(FormatVmfsRequestMsg.typecode.nspname,FormatVmfsRequestMsg.typecode.pname)] = 'soap_FormatVmfs'

    def soap_RescanVmfs(self, ps, **kw):
        request = ps.Parse(RescanVmfsRequestMsg.typecode)
        return request,RescanVmfsResponseMsg()

    soapAction[''] = 'soap_RescanVmfs'
    root[(RescanVmfsRequestMsg.typecode.nspname,RescanVmfsRequestMsg.typecode.pname)] = 'soap_RescanVmfs'

    def soap_AttachVmfsExtent(self, ps, **kw):
        request = ps.Parse(AttachVmfsExtentRequestMsg.typecode)
        return request,AttachVmfsExtentResponseMsg()

    soapAction[''] = 'soap_AttachVmfsExtent'
    root[(AttachVmfsExtentRequestMsg.typecode.nspname,AttachVmfsExtentRequestMsg.typecode.pname)] = 'soap_AttachVmfsExtent'

    def soap_UpgradeVmfs(self, ps, **kw):
        request = ps.Parse(UpgradeVmfsRequestMsg.typecode)
        return request,UpgradeVmfsResponseMsg()

    soapAction[''] = 'soap_UpgradeVmfs'
    root[(UpgradeVmfsRequestMsg.typecode.nspname,UpgradeVmfsRequestMsg.typecode.pname)] = 'soap_UpgradeVmfs'

    def soap_UpgradeVmLayout(self, ps, **kw):
        request = ps.Parse(UpgradeVmLayoutRequestMsg.typecode)
        return request,UpgradeVmLayoutResponseMsg()

    soapAction[''] = 'soap_UpgradeVmLayout'
    root[(UpgradeVmLayoutRequestMsg.typecode.nspname,UpgradeVmLayoutRequestMsg.typecode.pname)] = 'soap_UpgradeVmLayout'

    def soap_RescanHba(self, ps, **kw):
        request = ps.Parse(RescanHbaRequestMsg.typecode)
        return request,RescanHbaResponseMsg()

    soapAction[''] = 'soap_RescanHba'
    root[(RescanHbaRequestMsg.typecode.nspname,RescanHbaRequestMsg.typecode.pname)] = 'soap_RescanHba'

    def soap_RescanAllHba(self, ps, **kw):
        request = ps.Parse(RescanAllHbaRequestMsg.typecode)
        return request,RescanAllHbaResponseMsg()

    soapAction[''] = 'soap_RescanAllHba'
    root[(RescanAllHbaRequestMsg.typecode.nspname,RescanAllHbaRequestMsg.typecode.pname)] = 'soap_RescanAllHba'

    def soap_UpdateSoftwareInternetScsiEnabled(self, ps, **kw):
        request = ps.Parse(UpdateSoftwareInternetScsiEnabledRequestMsg.typecode)
        return request,UpdateSoftwareInternetScsiEnabledResponseMsg()

    soapAction[''] = 'soap_UpdateSoftwareInternetScsiEnabled'
    root[(UpdateSoftwareInternetScsiEnabledRequestMsg.typecode.nspname,UpdateSoftwareInternetScsiEnabledRequestMsg.typecode.pname)] = 'soap_UpdateSoftwareInternetScsiEnabled'

    def soap_UpdateInternetScsiDiscoveryProperties(self, ps, **kw):
        request = ps.Parse(UpdateInternetScsiDiscoveryPropertiesRequestMsg.typecode)
        return request,UpdateInternetScsiDiscoveryPropertiesResponseMsg()

    soapAction[''] = 'soap_UpdateInternetScsiDiscoveryProperties'
    root[(UpdateInternetScsiDiscoveryPropertiesRequestMsg.typecode.nspname,UpdateInternetScsiDiscoveryPropertiesRequestMsg.typecode.pname)] = 'soap_UpdateInternetScsiDiscoveryProperties'

    def soap_UpdateInternetScsiAuthenticationProperties(self, ps, **kw):
        request = ps.Parse(UpdateInternetScsiAuthenticationPropertiesRequestMsg.typecode)
        return request,UpdateInternetScsiAuthenticationPropertiesResponseMsg()

    soapAction[''] = 'soap_UpdateInternetScsiAuthenticationProperties'
    root[(UpdateInternetScsiAuthenticationPropertiesRequestMsg.typecode.nspname,UpdateInternetScsiAuthenticationPropertiesRequestMsg.typecode.pname)] = 'soap_UpdateInternetScsiAuthenticationProperties'

    def soap_UpdateInternetScsiIPProperties(self, ps, **kw):
        request = ps.Parse(UpdateInternetScsiIPPropertiesRequestMsg.typecode)
        return request,UpdateInternetScsiIPPropertiesResponseMsg()

    soapAction[''] = 'soap_UpdateInternetScsiIPProperties'
    root[(UpdateInternetScsiIPPropertiesRequestMsg.typecode.nspname,UpdateInternetScsiIPPropertiesRequestMsg.typecode.pname)] = 'soap_UpdateInternetScsiIPProperties'

    def soap_UpdateInternetScsiName(self, ps, **kw):
        request = ps.Parse(UpdateInternetScsiNameRequestMsg.typecode)
        return request,UpdateInternetScsiNameResponseMsg()

    soapAction[''] = 'soap_UpdateInternetScsiName'
    root[(UpdateInternetScsiNameRequestMsg.typecode.nspname,UpdateInternetScsiNameRequestMsg.typecode.pname)] = 'soap_UpdateInternetScsiName'

    def soap_UpdateInternetScsiAlias(self, ps, **kw):
        request = ps.Parse(UpdateInternetScsiAliasRequestMsg.typecode)
        return request,UpdateInternetScsiAliasResponseMsg()

    soapAction[''] = 'soap_UpdateInternetScsiAlias'
    root[(UpdateInternetScsiAliasRequestMsg.typecode.nspname,UpdateInternetScsiAliasRequestMsg.typecode.pname)] = 'soap_UpdateInternetScsiAlias'

    def soap_AddInternetScsiSendTargets(self, ps, **kw):
        request = ps.Parse(AddInternetScsiSendTargetsRequestMsg.typecode)
        return request,AddInternetScsiSendTargetsResponseMsg()

    soapAction[''] = 'soap_AddInternetScsiSendTargets'
    root[(AddInternetScsiSendTargetsRequestMsg.typecode.nspname,AddInternetScsiSendTargetsRequestMsg.typecode.pname)] = 'soap_AddInternetScsiSendTargets'

    def soap_RemoveInternetScsiSendTargets(self, ps, **kw):
        request = ps.Parse(RemoveInternetScsiSendTargetsRequestMsg.typecode)
        return request,RemoveInternetScsiSendTargetsResponseMsg()

    soapAction[''] = 'soap_RemoveInternetScsiSendTargets'
    root[(RemoveInternetScsiSendTargetsRequestMsg.typecode.nspname,RemoveInternetScsiSendTargetsRequestMsg.typecode.pname)] = 'soap_RemoveInternetScsiSendTargets'

    def soap_AddInternetScsiStaticTargets(self, ps, **kw):
        request = ps.Parse(AddInternetScsiStaticTargetsRequestMsg.typecode)
        return request,AddInternetScsiStaticTargetsResponseMsg()

    soapAction[''] = 'soap_AddInternetScsiStaticTargets'
    root[(AddInternetScsiStaticTargetsRequestMsg.typecode.nspname,AddInternetScsiStaticTargetsRequestMsg.typecode.pname)] = 'soap_AddInternetScsiStaticTargets'

    def soap_RemoveInternetScsiStaticTargets(self, ps, **kw):
        request = ps.Parse(RemoveInternetScsiStaticTargetsRequestMsg.typecode)
        return request,RemoveInternetScsiStaticTargetsResponseMsg()

    soapAction[''] = 'soap_RemoveInternetScsiStaticTargets'
    root[(RemoveInternetScsiStaticTargetsRequestMsg.typecode.nspname,RemoveInternetScsiStaticTargetsRequestMsg.typecode.pname)] = 'soap_RemoveInternetScsiStaticTargets'

    def soap_EnableMultipathPath(self, ps, **kw):
        request = ps.Parse(EnableMultipathPathRequestMsg.typecode)
        return request,EnableMultipathPathResponseMsg()

    soapAction[''] = 'soap_EnableMultipathPath'
    root[(EnableMultipathPathRequestMsg.typecode.nspname,EnableMultipathPathRequestMsg.typecode.pname)] = 'soap_EnableMultipathPath'

    def soap_DisableMultipathPath(self, ps, **kw):
        request = ps.Parse(DisableMultipathPathRequestMsg.typecode)
        return request,DisableMultipathPathResponseMsg()

    soapAction[''] = 'soap_DisableMultipathPath'
    root[(DisableMultipathPathRequestMsg.typecode.nspname,DisableMultipathPathRequestMsg.typecode.pname)] = 'soap_DisableMultipathPath'

    def soap_SetMultipathLunPolicy(self, ps, **kw):
        request = ps.Parse(SetMultipathLunPolicyRequestMsg.typecode)
        return request,SetMultipathLunPolicyResponseMsg()

    soapAction[''] = 'soap_SetMultipathLunPolicy'
    root[(SetMultipathLunPolicyRequestMsg.typecode.nspname,SetMultipathLunPolicyRequestMsg.typecode.pname)] = 'soap_SetMultipathLunPolicy'

    def soap_RefreshStorageSystem(self, ps, **kw):
        request = ps.Parse(RefreshStorageSystemRequestMsg.typecode)
        return request,RefreshStorageSystemResponseMsg()

    soapAction[''] = 'soap_RefreshStorageSystem'
    root[(RefreshStorageSystemRequestMsg.typecode.nspname,RefreshStorageSystemRequestMsg.typecode.pname)] = 'soap_RefreshStorageSystem'

    def soap_UpdateIpConfig(self, ps, **kw):
        request = ps.Parse(UpdateIpConfigRequestMsg.typecode)
        return request,UpdateIpConfigResponseMsg()

    soapAction[''] = 'soap_UpdateIpConfig'
    root[(UpdateIpConfigRequestMsg.typecode.nspname,UpdateIpConfigRequestMsg.typecode.pname)] = 'soap_UpdateIpConfig'

    def soap_SelectVnic(self, ps, **kw):
        request = ps.Parse(SelectVnicRequestMsg.typecode)
        return request,SelectVnicResponseMsg()

    soapAction[''] = 'soap_SelectVnic'
    root[(SelectVnicRequestMsg.typecode.nspname,SelectVnicRequestMsg.typecode.pname)] = 'soap_SelectVnic'

    def soap_DeselectVnic(self, ps, **kw):
        request = ps.Parse(DeselectVnicRequestMsg.typecode)
        return request,DeselectVnicResponseMsg()

    soapAction[''] = 'soap_DeselectVnic'
    root[(DeselectVnicRequestMsg.typecode.nspname,DeselectVnicRequestMsg.typecode.pname)] = 'soap_DeselectVnic'

    def soap_QueryOptions(self, ps, **kw):
        request = ps.Parse(QueryOptionsRequestMsg.typecode)
        return request,QueryOptionsResponseMsg()

    soapAction[''] = 'soap_QueryOptions'
    root[(QueryOptionsRequestMsg.typecode.nspname,QueryOptionsRequestMsg.typecode.pname)] = 'soap_QueryOptions'

    def soap_UpdateOptions(self, ps, **kw):
        request = ps.Parse(UpdateOptionsRequestMsg.typecode)
        return request,UpdateOptionsResponseMsg()

    soapAction[''] = 'soap_UpdateOptions'
    root[(UpdateOptionsRequestMsg.typecode.nspname,UpdateOptionsRequestMsg.typecode.pname)] = 'soap_UpdateOptions'

    def soap_RemoveScheduledTask(self, ps, **kw):
        request = ps.Parse(RemoveScheduledTaskRequestMsg.typecode)
        return request,RemoveScheduledTaskResponseMsg()

    soapAction[''] = 'soap_RemoveScheduledTask'
    root[(RemoveScheduledTaskRequestMsg.typecode.nspname,RemoveScheduledTaskRequestMsg.typecode.pname)] = 'soap_RemoveScheduledTask'

    def soap_ReconfigureScheduledTask(self, ps, **kw):
        request = ps.Parse(ReconfigureScheduledTaskRequestMsg.typecode)
        return request,ReconfigureScheduledTaskResponseMsg()

    soapAction[''] = 'soap_ReconfigureScheduledTask'
    root[(ReconfigureScheduledTaskRequestMsg.typecode.nspname,ReconfigureScheduledTaskRequestMsg.typecode.pname)] = 'soap_ReconfigureScheduledTask'

    def soap_RunScheduledTask(self, ps, **kw):
        request = ps.Parse(RunScheduledTaskRequestMsg.typecode)
        return request,RunScheduledTaskResponseMsg()

    soapAction[''] = 'soap_RunScheduledTask'
    root[(RunScheduledTaskRequestMsg.typecode.nspname,RunScheduledTaskRequestMsg.typecode.pname)] = 'soap_RunScheduledTask'

    def soap_CreateScheduledTask(self, ps, **kw):
        request = ps.Parse(CreateScheduledTaskRequestMsg.typecode)
        return request,CreateScheduledTaskResponseMsg()

    soapAction[''] = 'soap_CreateScheduledTask'
    root[(CreateScheduledTaskRequestMsg.typecode.nspname,CreateScheduledTaskRequestMsg.typecode.pname)] = 'soap_CreateScheduledTask'

    def soap_RetrieveEntityScheduledTask(self, ps, **kw):
        request = ps.Parse(RetrieveEntityScheduledTaskRequestMsg.typecode)
        return request,RetrieveEntityScheduledTaskResponseMsg()

    soapAction[''] = 'soap_RetrieveEntityScheduledTask'
    root[(RetrieveEntityScheduledTaskRequestMsg.typecode.nspname,RetrieveEntityScheduledTaskRequestMsg.typecode.pname)] = 'soap_RetrieveEntityScheduledTask'

    def soap_OpenInventoryViewFolder(self, ps, **kw):
        request = ps.Parse(OpenInventoryViewFolderRequestMsg.typecode)
        return request,OpenInventoryViewFolderResponseMsg()

    soapAction[''] = 'soap_OpenInventoryViewFolder'
    root[(OpenInventoryViewFolderRequestMsg.typecode.nspname,OpenInventoryViewFolderRequestMsg.typecode.pname)] = 'soap_OpenInventoryViewFolder'

    def soap_CloseInventoryViewFolder(self, ps, **kw):
        request = ps.Parse(CloseInventoryViewFolderRequestMsg.typecode)
        return request,CloseInventoryViewFolderResponseMsg()

    soapAction[''] = 'soap_CloseInventoryViewFolder'
    root[(CloseInventoryViewFolderRequestMsg.typecode.nspname,CloseInventoryViewFolderRequestMsg.typecode.pname)] = 'soap_CloseInventoryViewFolder'

    def soap_ModifyListView(self, ps, **kw):
        request = ps.Parse(ModifyListViewRequestMsg.typecode)
        return request,ModifyListViewResponseMsg()

    soapAction[''] = 'soap_ModifyListView'
    root[(ModifyListViewRequestMsg.typecode.nspname,ModifyListViewRequestMsg.typecode.pname)] = 'soap_ModifyListView'

    def soap_ResetListView(self, ps, **kw):
        request = ps.Parse(ResetListViewRequestMsg.typecode)
        return request,ResetListViewResponseMsg()

    soapAction[''] = 'soap_ResetListView'
    root[(ResetListViewRequestMsg.typecode.nspname,ResetListViewRequestMsg.typecode.pname)] = 'soap_ResetListView'

    def soap_ResetListViewFromView(self, ps, **kw):
        request = ps.Parse(ResetListViewFromViewRequestMsg.typecode)
        return request,ResetListViewFromViewResponseMsg()

    soapAction[''] = 'soap_ResetListViewFromView'
    root[(ResetListViewFromViewRequestMsg.typecode.nspname,ResetListViewFromViewRequestMsg.typecode.pname)] = 'soap_ResetListViewFromView'

    def soap_DestroyView(self, ps, **kw):
        request = ps.Parse(DestroyViewRequestMsg.typecode)
        return request,DestroyViewResponseMsg()

    soapAction[''] = 'soap_DestroyView'
    root[(DestroyViewRequestMsg.typecode.nspname,DestroyViewRequestMsg.typecode.pname)] = 'soap_DestroyView'

    def soap_CreateInventoryView(self, ps, **kw):
        request = ps.Parse(CreateInventoryViewRequestMsg.typecode)
        return request,CreateInventoryViewResponseMsg()

    soapAction[''] = 'soap_CreateInventoryView'
    root[(CreateInventoryViewRequestMsg.typecode.nspname,CreateInventoryViewRequestMsg.typecode.pname)] = 'soap_CreateInventoryView'

    def soap_CreateContainerView(self, ps, **kw):
        request = ps.Parse(CreateContainerViewRequestMsg.typecode)
        return request,CreateContainerViewResponseMsg()

    soapAction[''] = 'soap_CreateContainerView'
    root[(CreateContainerViewRequestMsg.typecode.nspname,CreateContainerViewRequestMsg.typecode.pname)] = 'soap_CreateContainerView'

    def soap_CreateListView(self, ps, **kw):
        request = ps.Parse(CreateListViewRequestMsg.typecode)
        return request,CreateListViewResponseMsg()

    soapAction[''] = 'soap_CreateListView'
    root[(CreateListViewRequestMsg.typecode.nspname,CreateListViewRequestMsg.typecode.pname)] = 'soap_CreateListView'

    def soap_CreateListViewFromView(self, ps, **kw):
        request = ps.Parse(CreateListViewFromViewRequestMsg.typecode)
        return request,CreateListViewFromViewResponseMsg()

    soapAction[''] = 'soap_CreateListViewFromView'
    root[(CreateListViewFromViewRequestMsg.typecode.nspname,CreateListViewFromViewRequestMsg.typecode.pname)] = 'soap_CreateListViewFromView'

    def soap_RevertToSnapshot(self, ps, **kw):
        request = ps.Parse(RevertToSnapshotRequestMsg.typecode)
        return request,RevertToSnapshotResponseMsg()

    soapAction[''] = 'soap_RevertToSnapshot'
    root[(RevertToSnapshotRequestMsg.typecode.nspname,RevertToSnapshotRequestMsg.typecode.pname)] = 'soap_RevertToSnapshot'

    def soap_RevertToSnapshot_Task(self, ps, **kw):
        request = ps.Parse(RevertToSnapshot_TaskRequestMsg.typecode)
        return request,RevertToSnapshot_TaskResponseMsg()

    soapAction[''] = 'soap_RevertToSnapshot_Task'
    root[(RevertToSnapshot_TaskRequestMsg.typecode.nspname,RevertToSnapshot_TaskRequestMsg.typecode.pname)] = 'soap_RevertToSnapshot_Task'

    def soap_RemoveSnapshot(self, ps, **kw):
        request = ps.Parse(RemoveSnapshotRequestMsg.typecode)
        return request,RemoveSnapshotResponseMsg()

    soapAction[''] = 'soap_RemoveSnapshot'
    root[(RemoveSnapshotRequestMsg.typecode.nspname,RemoveSnapshotRequestMsg.typecode.pname)] = 'soap_RemoveSnapshot'

    def soap_RemoveSnapshot_Task(self, ps, **kw):
        request = ps.Parse(RemoveSnapshot_TaskRequestMsg.typecode)
        return request,RemoveSnapshot_TaskResponseMsg()

    soapAction[''] = 'soap_RemoveSnapshot_Task'
    root[(RemoveSnapshot_TaskRequestMsg.typecode.nspname,RemoveSnapshot_TaskRequestMsg.typecode.pname)] = 'soap_RemoveSnapshot_Task'

    def soap_RenameSnapshot(self, ps, **kw):
        request = ps.Parse(RenameSnapshotRequestMsg.typecode)
        return request,RenameSnapshotResponseMsg()

    soapAction[''] = 'soap_RenameSnapshot'
    root[(RenameSnapshotRequestMsg.typecode.nspname,RenameSnapshotRequestMsg.typecode.pname)] = 'soap_RenameSnapshot'

